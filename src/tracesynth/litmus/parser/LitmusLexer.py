# Generated from Litmus.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,25,374,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,
        1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,
        1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,
        11,1,11,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,3,13,110,8,
        13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
        15,1,15,3,15,269,8,15,1,16,3,16,272,8,16,1,16,4,16,275,8,16,11,16,
        12,16,276,1,17,1,17,1,17,1,17,3,17,283,8,17,1,18,1,18,1,18,1,18,
        1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,3,18,297,8,18,1,19,1,19,
        1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
        3,19,314,8,19,1,20,1,20,1,20,1,20,5,20,320,8,20,10,20,12,20,323,
        9,20,1,21,1,21,1,21,1,22,1,22,3,22,330,8,22,1,23,1,23,1,24,1,24,
        1,25,1,25,1,26,1,26,1,26,1,26,5,26,342,8,26,10,26,12,26,345,9,26,
        1,26,3,26,348,8,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,5,27,
        358,8,27,10,27,12,27,361,9,27,1,27,1,27,1,27,1,27,1,27,1,28,4,28,
        369,8,28,11,28,12,28,370,1,28,1,28,2,343,359,0,29,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
        16,33,17,35,18,37,19,39,20,41,21,43,22,45,0,47,0,49,0,51,0,53,23,
        55,24,57,25,1,0,3,2,0,43,43,45,45,1,0,48,57,3,0,9,10,13,13,32,32,
        446,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
        0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
        0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
        0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
        0,41,1,0,0,0,0,43,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,
        1,59,1,0,0,0,3,61,1,0,0,0,5,63,1,0,0,0,7,65,1,0,0,0,9,67,1,0,0,0,
        11,77,1,0,0,0,13,79,1,0,0,0,15,81,1,0,0,0,17,88,1,0,0,0,19,90,1,
        0,0,0,21,92,1,0,0,0,23,97,1,0,0,0,25,103,1,0,0,0,27,109,1,0,0,0,
        29,111,1,0,0,0,31,268,1,0,0,0,33,271,1,0,0,0,35,282,1,0,0,0,37,296,
        1,0,0,0,39,313,1,0,0,0,41,315,1,0,0,0,43,324,1,0,0,0,45,329,1,0,
        0,0,47,331,1,0,0,0,49,333,1,0,0,0,51,335,1,0,0,0,53,337,1,0,0,0,
        55,353,1,0,0,0,57,368,1,0,0,0,59,60,5,123,0,0,60,2,1,0,0,0,61,62,
        5,59,0,0,62,4,1,0,0,0,63,64,5,125,0,0,64,6,1,0,0,0,65,66,5,61,0,
        0,66,8,1,0,0,0,67,68,5,108,0,0,68,69,5,111,0,0,69,70,5,99,0,0,70,
        71,5,97,0,0,71,72,5,116,0,0,72,73,5,105,0,0,73,74,5,111,0,0,74,75,
        5,110,0,0,75,76,5,115,0,0,76,10,1,0,0,0,77,78,5,91,0,0,78,12,1,0,
        0,0,79,80,5,93,0,0,80,14,1,0,0,0,81,82,5,102,0,0,82,83,5,105,0,0,
        83,84,5,108,0,0,84,85,5,116,0,0,85,86,5,101,0,0,86,87,5,114,0,0,
        87,16,1,0,0,0,88,89,5,40,0,0,89,18,1,0,0,0,90,91,5,41,0,0,91,20,
        1,0,0,0,92,93,5,116,0,0,93,94,5,114,0,0,94,95,5,117,0,0,95,96,5,
        101,0,0,96,22,1,0,0,0,97,98,5,102,0,0,98,99,5,97,0,0,99,100,5,108,
        0,0,100,101,5,115,0,0,101,102,5,101,0,0,102,24,1,0,0,0,103,104,5,
        38,0,0,104,26,1,0,0,0,105,110,5,126,0,0,106,107,5,110,0,0,107,108,
        5,111,0,0,108,110,5,116,0,0,109,105,1,0,0,0,109,106,1,0,0,0,110,
        28,1,0,0,0,111,112,3,51,25,0,112,113,5,58,0,0,113,30,1,0,0,0,114,
        115,5,120,0,0,115,269,5,48,0,0,116,117,5,120,0,0,117,269,5,49,0,
        0,118,119,5,120,0,0,119,269,5,50,0,0,120,121,5,120,0,0,121,269,5,
        51,0,0,122,123,5,120,0,0,123,269,5,52,0,0,124,125,5,120,0,0,125,
        269,5,53,0,0,126,127,5,120,0,0,127,269,5,54,0,0,128,129,5,120,0,
        0,129,269,5,55,0,0,130,131,5,120,0,0,131,269,5,56,0,0,132,133,5,
        120,0,0,133,269,5,57,0,0,134,135,5,120,0,0,135,136,5,49,0,0,136,
        269,5,48,0,0,137,138,5,120,0,0,138,139,5,49,0,0,139,269,5,49,0,0,
        140,141,5,120,0,0,141,142,5,49,0,0,142,269,5,50,0,0,143,144,5,120,
        0,0,144,145,5,49,0,0,145,269,5,51,0,0,146,147,5,120,0,0,147,148,
        5,49,0,0,148,269,5,52,0,0,149,150,5,120,0,0,150,151,5,49,0,0,151,
        269,5,53,0,0,152,153,5,120,0,0,153,154,5,49,0,0,154,269,5,54,0,0,
        155,156,5,120,0,0,156,157,5,49,0,0,157,269,5,55,0,0,158,159,5,120,
        0,0,159,160,5,49,0,0,160,269,5,56,0,0,161,162,5,120,0,0,162,163,
        5,49,0,0,163,269,5,57,0,0,164,165,5,120,0,0,165,166,5,50,0,0,166,
        269,5,48,0,0,167,168,5,120,0,0,168,169,5,50,0,0,169,269,5,49,0,0,
        170,171,5,120,0,0,171,172,5,50,0,0,172,269,5,50,0,0,173,174,5,120,
        0,0,174,175,5,50,0,0,175,269,5,51,0,0,176,177,5,120,0,0,177,178,
        5,50,0,0,178,269,5,52,0,0,179,180,5,120,0,0,180,181,5,50,0,0,181,
        269,5,53,0,0,182,183,5,120,0,0,183,184,5,50,0,0,184,269,5,54,0,0,
        185,186,5,120,0,0,186,187,5,50,0,0,187,269,5,55,0,0,188,189,5,120,
        0,0,189,190,5,50,0,0,190,269,5,56,0,0,191,192,5,120,0,0,192,193,
        5,50,0,0,193,269,5,57,0,0,194,195,5,120,0,0,195,196,5,51,0,0,196,
        269,5,48,0,0,197,198,5,120,0,0,198,199,5,51,0,0,199,269,5,49,0,0,
        200,201,5,122,0,0,201,202,5,101,0,0,202,203,5,114,0,0,203,269,5,
        111,0,0,204,205,5,114,0,0,205,269,5,97,0,0,206,207,5,115,0,0,207,
        269,5,112,0,0,208,209,5,103,0,0,209,269,5,112,0,0,210,211,5,116,
        0,0,211,269,5,112,0,0,212,213,5,116,0,0,213,269,5,48,0,0,214,215,
        5,116,0,0,215,269,5,49,0,0,216,217,5,116,0,0,217,269,5,50,0,0,218,
        219,5,115,0,0,219,269,5,48,0,0,220,221,5,115,0,0,221,269,5,49,0,
        0,222,223,5,97,0,0,223,269,5,48,0,0,224,225,5,97,0,0,225,269,5,49,
        0,0,226,227,5,97,0,0,227,269,5,50,0,0,228,229,5,97,0,0,229,269,5,
        51,0,0,230,231,5,97,0,0,231,269,5,52,0,0,232,233,5,97,0,0,233,269,
        5,53,0,0,234,235,5,97,0,0,235,269,5,54,0,0,236,237,5,97,0,0,237,
        269,5,55,0,0,238,239,5,115,0,0,239,269,5,50,0,0,240,241,5,115,0,
        0,241,269,5,51,0,0,242,243,5,115,0,0,243,269,5,52,0,0,244,245,5,
        115,0,0,245,269,5,53,0,0,246,247,5,115,0,0,247,269,5,54,0,0,248,
        249,5,115,0,0,249,269,5,55,0,0,250,251,5,115,0,0,251,269,5,56,0,
        0,252,253,5,115,0,0,253,269,5,57,0,0,254,255,5,115,0,0,255,256,5,
        49,0,0,256,269,5,48,0,0,257,258,5,115,0,0,258,259,5,49,0,0,259,269,
        5,49,0,0,260,261,5,116,0,0,261,269,5,51,0,0,262,263,5,116,0,0,263,
        269,5,52,0,0,264,265,5,116,0,0,265,269,5,53,0,0,266,267,5,116,0,
        0,267,269,5,54,0,0,268,114,1,0,0,0,268,116,1,0,0,0,268,118,1,0,0,
        0,268,120,1,0,0,0,268,122,1,0,0,0,268,124,1,0,0,0,268,126,1,0,0,
        0,268,128,1,0,0,0,268,130,1,0,0,0,268,132,1,0,0,0,268,134,1,0,0,
        0,268,137,1,0,0,0,268,140,1,0,0,0,268,143,1,0,0,0,268,146,1,0,0,
        0,268,149,1,0,0,0,268,152,1,0,0,0,268,155,1,0,0,0,268,158,1,0,0,
        0,268,161,1,0,0,0,268,164,1,0,0,0,268,167,1,0,0,0,268,170,1,0,0,
        0,268,173,1,0,0,0,268,176,1,0,0,0,268,179,1,0,0,0,268,182,1,0,0,
        0,268,185,1,0,0,0,268,188,1,0,0,0,268,191,1,0,0,0,268,194,1,0,0,
        0,268,197,1,0,0,0,268,200,1,0,0,0,268,204,1,0,0,0,268,206,1,0,0,
        0,268,208,1,0,0,0,268,210,1,0,0,0,268,212,1,0,0,0,268,214,1,0,0,
        0,268,216,1,0,0,0,268,218,1,0,0,0,268,220,1,0,0,0,268,222,1,0,0,
        0,268,224,1,0,0,0,268,226,1,0,0,0,268,228,1,0,0,0,268,230,1,0,0,
        0,268,232,1,0,0,0,268,234,1,0,0,0,268,236,1,0,0,0,268,238,1,0,0,
        0,268,240,1,0,0,0,268,242,1,0,0,0,268,244,1,0,0,0,268,246,1,0,0,
        0,268,248,1,0,0,0,268,250,1,0,0,0,268,252,1,0,0,0,268,254,1,0,0,
        0,268,257,1,0,0,0,268,260,1,0,0,0,268,262,1,0,0,0,268,264,1,0,0,
        0,268,266,1,0,0,0,269,32,1,0,0,0,270,272,7,0,0,0,271,270,1,0,0,0,
        271,272,1,0,0,0,272,274,1,0,0,0,273,275,7,1,0,0,274,273,1,0,0,0,
        275,276,1,0,0,0,276,274,1,0,0,0,276,277,1,0,0,0,277,34,1,0,0,0,278,
        279,5,47,0,0,279,283,5,92,0,0,280,281,5,92,0,0,281,283,5,47,0,0,
        282,278,1,0,0,0,282,280,1,0,0,0,283,36,1,0,0,0,284,285,5,101,0,0,
        285,286,5,120,0,0,286,287,5,105,0,0,287,288,5,115,0,0,288,289,5,
        116,0,0,289,297,5,115,0,0,290,291,5,102,0,0,291,292,5,111,0,0,292,
        293,5,114,0,0,293,294,5,97,0,0,294,295,5,108,0,0,295,297,5,108,0,
        0,296,284,1,0,0,0,296,290,1,0,0,0,297,38,1,0,0,0,298,299,5,105,0,
        0,299,300,5,110,0,0,300,301,5,116,0,0,301,302,5,54,0,0,302,303,5,
        52,0,0,303,304,5,95,0,0,304,314,5,116,0,0,305,306,5,117,0,0,306,
        307,5,105,0,0,307,308,5,110,0,0,308,309,5,116,0,0,309,310,5,54,0,
        0,310,311,5,52,0,0,311,312,5,95,0,0,312,314,5,116,0,0,313,298,1,
        0,0,0,313,305,1,0,0,0,314,40,1,0,0,0,315,321,3,45,22,0,316,320,3,
        45,22,0,317,320,3,51,25,0,318,320,5,95,0,0,319,316,1,0,0,0,319,317,
        1,0,0,0,319,318,1,0,0,0,320,323,1,0,0,0,321,319,1,0,0,0,321,322,
        1,0,0,0,322,42,1,0,0,0,323,321,1,0,0,0,324,325,5,42,0,0,325,326,
        3,41,20,0,326,44,1,0,0,0,327,330,3,47,23,0,328,330,3,49,24,0,329,
        327,1,0,0,0,329,328,1,0,0,0,330,46,1,0,0,0,331,332,2,97,122,0,332,
        48,1,0,0,0,333,334,2,65,90,0,334,50,1,0,0,0,335,336,2,48,57,0,336,
        52,1,0,0,0,337,338,5,47,0,0,338,339,5,47,0,0,339,343,1,0,0,0,340,
        342,9,0,0,0,341,340,1,0,0,0,342,345,1,0,0,0,343,344,1,0,0,0,343,
        341,1,0,0,0,344,347,1,0,0,0,345,343,1,0,0,0,346,348,5,13,0,0,347,
        346,1,0,0,0,347,348,1,0,0,0,348,349,1,0,0,0,349,350,5,10,0,0,350,
        351,1,0,0,0,351,352,6,26,0,0,352,54,1,0,0,0,353,354,5,47,0,0,354,
        355,5,42,0,0,355,359,1,0,0,0,356,358,9,0,0,0,357,356,1,0,0,0,358,
        361,1,0,0,0,359,360,1,0,0,0,359,357,1,0,0,0,360,362,1,0,0,0,361,
        359,1,0,0,0,362,363,5,42,0,0,363,364,5,47,0,0,364,365,1,0,0,0,365,
        366,6,27,0,0,366,56,1,0,0,0,367,369,7,2,0,0,368,367,1,0,0,0,369,
        370,1,0,0,0,370,368,1,0,0,0,370,371,1,0,0,0,371,372,1,0,0,0,372,
        373,6,28,0,0,373,58,1,0,0,0,15,0,109,268,271,276,282,296,313,319,
        321,329,343,347,359,370,1,6,0,0
    ]

class LitmusLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    ADDR_OF = 13
    NOT = 14
    PID = 15
    REG = 16
    IMM = 17
    OP = 18
    QUANTIFIER = 19
    VAR_TYPE = 20
    VAR = 21
    POINTER = 22
    LINE_COMMENT = 23
    COMMENT = 24
    WS = 25

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{'", "';'", "'}'", "'='", "'locations'", "'['", "']'", "'filter'", 
            "'('", "')'", "'true'", "'false'", "'&'" ]

    symbolicNames = [ "<INVALID>",
            "ADDR_OF", "NOT", "PID", "REG", "IMM", "OP", "QUANTIFIER", "VAR_TYPE", 
            "VAR", "POINTER", "LINE_COMMENT", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "ADDR_OF", "NOT", 
                  "PID", "REG", "IMM", "OP", "QUANTIFIER", "VAR_TYPE", "VAR", 
                  "POINTER", "LETTER", "LOWER_LETTER", "UPPER_LETTER", "DIGIT", 
                  "LINE_COMMENT", "COMMENT", "WS" ]

    grammarFileName = "Litmus.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


