# Generated from PPO.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,10,245,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,
        1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,3,6,212,8,6,1,7,4,7,215,8,7,11,7,12,7,216,
        1,7,1,7,1,8,1,8,1,8,1,8,5,8,225,8,8,10,8,12,8,228,9,8,1,8,1,8,1,
        8,1,8,1,8,1,9,1,9,1,9,1,9,5,9,239,8,9,10,9,12,9,242,9,9,1,9,1,9,
        1,226,0,10,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,1,0,3,2,
        0,82,82,87,87,3,0,9,10,12,13,32,32,2,0,10,10,13,13,284,0,1,1,0,0,
        0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,
        13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,1,21,1,0,0,0,3,
        23,1,0,0,0,5,25,1,0,0,0,7,27,1,0,0,0,9,29,1,0,0,0,11,31,1,0,0,0,
        13,211,1,0,0,0,15,214,1,0,0,0,17,220,1,0,0,0,19,234,1,0,0,0,21,22,
        5,40,0,0,22,2,1,0,0,0,23,24,5,41,0,0,24,4,1,0,0,0,25,26,5,124,0,
        0,26,6,1,0,0,0,27,28,5,38,0,0,28,8,1,0,0,0,29,30,5,92,0,0,30,10,
        1,0,0,0,31,32,5,59,0,0,32,12,1,0,0,0,33,212,5,77,0,0,34,35,5,82,
        0,0,35,36,5,67,0,0,36,37,5,115,0,0,37,212,5,99,0,0,38,39,5,65,0,
        0,39,212,5,81,0,0,40,41,5,82,0,0,41,212,5,76,0,0,42,43,5,65,0,0,
        43,44,5,81,0,0,44,45,5,82,0,0,45,212,5,76,0,0,46,212,7,0,0,0,47,
        48,5,65,0,0,48,49,5,77,0,0,49,212,5,79,0,0,50,212,5,88,0,0,51,52,
        5,88,0,0,52,53,5,83,0,0,53,212,5,99,0,0,54,55,5,88,0,0,55,56,5,76,
        0,0,56,212,5,114,0,0,57,58,5,114,0,0,58,59,5,109,0,0,59,212,5,119,
        0,0,60,61,5,97,0,0,61,62,5,100,0,0,62,63,5,100,0,0,63,212,5,114,
        0,0,64,65,5,100,0,0,65,66,5,97,0,0,66,67,5,116,0,0,67,212,5,97,0,
        0,68,69,5,99,0,0,69,70,5,116,0,0,70,71,5,114,0,0,71,212,5,108,0,
        0,72,73,5,112,0,0,73,212,5,111,0,0,74,75,5,108,0,0,75,76,5,111,0,
        0,76,212,5,99,0,0,77,78,5,114,0,0,78,212,5,102,0,0,79,80,5,114,0,
        0,80,81,5,102,0,0,81,212,5,105,0,0,82,83,5,114,0,0,83,84,5,102,0,
        0,84,212,5,101,0,0,85,86,5,114,0,0,86,87,5,115,0,0,87,212,5,119,
        0,0,88,89,5,99,0,0,89,212,5,111,0,0,90,91,5,99,0,0,91,92,5,111,0,
        0,92,212,5,105,0,0,93,94,5,99,0,0,94,95,5,111,0,0,95,212,5,101,0,
        0,96,97,5,102,0,0,97,212,5,114,0,0,98,99,5,102,0,0,99,100,5,114,
        0,0,100,212,5,105,0,0,101,102,5,102,0,0,102,103,5,114,0,0,103,212,
        5,101,0,0,104,105,5,112,0,0,105,106,5,111,0,0,106,107,5,45,0,0,107,
        108,5,108,0,0,108,109,5,111,0,0,109,212,5,99,0,0,110,111,5,102,0,
        0,111,112,5,101,0,0,112,113,5,110,0,0,113,114,5,99,0,0,114,115,5,
        101,0,0,115,116,5,95,0,0,116,117,5,114,0,0,117,118,5,119,0,0,118,
        119,5,95,0,0,119,120,5,114,0,0,120,212,5,119,0,0,121,122,5,102,0,
        0,122,123,5,101,0,0,123,124,5,110,0,0,124,125,5,99,0,0,125,126,5,
        101,0,0,126,127,5,95,0,0,127,128,5,114,0,0,128,129,5,119,0,0,129,
        130,5,95,0,0,130,212,5,119,0,0,131,132,5,102,0,0,132,133,5,101,0,
        0,133,134,5,110,0,0,134,135,5,99,0,0,135,136,5,101,0,0,136,137,5,
        95,0,0,137,138,5,114,0,0,138,139,5,119,0,0,139,140,5,95,0,0,140,
        212,5,114,0,0,141,142,5,102,0,0,142,143,5,101,0,0,143,144,5,110,
        0,0,144,145,5,99,0,0,145,146,5,101,0,0,146,147,5,95,0,0,147,148,
        5,114,0,0,148,149,5,95,0,0,149,150,5,114,0,0,150,212,5,119,0,0,151,
        152,5,102,0,0,152,153,5,101,0,0,153,154,5,110,0,0,154,155,5,99,0,
        0,155,156,5,101,0,0,156,157,5,95,0,0,157,158,5,114,0,0,158,159,5,
        95,0,0,159,212,5,114,0,0,160,161,5,102,0,0,161,162,5,101,0,0,162,
        163,5,110,0,0,163,164,5,99,0,0,164,165,5,101,0,0,165,166,5,95,0,
        0,166,167,5,114,0,0,167,168,5,95,0,0,168,212,5,119,0,0,169,170,5,
        102,0,0,170,171,5,101,0,0,171,172,5,110,0,0,172,173,5,99,0,0,173,
        174,5,101,0,0,174,175,5,95,0,0,175,176,5,119,0,0,176,177,5,95,0,
        0,177,178,5,114,0,0,178,212,5,119,0,0,179,180,5,102,0,0,180,181,
        5,101,0,0,181,182,5,110,0,0,182,183,5,99,0,0,183,184,5,101,0,0,184,
        185,5,95,0,0,185,186,5,119,0,0,186,187,5,95,0,0,187,212,5,119,0,
        0,188,189,5,102,0,0,189,190,5,101,0,0,190,191,5,110,0,0,191,192,
        5,99,0,0,192,193,5,101,0,0,193,194,5,95,0,0,194,195,5,119,0,0,195,
        196,5,95,0,0,196,212,5,114,0,0,197,198,5,102,0,0,198,199,5,101,0,
        0,199,200,5,110,0,0,200,201,5,99,0,0,201,202,5,101,0,0,202,203,5,
        95,0,0,203,204,5,116,0,0,204,205,5,115,0,0,205,212,5,111,0,0,206,
        207,5,102,0,0,207,208,5,101,0,0,208,209,5,110,0,0,209,210,5,99,0,
        0,210,212,5,101,0,0,211,33,1,0,0,0,211,34,1,0,0,0,211,38,1,0,0,0,
        211,40,1,0,0,0,211,42,1,0,0,0,211,46,1,0,0,0,211,47,1,0,0,0,211,
        50,1,0,0,0,211,51,1,0,0,0,211,54,1,0,0,0,211,57,1,0,0,0,211,60,1,
        0,0,0,211,64,1,0,0,0,211,68,1,0,0,0,211,72,1,0,0,0,211,74,1,0,0,
        0,211,77,1,0,0,0,211,79,1,0,0,0,211,82,1,0,0,0,211,85,1,0,0,0,211,
        88,1,0,0,0,211,90,1,0,0,0,211,93,1,0,0,0,211,96,1,0,0,0,211,98,1,
        0,0,0,211,101,1,0,0,0,211,104,1,0,0,0,211,110,1,0,0,0,211,121,1,
        0,0,0,211,131,1,0,0,0,211,141,1,0,0,0,211,151,1,0,0,0,211,160,1,
        0,0,0,211,169,1,0,0,0,211,179,1,0,0,0,211,188,1,0,0,0,211,197,1,
        0,0,0,211,206,1,0,0,0,212,14,1,0,0,0,213,215,7,1,0,0,214,213,1,0,
        0,0,215,216,1,0,0,0,216,214,1,0,0,0,216,217,1,0,0,0,217,218,1,0,
        0,0,218,219,6,7,0,0,219,16,1,0,0,0,220,221,5,47,0,0,221,222,5,42,
        0,0,222,226,1,0,0,0,223,225,9,0,0,0,224,223,1,0,0,0,225,228,1,0,
        0,0,226,227,1,0,0,0,226,224,1,0,0,0,227,229,1,0,0,0,228,226,1,0,
        0,0,229,230,5,42,0,0,230,231,5,47,0,0,231,232,1,0,0,0,232,233,6,
        8,1,0,233,18,1,0,0,0,234,235,5,47,0,0,235,236,5,47,0,0,236,240,1,
        0,0,0,237,239,8,2,0,0,238,237,1,0,0,0,239,242,1,0,0,0,240,238,1,
        0,0,0,240,241,1,0,0,0,241,243,1,0,0,0,242,240,1,0,0,0,243,244,6,
        9,1,0,244,20,1,0,0,0,5,0,211,216,226,240,2,6,0,0,0,1,0
    ]

class PPOLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    RELATION = 7
    WS = 8
    COMMENT = 9
    LINE_COMMENT = 10

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'|'", "'&'", "'\\'", "';'" ]

    symbolicNames = [ "<INVALID>",
            "RELATION", "WS", "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "RELATION", 
                  "WS", "COMMENT", "LINE_COMMENT" ]

    grammarFileName = "PPO.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


