now is the 1 iteration
synth ppo by litmus test 0
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
validate: 2+2W+fence.r.rw+fence.rw.rw
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; , [x]=2; [y]=2; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.r.rwdWW/2+2W+fence.r.rw+fence.rw.rw.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.r.rwdWW/2+2W+fence.r.rw+fence.rw.rw.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x5=2; 0:x7=1; 1:x5=2; 1:x7=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> sw x5, 0(x6) ;
<0x04> fence r, rw  | <0x04> fence rw, rw ;
<0x08> sw x7, 0(x8) | <0x08> sw x7, 0(x8) ;

QType.Exists (x==2/\y==2)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
[x]=1; [y]=1;  => 1
[x]=1; [y]=2;  => 1
[x]=2; [y]=1;  => 1
[x]=2; [y]=2;  => 1
Time 2+2W+fence.r.rw+fence.rw.rw  0.0324s
#Executions: 24

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.r.rwdWW/2+2W+fence.r.rw+fence.rw.rw.litmus
b_minus_a: {[x]=2; [y]=2; }
1
strengthen,s,exe [x]=2; [y]=2;  [P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po', 'fence_r_rw']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'fence_r_rw')
now check the paths P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]
[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'fence_r_rw')]
from this path get ppo
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True
candidate_add_ppo W;po;W
all_rels
rel --: None P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po(e1,e2) and ra.W(e2)

add_rels
add rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['fence', 'po', 'fence_rw_rw']
add rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['po', 'fence_r_rw']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	(W), ['fence', 'po', 'fence_rw_rw']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_rw_rw')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_rw_rw')]]
need_check_ppo [W];fencerel(Fence.rw.rw);[W] target_ppo [W];po;[W]
need_check_ppo [W];po;[W] target_ppo [W];po;[W]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po', 'fence_r_rw']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'fence_r_rw')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'fence_r_rw')]]
need_check_ppo [W];po;[W] target_ppo [W];po;[W]
add_rels_final
add rel final P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['fence', 'po', 'fence_rw_rw']
add rel final P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['po', 'fence_r_rw']
check all rels
check rel --: None P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['fence', 'po', 'fence_rw_rw']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['po', 'fence_r_rw']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po', 'fence_r_rw']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'fence_r_rw')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'fence_r_rw')]]
need_check_ppo [W];po;[W] target_ppo [W];po;[W]
insert_path [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	(W), ['fence', 'po', 'fence_rw_rw']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_rw_rw')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_rw_rw')]]
need_check_ppo [W];fencerel(Fence.rw.rw);[W] target_ppo [W];po;[W]
need_check_ppo [W];po;[W] target_ppo [W];po;[W]
insert_path [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]
{}
filter_cycle [[P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	]]
ppo [W];po;[W]
e1 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
e2 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
cycle str
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	
start_relation coe
end relation coe
path_single_ppo [W];po;[W]
other_single_ppo coe;[W];fencerel(Fence.rw.rw);[W];coe
path_single_ppo justify [W];po;[W]
other_single_ppo justify coe;[W];fencerel(Fence.rw.rw);[W];coe
diy_cycle PodWW Coe Fence.rw.rwdWW Coe
from this path get ppo
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True
candidate_add_ppo W;fence_r_rw;W
all_rels
rel --: None P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)

add_rels
add rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['po', 'fence_r_rw']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po', 'fence_r_rw']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'fence_r_rw')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'fence_r_rw')]]
need_check_ppo [W];po;[W] target_ppo [W];fencerel(Fence.r.rw);[W]
need_check_ppo [W];fencerel(Fence.r.rw);[W] target_ppo [W];fencerel(Fence.r.rw);[W]
add_rels_final
add rel final P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['po', 'fence_r_rw']
check all rels
check rel --: None P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['fence', 'po', 'fence_rw_rw']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['po', 'fence_r_rw']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po', 'fence_r_rw']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'fence_r_rw')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'fence_r_rw')]]
need_check_ppo [W];po;[W] target_ppo [W];fencerel(Fence.r.rw);[W]
need_check_ppo [W];fencerel(Fence.r.rw);[W] target_ppo [W];fencerel(Fence.r.rw);[W]
insert_path [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, 'fence_r_rw')]
{}
filter_cycle [[P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	]]
ppo [W];fencerel(Fence.r.rw);[W]
e1 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
e2 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
cycle str
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	
start_relation coe
end relation coe
path_single_ppo [W];fencerel(Fence.r.rw);[W]
other_single_ppo coe;[W];fencerel(Fence.rw.rw);[W];coe
path_single_ppo justify [W];fencerel(Fence.r.rw);[W]
other_single_ppo justify coe;[W];fencerel(Fence.rw.rw);[W];coe
diy_cycle Fence.r.rwdWW Coe Fence.rw.rwdWW Coe
stengthen state, [x]=2; [y]=2;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd9832570> [P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdd997adb0>] False
{0:x5=2; 0:x7=1; 1:x5=2; 1:x7=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> sw x5, 0(x6) ;
<0x04> fence r, rw  | <0x04> fence rw, rw ;
<0x08> sw x7, 0(x8) | <0x08> sw x7, 0(x8) ;

QType.Exists (x==2/\y==2)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
[x]=1; [y]=1;  => 1
[x]=1; [y]=2;  => 1
[x]=2; [y]=1;  => 1
[x]=2; [y]=2;  => 1
Time 2+2W+fence.r.rw+fence.rw.rw  0.0078s
#Executions: 12

complete exe list
get new mm
uninit_func_list
new_mm start
init failed: 1
start synth
any_ppo size: 1
candidate_ppos size: 2
candidate_ppo: [W];fencerel(Fence.r.rw);[W], relax is False
ID: 0 cur candidate_ppo: [W];fencerel(Fence.r.rw);[W],relax is False
[W];fencerel(Fence.r.rw);[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [W];fencerel(Fence.r.rw);[W] contain_flag False can_relax_flag False
add ppo [W];fencerel(Fence.r.rw);[W] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]']
ppo [W];fencerel(Fence.r.rw);[W] index 0
[W];fencerel(Fence.r.rw);[W]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
ppo [W];fencerel(Fence.r.rw);[W]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.r.rw_W_Fence_r_rwdWW_Coe_Fence_rw_rwdWW_Coe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_fencerelFence.r.rw_W_Fence_r_rwdWW_Coe_Fence_rw_rwdWW_Coe': [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]}
now_herd_logs_ppo_remove {'W_fencerelFence.r.rw_W_Fence_r_rwdWW_Coe_Fence_rw_rwdWW_Coe': [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; , 0:x9=2; 1:x9=2; ]}
W_fencerelFence.r.rw_W_Fence_r_rwdWW_Coe_Fence_rw_rwdWW_Coe
[0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; , 0:x9=2; 1:x9=2; ]
[0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]
['W_fencerelFence.r.rw_W_Fence_r_rwdWW_Coe_Fence_rw_rwdWW_Coe']
check ppo [W];fencerel(Fence.r.rw);[W]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.r.rw_W_Fence_r_rwdWW_Coe_Fence_rw_rwdWW_Coe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: W_fencerelFence.r.rw_W_Fence_r_rwdWW_Coe_Fence_rw_rwdWW_Coe
herd: [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]
chip: [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]
check ppo [W];fencerel(Fence.r.rw);[W] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [W];fencerel(Fence.r.rw);[W]
start check
check counter ppo
ppo:[W];fencerel(Fence.r.rw);[W] => counter_ppo:
-----------------
ID0:candidate_ppo [W];fencerel(Fence.r.rw);[W]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.r.rwdWW/2+2W+fence.r.rw+fence.rw.rw.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.r.rw_W_Fence_r_rwdWW_Coe_Fence_rw_rwdWW_Coe.litmus
validate: 2+2W+fence.r.rw+fence.rw.rw
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
validate: W_fencerelFence.r.rw_W_Fence_r_rwdWW_Coe_Fence_rw_rwdWW_Coe
herd: [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]
chip: [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]
candidate_ppo: [W];fencerel(Fence.r.rw);[W], cur_failed_litmus_tests: [], passed? True

[W];fencerel(Fence.r.rw);[W] pass test
==== candidate ppo ====
[W];fencerel(Fence.r.rw);[W] [W];fencerel(Fence.r.rw);[W] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.r.rwdWW/2+2W+fence.r.rw+fence.rw.rw.litmus
synth ppo by litmus test 1
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
validate: R+fence.r.rw+fence.rw.rw
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
synth ppo by litmus test 2
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
validate: R+fence.rw.rw+fence.rw.w
herd: [1:x7=0; [y]=1; , 1:x7=0; [y]=2; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.rw.wdWR/R+fence.rw.rw+fence.rw.w.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.rw.wdWR/R+fence.rw.rw+fence.rw.w.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x5=1; 1:x5=2; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> sw x5, 0(x6) ;
<0x04> fence rw, rw | <0x04> fence rw, w  ;
<0x08> sw x5, 0(x7) | <0x08> lw x7, 0(x8) ;

QType.Exists (y==2/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x7=0; [y]=1;  => 1
1:x7=0; [y]=2;  => 1
1:x7=1; [y]=1;  => 1
1:x7=1; [y]=2;  => 1
Time R+fence.rw.rw+fence.rw.w  0.0155s
#Executions: 24

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.rw.wdWR/R+fence.rw.rw+fence.rw.w.litmus
b_minus_a: {1:x7=0; [y]=2; }
1
strengthen,s,exe 1:x7=0; [y]=2;  [P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_rw_w']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')
now check the paths P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')]
[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')]
from this path get ppo
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False
candidate_add_ppo W;po;R
all_rels
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_rw_w']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_rw_w']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
add_rels_final
add rel final P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_rw_w']
check all rels
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_rw_w']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_rw_w']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')]
{}
filter_cycle [[P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	]]
ppo [W];po;[R]
e1 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
e2 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
cycle str
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
cycle str after change
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
start_relation fre
end relation coe
path_single_ppo [W];po;[R]
other_single_ppo fre;[W];fencerel(Fence.rw.rw);[W];coe
path_single_ppo justify [W];po;[R]
other_single_ppo justify fre;[W];fencerel(Fence.rw.rw);[W];coe
diy_cycle PodWR Fre Fence.rw.rwdWW Coe
from this path get ppo
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False
candidate_add_ppo W;fence_rw_w;R
all_rels
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_rw_w']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_rw_w']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')]]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.rw.w);[R]
need_check_ppo [W];fencerel(Fence.rw.w);[R] target_ppo [W];fencerel(Fence.rw.w);[R]
add_rels_final
add rel final P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_rw_w']
check all rels
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_rw_w']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_rw_w']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')]]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.rw.w);[R]
need_check_ppo [W];fencerel(Fence.rw.w);[R] target_ppo [W];fencerel(Fence.rw.w);[R]
insert_path [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')]
{}
filter_cycle [[P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	]]
ppo [W];fencerel(Fence.rw.w);[R]
e1 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
e2 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
cycle str
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
cycle str after change
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
start_relation fre
end relation coe
path_single_ppo [W];fencerel(Fence.rw.w);[R]
other_single_ppo fre;[W];fencerel(Fence.rw.rw);[W];coe
path_single_ppo justify [W];fencerel(Fence.rw.w);[R]
other_single_ppo justify fre;[W];fencerel(Fence.rw.rw);[W];coe
diy_cycle Fence.rw.wdWR Fre Fence.rw.rwdWW Coe
stengthen state, 1:x7=0; [y]=2;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd9187ef0> [P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdda46fda0>] False
{0:x5=1; 1:x5=2; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> sw x5, 0(x6) ;
<0x04> fence rw, rw | <0x04> fence rw, w  ;
<0x08> sw x5, 0(x7) | <0x08> lw x7, 0(x8) ;

QType.Exists (y==2/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x7=0; [y]=1;  => 1
1:x7=0; [y]=2;  => 1
1:x7=1; [y]=1;  => 1
1:x7=1; [y]=2;  => 1
Time R+fence.rw.rw+fence.rw.w  0.0104s
#Executions: 12

complete exe list
get new mm
uninit_func_list
ppo_candidate_func38 W;fence_r_rw;W 
def ppo_candidate_func38(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
new_mm start
init failed: 1
start synth
any_ppo size: 1
candidate_ppos size: 2
candidate_ppo: [W];fencerel(Fence.rw.w);[R], relax is False
ID: 0 cur candidate_ppo: [W];fencerel(Fence.rw.w);[R],relax is False
[W];fencerel(Fence.rw.w);[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [W];fencerel(Fence.rw.w);[R] contain_flag False can_relax_flag False
add ppo [W];fencerel(Fence.rw.w);[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]']
ppo [W];fencerel(Fence.rw.w);[R] index 0
[W];fencerel(Fence.rw.w);[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
ppo [W];fencerel(Fence.rw.w);[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.rw.w_R_Fence_rw_wdWR_Fre_Fence_rw_rwdWW_Coe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_fencerelFence.rw.w_R_Fence_rw_wdWR_Fre_Fence_rw_rwdWW_Coe': [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]}
now_herd_logs_ppo_remove {'W_fencerelFence.rw.w_R_Fence_rw_wdWR_Fre_Fence_rw_rwdWW_Coe': [0:x7=0; 1:x9=1; , 0:x7=0; 1:x9=2; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]}
W_fencerelFence.rw.w_R_Fence_rw_wdWR_Fre_Fence_rw_rwdWW_Coe
[0:x7=0; 1:x9=1; , 0:x7=0; 1:x9=2; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
[0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
['W_fencerelFence.rw.w_R_Fence_rw_wdWR_Fre_Fence_rw_rwdWW_Coe']
check ppo [W];fencerel(Fence.rw.w);[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.rw.w_R_Fence_rw_wdWR_Fre_Fence_rw_rwdWW_Coe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: W_fencerelFence.rw.w_R_Fence_rw_wdWR_Fre_Fence_rw_rwdWW_Coe
herd: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
chip: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
check ppo [W];fencerel(Fence.rw.w);[R] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [W];fencerel(Fence.rw.w);[R]
start check
check counter ppo
ppo:[W];fencerel(Fence.rw.w);[R] => counter_ppo:
-----------------
ID0:candidate_ppo [W];fencerel(Fence.rw.w);[R]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.rw.wdWR/R+fence.rw.rw+fence.rw.w.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.rw.w_R_Fence_rw_wdWR_Fre_Fence_rw_rwdWW_Coe.litmus
validate: R+fence.rw.rw+fence.rw.w
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
validate: W_fencerelFence.rw.w_R_Fence_rw_wdWR_Fre_Fence_rw_rwdWW_Coe
herd: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
chip: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
candidate_ppo: [W];fencerel(Fence.rw.w);[R], cur_failed_litmus_tests: [], passed? True

[W];fencerel(Fence.rw.w);[R] pass test
==== candidate ppo ====
[W];fencerel(Fence.rw.w);[R] [W];fencerel(Fence.rw.w);[R] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.rw.wdWR/R+fence.rw.rw+fence.rw.w.litmus
synth ppo by litmus test 3
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
validate: R+fence.w.w+fence.rw.w
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
synth ppo by litmus test 4
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
validate: R+fence.w.w+fence.r.rw
herd: [1:x7=0; [y]=1; , 1:x7=0; [y]=2; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.r.rwdWR/R+fence.w.w+fence.r.rw.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.r.rwdWR/R+fence.w.w+fence.r.rw.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x5=1; 1:x5=2; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> sw x5, 0(x6) ;
<0x04> fence w, w   | <0x04> fence r, rw  ;
<0x08> sw x5, 0(x7) | <0x08> lw x7, 0(x8) ;

QType.Exists (y==2/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x7=0; [y]=1;  => 1
1:x7=0; [y]=2;  => 1
1:x7=1; [y]=1;  => 1
1:x7=1; [y]=2;  => 1
Time R+fence.w.w+fence.r.rw  0.0160s
#Executions: 24

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.r.rwdWR/R+fence.w.w+fence.r.rw.litmus
b_minus_a: {1:x7=0; [y]=2; }
1
strengthen,s,exe 1:x7=0; [y]=2;  [P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_r_rw']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_r_rw')
now check the paths P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')]
[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_r_rw')]
from this path get ppo
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False
candidate_add_ppo W;po;R
all_rels
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['fence', 'po', 'fence_w_w']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_r_rw']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_r_rw']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_r_rw')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_r_rw')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
add_rels_final
add rel final P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_r_rw']
check all rels
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['fence', 'po', 'fence_w_w']
check rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_r_rw']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_r_rw']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_r_rw')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_r_rw')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	]]
ppo [W];po;[R]
e1 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
e2 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
cycle str
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
start_relation fre
end relation coe
path_single_ppo [W];po;[R]
other_single_ppo fre;[W];fencerel(Fence.rw.rw);[W];coe
path_single_ppo justify [W];po;[R]
other_single_ppo justify fre;[W];fencerel(Fence.rw.rw);[W];coe
diy_cycle PodWR Fre Fence.rw.rwdWW Coe
from this path get ppo
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False
candidate_add_ppo W;fence_r_rw;R
all_rels
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['fence', 'po', 'fence_w_w']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_r_rw']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_r_rw']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_r_rw')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_r_rw')]]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.r.rw);[R]
need_check_ppo [W];fencerel(Fence.r.rw);[R] target_ppo [W];fencerel(Fence.r.rw);[R]
add_rels_final
add rel final P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_r_rw']
check all rels
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['fence', 'po', 'fence_w_w']
check rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_r_rw']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_r_rw']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_r_rw')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_r_rw')]]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.r.rw);[R]
need_check_ppo [W];fencerel(Fence.r.rw);[R] target_ppo [W];fencerel(Fence.r.rw);[R]
insert_path [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_r_rw')]
{}
filter_cycle [[P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	]]
ppo [W];fencerel(Fence.r.rw);[R]
e1 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
e2 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
cycle str
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
start_relation fre
end relation coe
path_single_ppo [W];fencerel(Fence.r.rw);[R]
other_single_ppo fre;[W];fencerel(Fence.rw.rw);[W];coe
path_single_ppo justify [W];fencerel(Fence.r.rw);[R]
other_single_ppo justify fre;[W];fencerel(Fence.rw.rw);[W];coe
diy_cycle Fence.r.rwdWR Fre Fence.rw.rwdWW Coe
stengthen state, 1:x7=0; [y]=2;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd9307a70> [P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdd8c13320>] False
{0:x5=1; 1:x5=2; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> sw x5, 0(x6) ;
<0x04> fence w, w   | <0x04> fence r, rw  ;
<0x08> sw x5, 0(x7) | <0x08> lw x7, 0(x8) ;

QType.Exists (y==2/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x7=0; [y]=1;  => 1
1:x7=0; [y]=2;  => 1
1:x7=1; [y]=1;  => 1
1:x7=1; [y]=2;  => 1
Time R+fence.w.w+fence.r.rw  0.0098s
#Executions: 12

complete exe list
get new mm
uninit_func_list
ppo_candidate_func38 W;fence_r_rw;W 
def ppo_candidate_func38(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func39 W;fence_rw_w;R 
def ppo_candidate_func39(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
new_mm start
init failed: 1
start synth
any_ppo size: 1
candidate_ppos size: 2
candidate_ppo: [W];fencerel(Fence.r.rw);[R], relax is False
ID: 0 cur candidate_ppo: [W];fencerel(Fence.r.rw);[R],relax is False
[W];fencerel(Fence.r.rw);[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [W];fencerel(Fence.r.rw);[R] contain_flag False can_relax_flag False
add ppo [W];fencerel(Fence.r.rw);[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]']
ppo [W];fencerel(Fence.r.rw);[R] index 0
[W];fencerel(Fence.r.rw);[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
ppo [W];fencerel(Fence.r.rw);[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.r.rw_R_Fence_r_rwdWR_Fre_Fence_rw_rwdWW_Coe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_fencerelFence.r.rw_R_Fence_r_rwdWR_Fre_Fence_rw_rwdWW_Coe': [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]}
now_herd_logs_ppo_remove {'W_fencerelFence.r.rw_R_Fence_r_rwdWR_Fre_Fence_rw_rwdWW_Coe': [0:x7=0; 1:x9=1; , 0:x7=0; 1:x9=2; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]}
W_fencerelFence.r.rw_R_Fence_r_rwdWR_Fre_Fence_rw_rwdWW_Coe
[0:x7=0; 1:x9=1; , 0:x7=0; 1:x9=2; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
[0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
['W_fencerelFence.r.rw_R_Fence_r_rwdWR_Fre_Fence_rw_rwdWW_Coe']
check ppo [W];fencerel(Fence.r.rw);[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.r.rw_R_Fence_r_rwdWR_Fre_Fence_rw_rwdWW_Coe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: W_fencerelFence.r.rw_R_Fence_r_rwdWR_Fre_Fence_rw_rwdWW_Coe
herd: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
chip: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
check ppo [W];fencerel(Fence.r.rw);[R] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [W];fencerel(Fence.r.rw);[R]
start check
check counter ppo
ppo:[W];fencerel(Fence.r.rw);[R] => counter_ppo:
-----------------
ID0:candidate_ppo [W];fencerel(Fence.r.rw);[R]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.r.rwdWR/R+fence.w.w+fence.r.rw.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.r.rw_R_Fence_r_rwdWR_Fre_Fence_rw_rwdWW_Coe.litmus
validate: R+fence.w.w+fence.r.rw
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
validate: W_fencerelFence.r.rw_R_Fence_r_rwdWR_Fre_Fence_rw_rwdWW_Coe
herd: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
chip: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
candidate_ppo: [W];fencerel(Fence.r.rw);[R], cur_failed_litmus_tests: [], passed? True

[W];fencerel(Fence.r.rw);[R] pass test
==== candidate ppo ====
[W];fencerel(Fence.r.rw);[R] [W];fencerel(Fence.r.rw);[R] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.r.rwdWR/R+fence.w.w+fence.r.rw.litmus
synth ppo by litmus test 5
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
validate: R+fence.rw.rw+fence.r.rw
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
synth ppo by litmus test 6
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
validate: S+fence.rw.rw+fence.w.w
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; , 1:x5=1; [x]=2; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.w.wdRW/S+fence.rw.rw+fence.w.w.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.w.wdRW/S+fence.rw.rw+fence.w.w.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x5=2; 0:x7=1; 1:x7=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> fence rw, rw | <0x04> fence w, w   ;
<0x08> sw x7, 0(x8) | <0x08> sw x7, 0(x8) ;

QType.Exists (x==2/\1:x5==1)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x5=0; [x]=1;  => 1
1:x5=0; [x]=2;  => 1
1:x5=1; [x]=1;  => 1
1:x5=1; [x]=2;  => 1
Time S+fence.rw.rw+fence.w.w  0.0146s
#Executions: 24

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.w.wdRW/S+fence.rw.rw+fence.w.w.litmus
b_minus_a: {1:x5=1; [x]=2; }
1
strengthen,s,exe 1:x5=1; [x]=2;  [P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po', 'fence_w_w']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_w_w')
now check the paths P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_w_w')]
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 False True
candidate_add_ppo R;po;W
all_rels
rel --: None P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.W(e2)

add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po', 'fence_w_w']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po', 'fence_w_w']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_w_w')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_w_w')]]
need_check_ppo [R];po;[W] target_ppo [R];po;[W]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po', 'fence_w_w']
check all rels
check rel --: None P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po', 'fence_w_w']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po', 'fence_w_w']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_w_w')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_w_w')]]
need_check_ppo [R];po;[W] target_ppo [R];po;[W]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]
{}
filter_cycle [[P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	]]
ppo [R];po;[W]
e1 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	
cycle str
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	
cycle str after change
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation coe
end relation rfe
path_single_ppo [R];po;[W]
other_single_ppo coe;[W];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [R];po;[W]
other_single_ppo justify coe;[W];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PodRW Coe Fence.rw.rwdWW Rfe
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 False True
candidate_add_ppo R;fence_w_w;W
all_rels
rel --: None P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_w(e1,e2) and ra.W(e2)

add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po', 'fence_w_w']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po', 'fence_w_w']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_w_w')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_w_w')]]
need_check_ppo [R];po;[W] target_ppo [R];fencerel(Fence.w.w);[W]
need_check_ppo [R];fencerel(Fence.w.w);[W] target_ppo [R];fencerel(Fence.w.w);[W]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po', 'fence_w_w']
check all rels
check rel --: None P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po', 'fence_w_w']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po', 'fence_w_w']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_w_w')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_w_w')]]
need_check_ppo [R];po;[W] target_ppo [R];fencerel(Fence.w.w);[W]
need_check_ppo [R];fencerel(Fence.w.w);[W] target_ppo [R];fencerel(Fence.w.w);[W]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, 'fence_w_w')]
{}
filter_cycle [[P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	]]
ppo [R];fencerel(Fence.w.w);[W]
e1 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	
cycle str
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	
cycle str after change
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation coe
end relation rfe
path_single_ppo [R];fencerel(Fence.w.w);[W]
other_single_ppo coe;[W];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [R];fencerel(Fence.w.w);[W]
other_single_ppo justify coe;[W];fencerel(Fence.rw.rw);[W];rfe
diy_cycle Fence.w.wdRW Coe Fence.rw.rwdWW Rfe
stengthen state, 1:x5=1; [x]=2;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd8cc6270> [P1: <0x08>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdd98954f0>] False
{0:x5=2; 0:x7=1; 1:x7=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> fence rw, rw | <0x04> fence w, w   ;
<0x08> sw x7, 0(x8) | <0x08> sw x7, 0(x8) ;

QType.Exists (x==2/\1:x5==1)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x5=0; [x]=1;  => 1
1:x5=0; [x]=2;  => 1
1:x5=1; [x]=1;  => 1
1:x5=1; [x]=2;  => 1
Time S+fence.rw.rw+fence.w.w  0.0098s
#Executions: 12

complete exe list
get new mm
uninit_func_list
ppo_candidate_func38 W;fence_r_rw;W 
def ppo_candidate_func38(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func39 W;fence_rw_w;R 
def ppo_candidate_func39(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func40 W;fence_r_rw;R 
def ppo_candidate_func40(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
new_mm start
init failed: 1
start synth
any_ppo size: 1
candidate_ppos size: 2
candidate_ppo: [R];fencerel(Fence.w.w);[W], relax is False
ID: 0 cur candidate_ppo: [R];fencerel(Fence.w.w);[W],relax is False
[R];fencerel(Fence.w.w);[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [R];fencerel(Fence.w.w);[W] contain_flag False can_relax_flag False
add ppo [R];fencerel(Fence.w.w);[W] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]']
ppo [R];fencerel(Fence.w.w);[W] index 0
[R];fencerel(Fence.w.w);[W]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
ppo [R];fencerel(Fence.w.w);[W]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_fencerelFence.w.w_W_Fence_w_wdRW_Coe_Fence_rw_rwdWW_Rfe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'R_fencerelFence.w.w_W_Fence_w_wdRW_Coe_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]}
now_herd_logs_ppo_remove {'R_fencerelFence.w.w_W_Fence_w_wdRW_Coe_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]}
R_fencerelFence.w.w_W_Fence_w_wdRW_Coe_Fence_rw_rwdWW_Rfe
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
['R_fencerelFence.w.w_W_Fence_w_wdRW_Coe_Fence_rw_rwdWW_Rfe']
check ppo [R];fencerel(Fence.w.w);[W]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_fencerelFence.w.w_W_Fence_w_wdRW_Coe_Fence_rw_rwdWW_Rfe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: R_fencerelFence.w.w_W_Fence_w_wdRW_Coe_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
chip: [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
check ppo [R];fencerel(Fence.w.w);[W] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [R];fencerel(Fence.w.w);[W]
start check
check counter ppo
ppo:[R];fencerel(Fence.w.w);[W] => counter_ppo:
-----------------
ID0:candidate_ppo [R];fencerel(Fence.w.w);[W]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.w.wdRW/S+fence.rw.rw+fence.w.w.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_fencerelFence.w.w_W_Fence_w_wdRW_Coe_Fence_rw_rwdWW_Rfe.litmus
validate: S+fence.rw.rw+fence.w.w
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
validate: R_fencerelFence.w.w_W_Fence_w_wdRW_Coe_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
chip: [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
candidate_ppo: [R];fencerel(Fence.w.w);[W], cur_failed_litmus_tests: [], passed? True

[R];fencerel(Fence.w.w);[W] pass test
==== candidate ppo ====
[R];fencerel(Fence.w.w);[W] [R];fencerel(Fence.w.w);[W] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.w.wdRW/S+fence.rw.rw+fence.w.w.litmus
synth ppo by litmus test 7
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
validate: MP+fence.r.rw+fence.rw.rw
herd: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
chip: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
synth ppo by litmus test 8
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
validate: MP+fence.rw.rw+fence.rw.w
herd: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=0; , 1:x5=1; 1:x7=1; ]
chip: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.rw.wdRR/MP+fence.rw.rw+fence.rw.w.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.rw.wdRR/MP+fence.rw.rw+fence.rw.w.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x5=1; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> fence rw, rw | <0x04> fence rw, w  ;
<0x08> sw x5, 0(x7) | <0x08> lw x7, 0(x8) ;

QType.Exists (1:x5==1/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x5=0; 1:x7=0;  => 1
1:x5=0; 1:x7=1;  => 1
1:x5=1; 1:x7=0;  => 1
1:x5=1; 1:x7=1;  => 1
Time MP+fence.rw.rw+fence.rw.w  0.0140s
#Executions: 18

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.rw.wdRR/MP+fence.rw.rw+fence.rw.w.litmus
b_minus_a: {1:x5=1; 1:x7=0; }
1
strengthen,s,exe 1:x5=1; 1:x7=0;  [P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_rw_w']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')
now check the paths P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')]
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')]
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 False False
candidate_add_ppo R;po;R
all_rels
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
rel --: None P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po', 'fence_rw_w']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_rw_w']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')]]
need_check_ppo [R];po;[R] target_ppo [R];po;[R]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po', 'fence_rw_w']
check all rels
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
check rel --: None P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po', 'fence_rw_w']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_rw_w']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')]]
need_check_ppo [R];po;[R] target_ppo [R];po;[R]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	]]
ppo [R];po;[R]
e1 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
cycle str
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
cycle str after change
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
start_relation fre
end relation rfe
path_single_ppo [R];po;[R]
other_single_ppo fre;[W];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [R];po;[R]
other_single_ppo justify fre;[W];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PodRR Fre Fence.rw.rwdWW Rfe
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 False False
candidate_add_ppo R;fence_rw_w;R
all_rels
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
rel --: None P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po', 'fence_rw_w']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_rw_w']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')]]
need_check_ppo [R];po;[R] target_ppo [R];fencerel(Fence.rw.w);[R]
need_check_ppo [R];fencerel(Fence.rw.w);[R] target_ppo [R];fencerel(Fence.rw.w);[R]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po', 'fence_rw_w']
check all rels
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
check rel --: None P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po', 'fence_rw_w']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_rw_w']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')]]
need_check_ppo [R];po;[R] target_ppo [R];fencerel(Fence.rw.w);[R]
need_check_ppo [R];fencerel(Fence.rw.w);[R] target_ppo [R];fencerel(Fence.rw.w);[R]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_rw_w')]
{}
filter_cycle [[P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	]]
ppo [R];fencerel(Fence.rw.w);[R]
e1 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
cycle str
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
cycle str after change
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	
start_relation fre
end relation rfe
path_single_ppo [R];fencerel(Fence.rw.w);[R]
other_single_ppo fre;[W];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [R];fencerel(Fence.rw.w);[R]
other_single_ppo justify fre;[W];fencerel(Fence.rw.rw);[W];rfe
diy_cycle Fence.rw.wdRR Fre Fence.rw.rwdWW Rfe
stengthen state, 1:x5=1; 1:x7=0;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd867f9b0> [P1: <0x08>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x08>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acddb1e7980>] False
{0:x5=1; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> fence rw, rw | <0x04> fence rw, w  ;
<0x08> sw x5, 0(x7) | <0x08> lw x7, 0(x8) ;

QType.Exists (1:x5==1/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x5=0; 1:x7=0;  => 1
1:x5=0; 1:x7=1;  => 1
1:x5=1; 1:x7=0;  => 1
1:x5=1; 1:x7=1;  => 1
Time MP+fence.rw.rw+fence.rw.w  0.0100s
#Executions: 9

complete exe list
get new mm
uninit_func_list
ppo_candidate_func38 W;fence_r_rw;W 
def ppo_candidate_func38(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func39 W;fence_rw_w;R 
def ppo_candidate_func39(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func40 W;fence_r_rw;R 
def ppo_candidate_func40(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func41 R;fence_w_w;W 
def ppo_candidate_func41(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_w(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
new_mm start
init failed: 1
start synth
any_ppo size: 1
candidate_ppos size: 2
candidate_ppo: [R];po;[R], relax is False
candidate_ppo: [R];fencerel(Fence.rw.w);[R], relax is False
ID: 0 cur candidate_ppo: [R];po;[R],relax is False
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [R];po;[R] contain_flag False can_relax_flag False
add ppo [R];po;[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '([R];po\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])']
ppo [R];po;[R] index 0
[R];po;[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
ppo [R];po;[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]}
R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
['R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe']
ID: 1 cur candidate_ppo: [R];fencerel(Fence.rw.w);[R],relax is False
[R];fencerel(Fence.rw.w);[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [R];fencerel(Fence.rw.w);[R] contain_flag False can_relax_flag False
add ppo [R];fencerel(Fence.rw.w);[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]']
R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe.litmus
ppo [R];fencerel(Fence.rw.w);[R] index 0
[R];fencerel(Fence.rw.w);[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
ppo [R];fencerel(Fence.rw.w);[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_fencerelFence.rw.w_R_Fence_rw_wdRR_Fre_Fence_rw_rwdWW_Rfe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'R_fencerelFence.rw.w_R_Fence_rw_wdRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'R_fencerelFence.rw.w_R_Fence_rw_wdRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]}
R_fencerelFence.rw.w_R_Fence_rw_wdRR_Fre_Fence_rw_rwdWW_Rfe
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
['R_fencerelFence.rw.w_R_Fence_rw_wdRR_Fre_Fence_rw_rwdWW_Rfe']
check ppo [R];po;[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
validate: R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
chip: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe.litmus
check ppo [R];po;[R] False
check ppo [R];fencerel(Fence.rw.w);[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_fencerelFence.rw.w_R_Fence_rw_wdRR_Fre_Fence_rw_rwdWW_Rfe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: R_fencerelFence.rw.w_R_Fence_rw_wdRR_Fre_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
chip: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
check ppo [R];fencerel(Fence.rw.w);[R] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [R];fencerel(Fence.rw.w);[R]
start check
check counter ppo
ppo:[R];fencerel(Fence.rw.w);[R] => counter_ppo:
-----------------
ID0:candidate_ppo [R];fencerel(Fence.rw.w);[R]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.rw.wdRR/MP+fence.rw.rw+fence.rw.w.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_fencerelFence.rw.w_R_Fence_rw_wdRR_Fre_Fence_rw_rwdWW_Rfe.litmus
validate: MP+fence.rw.rw+fence.rw.w
herd: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
chip: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
validate: R_fencerelFence.rw.w_R_Fence_rw_wdRR_Fre_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
chip: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
candidate_ppo: [R];fencerel(Fence.rw.w);[R], cur_failed_litmus_tests: [], passed? True

[R];fencerel(Fence.rw.w);[R] pass test
==== candidate ppo ====
[R];fencerel(Fence.rw.w);[R] [R];fencerel(Fence.rw.w);[R] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/RELAX/Fence.rw.wdRR/MP+fence.rw.rw+fence.rw.w.litmus
synth ppo by litmus test 9
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: SB+fence.rw.w+fence.rw.rw
herd: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
synth ppo by litmus test 10
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: 2+2W+fence.r.rw+fence.rw.w
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
synth ppo by litmus test 11
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: MP+fence.rw.ws
herd: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
chip: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
synth ppo by litmus test 12
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: S+fence.r.rw+fence.rw.rw
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
synth ppo by litmus test 13
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: SB+fence.r.rws
herd: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
synth ppo by litmus test 14
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: LB+fence.r.rw+fence.w.w
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
synth ppo by litmus test 15
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: R+fence.rw.ws
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
synth ppo by litmus test 16
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: S+fence.r.rws
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
synth ppo by litmus test 17
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: S+fence.w.ws
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
synth ppo by litmus test 18
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: LB+fence.w.ws
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
synth ppo by litmus test 19
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: LB+fence.w.w+fence.rw.w
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
synth ppo by litmus test 20
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: R+fence.rw.w+fence.r.rw
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
synth ppo by litmus test 21
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: LB+fence.w.w+fence.rw.rw
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
synth ppo by litmus test 22
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: MP+fence.w.w+fence.rw.w
herd: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
chip: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
synth ppo by litmus test 23
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: SB+fence.r.rw+fence.rw.rw
herd: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
synth ppo by litmus test 24
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: S+fence.r.rw+fence.rw.w
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
synth ppo by litmus test 25
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
validate: MP+fence.rw.rw+ctrlfence.w.r
herd: [1:x5=0; 1:x9=0; , 1:x5=0; 1:x9=1; , 1:x5=1; 1:x9=0; , 1:x5=1; 1:x9=1; ]
chip: [1:x5=0; 1:x9=0; , 1:x5=0; 1:x9=1; , 1:x5=1; 1:x9=1; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/MP+fence.rw.rw+ctrlfence.w.r.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/MP+fence.rw.rw+ctrlfence.w.r.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
         P0          |           P1            ;
<0x00> ori x5, x0, 1 | <0x00> lw x5, 0(x6)     ;
<0x04> sw x5, 0(x6)  | <0x04> bne x5, x0, LC00 ;
<0x08> fence rw, rw  | LC00:                   ;
<0x0C> ori x7, x0, 1 | <0x08> fence w, r       ;
<0x10> sw x7, 0(x8)  | <0x0C> lw x9, 0(x8)     ;

QType.Exists (1:x5==1/\1:x9==0)

Progress [1/2]: |██████████████████████████████████████████████████| 100.0%Progress [2/2]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x5=0; 1:x9=0;  => 1
1:x5=0; 1:x9=1;  => 1
1:x5=1; 1:x9=0;  => 1
1:x5=1; 1:x9=1;  => 1
Time MP+fence.rw.rw+ctrlfence.w.r  0.0323s
#Executions: 36

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/MP+fence.rw.rw+ctrlfence.w.r.litmus
b_minus_a: {1:x5=1; 1:x9=0; }
1
strengthen,s,exe 1:x5=1; 1:x9=0;  [P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	(R), ['ctrl', 'po', 'fence_w_r']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')
now check the paths P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')]
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')]
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')]
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 False False
candidate_add_ppo R;ctrl;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.ctrl(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 False False ['ctrl', 'po', 'fence_w_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	(R), ['ctrl', 'po', 'fence_w_r']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')]]
need_check_ppo [R];ctrl;[R] target_ppo [R];ctrl;[R]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 False False ['ctrl', 'po', 'fence_w_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 False False ['ctrl', 'po', 'fence_w_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	(R), ['ctrl', 'po', 'fence_w_r']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')]]
need_check_ppo [R];ctrl;[R] target_ppo [R];ctrl;[R]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')]
{}
filter_cycle [[P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	]]
ppo [R];ctrl;[R]
e1 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	
cycle str
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
start_relation fre
end relation rfe
path_single_ppo [R];ctrl;[R]
other_single_ppo fre;[W];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [R];ctrl;[R]
other_single_ppo justify fre;[W];fencerel(Fence.rw.rw);[W];rfe
diy_cycle DpCtrldR Fre Fence.rw.rwdWW Rfe
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 False False
candidate_add_ppo R;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 False False ['ctrl', 'po', 'fence_w_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	(R), ['ctrl', 'po', 'fence_w_r']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')]]
need_check_ppo [R];ctrl;[R] target_ppo [R];po;[R]
need_check_ppo [R];po;[R] target_ppo [R];po;[R]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 False False ['ctrl', 'po', 'fence_w_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 False False ['ctrl', 'po', 'fence_w_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	(R), ['ctrl', 'po', 'fence_w_r']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')]]
need_check_ppo [R];ctrl;[R] target_ppo [R];po;[R]
need_check_ppo [R];po;[R] target_ppo [R];po;[R]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')]
{}
filter_cycle [[P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	]]
ppo [R];po;[R]
e1 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	
cycle str
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
start_relation fre
end relation rfe
path_single_ppo [R];po;[R]
other_single_ppo fre;[W];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [R];po;[R]
other_single_ppo justify fre;[W];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PodRR Fre Fence.rw.rwdWW Rfe
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 False False
candidate_add_ppo R;fence_w_r;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_r(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 False False ['ctrl', 'po', 'fence_w_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	(R), ['ctrl', 'po', 'fence_w_r']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')]]
need_check_ppo [R];ctrl;[R] target_ppo [R];fencerel(Fence.w.r);[R]
need_check_ppo [R];po;[R] target_ppo [R];fencerel(Fence.w.r);[R]
need_check_ppo [R];fencerel(Fence.w.r);[R] target_ppo [R];fencerel(Fence.w.r);[R]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 False False ['ctrl', 'po', 'fence_w_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	 False False ['ctrl', 'po', 'fence_w_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	(R), ['ctrl', 'po', 'fence_w_r']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'ctrl')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')]]
need_check_ppo [R];ctrl;[R] target_ppo [R];fencerel(Fence.w.r);[R]
need_check_ppo [R];po;[R] target_ppo [R];fencerel(Fence.w.r);[R]
need_check_ppo [R];fencerel(Fence.w.r);[R] target_ppo [R];fencerel(Fence.w.r);[R]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, 'fence_w_r')]
{}
filter_cycle [[P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	]]
ppo [R];fencerel(Fence.w.r);[R]
e1 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	
cycle str
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
start_relation fre
end relation rfe
path_single_ppo [R];fencerel(Fence.w.r);[R]
other_single_ppo fre;[W];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [R];fencerel(Fence.w.r);[R]
other_single_ppo justify fre;[W];fencerel(Fence.rw.rw);[W];rfe
diy_cycle Fence.w.rdRR Fre Fence.rw.rwdWW Rfe
stengthen state, 1:x5=1; 1:x9=0;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd7f53dd0> [P1: <0x0C>	lw x9_p1_1, 0(x8_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdd7b0e150>] False
{0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
         P0          |           P1            ;
<0x00> ori x5, x0, 1 | <0x00> lw x5, 0(x6)     ;
<0x04> sw x5, 0(x6)  | <0x04> bne x5, x0, LC00 ;
<0x08> fence rw, rw  | LC00:                   ;
<0x0C> ori x7, x0, 1 | <0x08> fence w, r       ;
<0x10> sw x7, 0(x8)  | <0x0C> lw x9, 0(x8)     ;

QType.Exists (1:x5==1/\1:x9==0)

Progress [1/2]: |██████████████████████████████████████████████████| 100.0%Progress [2/2]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x5=0; 1:x9=0;  => 1
1:x5=0; 1:x9=1;  => 1
1:x5=1; 1:x9=0;  => 1
1:x5=1; 1:x9=1;  => 1
Time MP+fence.rw.rw+ctrlfence.w.r  0.0183s
#Executions: 18

complete exe list
get new mm
uninit_func_list
ppo_candidate_func38 W;fence_r_rw;W 
def ppo_candidate_func38(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func39 W;fence_rw_w;R 
def ppo_candidate_func39(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func40 W;fence_r_rw;R 
def ppo_candidate_func40(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func41 R;fence_w_w;W 
def ppo_candidate_func41(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_w(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func42 R;fence_rw_w;R 
def ppo_candidate_func42(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
new_mm start
init failed: 1
start synth
any_ppo size: 1
candidate_ppos size: 3
candidate_ppo: [R];po;[R], relax is False
candidate_ppo: [R];ctrl;[R], relax is False
candidate_ppo: [R];fencerel(Fence.w.r);[R], relax is False
ID: 0 cur candidate_ppo: [R];po;[R],relax is False
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [R];po;[R] contain_flag False can_relax_flag False
add ppo [R];po;[R] PPOValidFlag.Invalid
ID: 1 cur candidate_ppo: [R];ctrl;[R],relax is False
[R];ctrl;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [R];ctrl;[R] contain_flag False can_relax_flag False
add ppo [R];ctrl;[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];ctrl;[R]']
ppo [R];ctrl;[R] index 0
[R];ctrl;[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];ctrl;[R]
ppo [R];ctrl;[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_ctrl_R_DpCtrldR_Fre_Fence_rw_rwdWW_Rfe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'R_ctrl_R_DpCtrldR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'R_ctrl_R_DpCtrldR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]}
R_ctrl_R_DpCtrldR_Fre_Fence_rw_rwdWW_Rfe
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
['R_ctrl_R_DpCtrldR_Fre_Fence_rw_rwdWW_Rfe']
ID: 2 cur candidate_ppo: [R];fencerel(Fence.w.r);[R],relax is False
[R];fencerel(Fence.w.r);[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [R];fencerel(Fence.w.r);[R] contain_flag False can_relax_flag False
add ppo [R];fencerel(Fence.w.r);[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]']
R_ctrl_R_DpCtrldR_Fre_Fence_rw_rwdWW_Rfe.litmus
ppo [R];fencerel(Fence.w.r);[R] index 0
[R];fencerel(Fence.w.r);[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
ppo [R];fencerel(Fence.w.r);[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_fencerelFence.w.r_R_Fence_w_rdRR_Fre_Fence_rw_rwdWW_Rfe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'R_fencerelFence.w.r_R_Fence_w_rdRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'R_fencerelFence.w.r_R_Fence_w_rdRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]}
R_fencerelFence.w.r_R_Fence_w_rdRR_Fre_Fence_rw_rwdWW_Rfe
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
['R_fencerelFence.w.r_R_Fence_w_rdRR_Fre_Fence_rw_rwdWW_Rfe']
check ppo [R];ctrl;[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_ctrl_R_DpCtrldR_Fre_Fence_rw_rwdWW_Rfe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: R_ctrl_R_DpCtrldR_Fre_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
chip: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; , 0:x5=1; 0:x7=0; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_ctrl_R_DpCtrldR_Fre_Fence_rw_rwdWW_Rfe.litmus
check ppo [R];ctrl;[R] False
check ppo [R];fencerel(Fence.w.r);[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_fencerelFence.w.r_R_Fence_w_rdRR_Fre_Fence_rw_rwdWW_Rfe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: R_fencerelFence.w.r_R_Fence_w_rdRR_Fre_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
chip: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
check ppo [R];fencerel(Fence.w.r);[R] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [R];fencerel(Fence.w.r);[R]
start check
check counter ppo
ppo:[R];fencerel(Fence.w.r);[R] => counter_ppo:
-----------------
ID0:candidate_ppo [R];fencerel(Fence.w.r);[R]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/MP+fence.rw.rw+ctrlfence.w.r.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_fencerelFence.w.r_R_Fence_w_rdRR_Fre_Fence_rw_rwdWW_Rfe.litmus
validate: MP+fence.rw.rw+ctrlfence.w.r
herd: [1:x5=0; 1:x9=0; , 1:x5=0; 1:x9=1; , 1:x5=1; 1:x9=1; ]
chip: [1:x5=0; 1:x9=0; , 1:x5=0; 1:x9=1; , 1:x5=1; 1:x9=1; ]
validate: R_fencerelFence.w.r_R_Fence_w_rdRR_Fre_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
chip: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
candidate_ppo: [R];fencerel(Fence.w.r);[R], cur_failed_litmus_tests: [], passed? True

[R];fencerel(Fence.w.r);[R] pass test
==== candidate ppo ====
[R];fencerel(Fence.w.r);[R] [R];fencerel(Fence.w.r);[R] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/MP+fence.rw.rw+ctrlfence.w.r.litmus
synth ppo by litmus test 26
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
validate: 2+2W+fence.r.rw+fence.w.w
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
synth ppo by litmus test 27
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
validate: S+fence.rw.w+fence.w.w
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
synth ppo by litmus test 28
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
validate: 2+2W+fence.r.rws
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
synth ppo by litmus test 29
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
validate: SB+fence.rw.ws
herd: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
synth ppo by litmus test 30
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
validate: MP+fence.r.rws
herd: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
chip: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
synth ppo by litmus test 31
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
validate: LB+fence.w.w+ctrl
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
synth ppo by litmus test 32
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
validate: S+fence.r.rw+addr
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
synth ppo by litmus test 33
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
validate: MP+fence.r.rw+addr
herd: [1:x5=0; 1:x8=0; , 1:x5=0; 1:x8=1; , 1:x5=1; 1:x8=1; ]
chip: [1:x5=0; 1:x8=0; , 1:x5=0; 1:x8=1; , 1:x5=1; 1:x8=1; ]
synth ppo by litmus test 34
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
validate: LB+fence.w.w+addr
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
synth ppo by litmus test 35
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
validate: S+fence.r.rw+data
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
synth ppo by litmus test 36
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
validate: R+fence.w.w+fence.tso
herd: [1:x7=0; [y]=1; , 1:x7=0; [y]=2; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/R+fence.w.w+fence.tso.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/R+fence.w.w+fence.tso.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
         P0          |         P1           ;
<0x00> ori x5, x0, 1 | <0x00> ori x5, x0, 2 ;
<0x04> sw x5, 0(x6)  | <0x04> sw x5, 0(x6)  ;
<0x08> fence w, w    | <0x08> fence.tso     ;
<0x0C> ori x7, x0, 1 | <0x0C> lw x7, 0(x8)  ;
<0x10> sw x7, 0(x8)  |                      ;

QType.Exists (y==2/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x7=0; [y]=1;  => 1
1:x7=0; [y]=2;  => 1
1:x7=1; [y]=1;  => 1
1:x7=1; [y]=2;  => 1
Time R+fence.w.w+fence.tso  0.0223s
#Executions: 24

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/R+fence.w.w+fence.tso.litmus
b_minus_a: {1:x7=0; [y]=2; }
1
strengthen,s,exe 1:x7=0; [y]=2;  [P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_tso']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_tso')
now check the paths P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'po')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_tso')]
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 True False
candidate_add_ppo W;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_w_w']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_tso']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_tso']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_tso')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_tso')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
add_rels_final
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_tso']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_w_w']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_tso']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_tso']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_tso')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_tso')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	]]
ppo [W];po;[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	
cycle str
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	
cycle str after change
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
start_relation fre
end relation coe
path_single_ppo [W];po;[R]
other_single_ppo fre;[W];fencerel(Fence.rw.rw);[W];coe
path_single_ppo justify [W];po;[R]
other_single_ppo justify fre;[W];fencerel(Fence.rw.rw);[W];coe
diy_cycle PodWR Fre Fence.rw.rwdWW Coe
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 True False
candidate_add_ppo W;fence_tso;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_w_w']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_tso(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_tso']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_tso']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_tso')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_tso')]]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.tso);[R]
need_check_ppo [W];fencerel(Fence.tso);[R] target_ppo [W];fencerel(Fence.tso);[R]
add_rels_final
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_tso']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	 True True ['fence', 'po', 'fence_w_w']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	 True False ['po', 'fence_tso']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po', 'fence_tso']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_tso')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_tso')]]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.tso);[R]
need_check_ppo [W];fencerel(Fence.tso);[R] target_ppo [W];fencerel(Fence.tso);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, 'fence_tso')]
{}
filter_cycle [[P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	]]
ppo [W];fencerel(Fence.tso);[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	
cycle str
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	
cycle str after change
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	
start_relation fre
end relation coe
path_single_ppo [W];fencerel(Fence.tso);[R]
other_single_ppo fre;[W];fencerel(Fence.rw.rw);[W];coe
path_single_ppo justify [W];fencerel(Fence.tso);[R]
other_single_ppo justify fre;[W];fencerel(Fence.rw.rw);[W];coe
diy_cycle Fence.tsodWR Fre Fence.rw.rwdWW Coe
stengthen state, 1:x7=0; [y]=2;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd79136b0> [P1: <0x0C>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	sw x7_p0_1, 0(x8_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdd8088170>] False
{0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
         P0          |         P1           ;
<0x00> ori x5, x0, 1 | <0x00> ori x5, x0, 2 ;
<0x04> sw x5, 0(x6)  | <0x04> sw x5, 0(x6)  ;
<0x08> fence w, w    | <0x08> fence.tso     ;
<0x0C> ori x7, x0, 1 | <0x0C> lw x7, 0(x8)  ;
<0x10> sw x7, 0(x8)  |                      ;

QType.Exists (y==2/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x7=0; [y]=1;  => 1
1:x7=0; [y]=2;  => 1
1:x7=1; [y]=1;  => 1
1:x7=1; [y]=2;  => 1
Time R+fence.w.w+fence.tso  0.0108s
#Executions: 12

complete exe list
get new mm
uninit_func_list
ppo_candidate_func38 W;fence_r_rw;W 
def ppo_candidate_func38(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func39 W;fence_rw_w;R 
def ppo_candidate_func39(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func40 W;fence_r_rw;R 
def ppo_candidate_func40(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func41 R;fence_w_w;W 
def ppo_candidate_func41(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_w(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func42 R;fence_rw_w;R 
def ppo_candidate_func42(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func43 R;fence_w_r;R 
def ppo_candidate_func43(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_r(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
new_mm start
init failed: 1
start synth
any_ppo size: 1
candidate_ppos size: 2
candidate_ppo: [W];fencerel(Fence.tso);[R], relax is False
ID: 0 cur candidate_ppo: [W];fencerel(Fence.tso);[R],relax is False
[W];fencerel(Fence.tso);[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [W];fencerel(Fence.tso);[R] contain_flag False can_relax_flag False
add ppo [W];fencerel(Fence.tso);[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]']
ppo [W];fencerel(Fence.tso);[R] index 0
[W];fencerel(Fence.tso);[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
ppo [W];fencerel(Fence.tso);[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.tso_R_Fence_tsodWR_Fre_Fence_rw_rwdWW_Coe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_fencerelFence.tso_R_Fence_tsodWR_Fre_Fence_rw_rwdWW_Coe': [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]}
now_herd_logs_ppo_remove {'W_fencerelFence.tso_R_Fence_tsodWR_Fre_Fence_rw_rwdWW_Coe': [0:x7=0; 1:x9=1; , 0:x7=0; 1:x9=2; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]}
W_fencerelFence.tso_R_Fence_tsodWR_Fre_Fence_rw_rwdWW_Coe
[0:x7=0; 1:x9=1; , 0:x7=0; 1:x9=2; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
[0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
['W_fencerelFence.tso_R_Fence_tsodWR_Fre_Fence_rw_rwdWW_Coe']
check ppo [W];fencerel(Fence.tso);[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.tso_R_Fence_tsodWR_Fre_Fence_rw_rwdWW_Coe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: W_fencerelFence.tso_R_Fence_tsodWR_Fre_Fence_rw_rwdWW_Coe
herd: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
chip: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
check ppo [W];fencerel(Fence.tso);[R] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [W];fencerel(Fence.tso);[R]
start check
check counter ppo
ppo:[W];fencerel(Fence.tso);[R] => counter_ppo:
-----------------
ID0:candidate_ppo [W];fencerel(Fence.tso);[R]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/R+fence.w.w+fence.tso.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.tso_R_Fence_tsodWR_Fre_Fence_rw_rwdWW_Coe.litmus
validate: R+fence.w.w+fence.tso
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
validate: W_fencerelFence.tso_R_Fence_tsodWR_Fre_Fence_rw_rwdWW_Coe
herd: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
chip: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
candidate_ppo: [W];fencerel(Fence.tso);[R], cur_failed_litmus_tests: [], passed? True

[W];fencerel(Fence.tso);[R] pass test
==== candidate ppo ====
[W];fencerel(Fence.tso);[R] [W];fencerel(Fence.tso);[R] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/R+fence.w.w+fence.tso.litmus
synth ppo by litmus test 37
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
validate: S+fence.r.rw+ctrl
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
synth ppo by litmus test 38
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
validate: LB+fence.w.w+data
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
synth ppo by litmus test 39
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
validate: R+fence.tsos
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
synth ppo by litmus test 40
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
validate: SB+fence.tsos
herd: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
synth ppo by litmus test 41
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
validate: SB+rfi-fence.r.rs
herd: [0:x7=1; 0:x8=0; 1:x7=1; 1:x8=0; , 0:x7=1; 0:x8=0; 1:x7=1; 1:x8=1; , 0:x7=1; 0:x8=1; 1:x7=1; 1:x8=0; , 0:x7=1; 0:x8=1; 1:x7=1; 1:x8=1; ]
chip: [0:x7=1; 0:x8=0; 1:x7=1; 1:x8=1; , 0:x7=1; 0:x8=1; 1:x7=1; 1:x8=0; , 0:x7=1; 0:x8=1; 1:x7=1; 1:x8=1; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/SB+rfi-fence.r.rs.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/SB+rfi-fence.r.rs.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x6=x; 0:x9=y; 1:x6=y; 1:x9=x}
         P0          |         P1           ;
<0x00> ori x5, x0, 1 | <0x00> ori x5, x0, 1 ;
<0x04> sw x5, 0(x6)  | <0x04> sw x5, 0(x6)  ;
<0x08> lw x7, 0(x6)  | <0x08> lw x7, 0(x6)  ;
<0x0C> fence r, r    | <0x0C> fence r, r    ;
<0x10> lw x8, 0(x9)  | <0x10> lw x8, 0(x9)  ;

QType.Exists (0:x7==1/\0:x8==0/\1:x7==1/\1:x8==0)

Progress [1/1]: |██████████████████████████████--------------------| 61.7% 100/162 | Elapsed Time:  0.1sProgress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
0:x7=1; 0:x8=0; 1:x7=1; 1:x8=0;  => 1
0:x7=1; 0:x8=0; 1:x7=1; 1:x8=1;  => 1
0:x7=1; 0:x8=1; 1:x7=1; 1:x8=0;  => 1
0:x7=1; 0:x8=1; 1:x7=1; 1:x8=1;  => 1
Time SB+rfi-fence.r.rs  0.1429s
#Executions: 162

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/SB+rfi-fence.r.rs.litmus
b_minus_a: {0:x7=1; 0:x8=0; 1:x7=1; 1:x8=0; }
1
strengthen,s,exe 0:x7=1; 0:x8=0; 1:x7=1; 1:x8=0;  [P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
now check the paths P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')]
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')]
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False
candidate_add_ppo W;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po(e1,e2) and ra.R(e2)

add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
{}
{}
{}
{}
filter_cycle [[P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	], [P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	]]
ppo [W];po;[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
cycle str
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str after change
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fence
end relation fre
path_single_ppo [W];po;[R]
other_single_ppo fencerel(Fence.rw.rw);[R];fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po;[R]
other_single_ppo justify fencerel(Fence.rw.rw);[R];fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PodWR Fence.rw.rwdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False
candidate_add_ppo W;po-loc;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po_loc(e1,e2) and ra.R(e2)

add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po-loc;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];po-loc;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po-loc;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];po-loc;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po-loc;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];po-loc;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po-loc;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];po-loc;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')]
{}
filter_cycle [[P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	]]
ppo [W];po-loc;[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
cycle str
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str after change
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fence
end relation fre
path_single_ppo [W];po-loc;[R]
other_single_ppo fencerel(Fence.rw.rw);[R];fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po-loc;[R]
other_single_ppo justify fencerel(Fence.rw.rw);[R];fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PosWR Fence.rw.rwdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False
candidate_add_ppo W;rfi;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.rfi(e1,e2) and ra.R(e2)

add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];rfi;[R] target_ppo [W];rfi;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];rfi;[R] target_ppo [W];rfi;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];rfi;[R] target_ppo [W];rfi;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];rfi;[R] target_ppo [W];rfi;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]
{}
filter_cycle [[P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	]]
ppo [W];rfi;[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
cycle str
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str after change
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fence
end relation fre
path_single_ppo [W];rfi;[R]
other_single_ppo fencerel(Fence.rw.rw);[R];fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];rfi;[R]
other_single_ppo justify fencerel(Fence.rw.rw);[R];fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle Rfi Fence.rw.rwdRR Fre PodWR Fence.rw.rwdRR Fre
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
now check the paths P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')]
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')]
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')]
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False
candidate_add_ppo W;po;R;fence;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po(e1,e2) and ra.R(e2) and ra.fence(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.rw.rw);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.rw.rw);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.rw.rw);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.rw.rw);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];po;[R];fencerel(Fence.rw.rw);[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fre
end relation fre
path_single_ppo [W];po;[R];fencerel(Fence.rw.rw);[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po;[R];fencerel(Fence.rw.rw);[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PodWR Fence.rw.rwdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False
candidate_add_ppo W;po;R;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po(e1,e2) and ra.R(e2) and ra.po(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];po;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];po;[R];po;[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fre
end relation fre
path_single_ppo [W];po;[R];po;[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po;[R];po;[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PodWR PodRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False
candidate_add_ppo W;po;R;fence_r_r;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po(e1,e2) and ra.R(e2) and ra.fence_r_r(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];po;[R];fencerel(Fence.r.r);[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fre
end relation fre
path_single_ppo [W];po;[R];fencerel(Fence.r.r);[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po;[R];fencerel(Fence.r.r);[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PodWR Fence.r.rdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False
candidate_add_ppo W;po-loc;R;fence;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po_loc(e1,e2) and ra.R(e2) and ra.fence(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fre
end relation fre
path_single_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PosWR Fence.rw.rwdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False
candidate_add_ppo W;po-loc;R;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po_loc(e1,e2) and ra.R(e2) and ra.po(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];po-loc;[R];po;[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fre
end relation fre
path_single_ppo [W];po-loc;[R];po;[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po-loc;[R];po;[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PosWR PodRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False
candidate_add_ppo W;po-loc;R;fence_r_r;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po_loc(e1,e2) and ra.R(e2) and ra.fence_r_r(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fre
end relation fre
path_single_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po-loc;[R];fencerel(Fence.r.r);[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PosWR Fence.r.rdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False
candidate_add_ppo W;rfi;R;fence;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.rfi(e1,e2) and ra.R(e2) and ra.fence(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fre
end relation fre
path_single_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];rfi;[R];fencerel(Fence.rw.rw);[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle Rfi Fence.rw.rwdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False
candidate_add_ppo W;rfi;R;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.rfi(e1,e2) and ra.R(e2) and ra.po(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];rfi;[R];po;[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fre
end relation fre
path_single_ppo [W];rfi;[R];po;[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];rfi;[R];po;[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle Rfi PodRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False
candidate_add_ppo W;rfi;R;fence_r_r;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.rfi(e1,e2) and ra.R(e2) and ra.fence_r_r(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fre
end relation fre
path_single_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];rfi;[R];fencerel(Fence.r.r);[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle Rfi Fence.r.rdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False
candidate_add_ppo W;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po(e1,e2) and ra.R(e2)

add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
{}
{}
{}
{}
filter_cycle [[P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	], [P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	], [P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	], [P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	]]
ppo [W];po;[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str after change
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fre
end relation fre
path_single_ppo [W];po;[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po;[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PodWR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False
candidate_add_ppo W;fence_r_r;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_r(e1,e2) and ra.R(e2)

add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	]]
ppo [W];fencerel(Fence.r.r);[R]
e1 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
start_relation fre
end relation fre
path_single_ppo [W];fencerel(Fence.r.r);[R]
other_single_ppo fre;[W];po;[R];fre
path_single_ppo justify [W];fencerel(Fence.r.r);[R]
other_single_ppo justify fre;[W];po;[R];fre
diy_cycle Fence.r.rdWR Fre PodWR Fre
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
now check the paths P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False
candidate_add_ppo W;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po(e1,e2) and ra.R(e2)

add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
{}
{}
{}
{}
filter_cycle [[P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	], [P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	]]
ppo [W];po;[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fence
end relation fre
path_single_ppo [W];po;[R]
other_single_ppo fencerel(Fence.rw.rw);[R];fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po;[R]
other_single_ppo justify fencerel(Fence.rw.rw);[R];fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PodWR Fence.rw.rwdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False
candidate_add_ppo W;po-loc;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po_loc(e1,e2) and ra.R(e2)

add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po-loc;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];po-loc;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po-loc;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];po-loc;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po-loc;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];po-loc;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po-loc;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];po-loc;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')]
{}
filter_cycle [[P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	]]
ppo [W];po-loc;[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fence
end relation fre
path_single_ppo [W];po-loc;[R]
other_single_ppo fencerel(Fence.rw.rw);[R];fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po-loc;[R]
other_single_ppo justify fencerel(Fence.rw.rw);[R];fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PosWR Fence.rw.rwdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False
candidate_add_ppo W;rfi;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.rfi(e1,e2) and ra.R(e2)

add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];rfi;[R] target_ppo [W];rfi;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];rfi;[R] target_ppo [W];rfi;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];rfi;[R] target_ppo [W];rfi;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];po-loc;[R] target_ppo [W];rfi;[R]
need_check_ppo [W];rfi;[R] target_ppo [W];rfi;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]
{}
filter_cycle [[P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	]]
ppo [W];rfi;[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fence
end relation fre
path_single_ppo [W];rfi;[R]
other_single_ppo fencerel(Fence.rw.rw);[R];fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];rfi;[R]
other_single_ppo justify fencerel(Fence.rw.rw);[R];fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle Rfi Fence.rw.rwdRR Fre PodWR Fence.rw.rwdRR Fre
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
now check the paths P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False
candidate_add_ppo W;po;R;fence;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po(e1,e2) and ra.R(e2) and ra.fence(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.rw.rw);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.rw.rw);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.rw.rw);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.rw.rw);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];po;[R];fencerel(Fence.rw.rw);[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str after change
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fre
end relation fre
path_single_ppo [W];po;[R];fencerel(Fence.rw.rw);[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po;[R];fencerel(Fence.rw.rw);[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PodWR Fence.rw.rwdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False
candidate_add_ppo W;po;R;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po(e1,e2) and ra.R(e2) and ra.po(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];po;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];po;[R];po;[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str after change
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fre
end relation fre
path_single_ppo [W];po;[R];po;[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po;[R];po;[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PodWR PodRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False
candidate_add_ppo W;po;R;fence_r_r;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po(e1,e2) and ra.R(e2) and ra.fence_r_r(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R];fencerel(Fence.r.r);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];po;[R];fencerel(Fence.r.r);[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str after change
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fre
end relation fre
path_single_ppo [W];po;[R];fencerel(Fence.r.r);[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po;[R];fencerel(Fence.r.r);[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PodWR Fence.r.rdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False
candidate_add_ppo W;po-loc;R;fence;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po_loc(e1,e2) and ra.R(e2) and ra.fence(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str after change
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fre
end relation fre
path_single_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po-loc;[R];fencerel(Fence.rw.rw);[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PosWR Fence.rw.rwdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False
candidate_add_ppo W;po-loc;R;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po_loc(e1,e2) and ra.R(e2) and ra.po(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];po-loc;[R];po;[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str after change
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fre
end relation fre
path_single_ppo [W];po-loc;[R];po;[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po-loc;[R];po;[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PosWR PodRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False
candidate_add_ppo W;po-loc;R;fence_r_r;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po_loc(e1,e2) and ra.R(e2) and ra.fence_r_r(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str after change
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fre
end relation fre
path_single_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po-loc;[R];fencerel(Fence.r.r);[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PosWR Fence.r.rdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False
candidate_add_ppo W;rfi;R;fence;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.rfi(e1,e2) and ra.R(e2) and ra.fence(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str after change
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fre
end relation fre
path_single_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];rfi;[R];fencerel(Fence.rw.rw);[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle Rfi Fence.rw.rwdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False
candidate_add_ppo W;rfi;R;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.rfi(e1,e2) and ra.R(e2) and ra.po(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];rfi;[R];po;[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str after change
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fre
end relation fre
path_single_ppo [W];rfi;[R];po;[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];rfi;[R];po;[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle Rfi PodRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False
candidate_add_ppo W;rfi;R;fence_r_r;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.rfi(e1,e2) and ra.R(e2) and ra.fence_r_r(e2,e3) and ra.R(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	]]
ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str after change
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fre
end relation fre
path_single_ppo [W];rfi;[R];fencerel(Fence.r.r);[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];rfi;[R];fencerel(Fence.r.r);[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle Rfi Fence.r.rdRR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False
candidate_add_ppo W;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po(e1,e2) and ra.R(e2)

add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 True False ['po', 'po_loc', 'rfi']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 True False ['po', 'po_loc', 'rfi']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')]]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];po;[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];po;[R]
need_check_ppo [W];po;[R] target_ppo [W];po;[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')]
{}
{}
{}
{}
filter_cycle [[P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	], [P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	], [P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	], [P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	]]
ppo [W];po;[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fre
end relation fre
path_single_ppo [W];po;[R]
other_single_ppo fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
path_single_ppo justify [W];po;[R]
other_single_ppo justify fre;[W];po;[R];fencerel(Fence.rw.rw);[R];fre
diy_cycle PodWR Fre PodWR Fence.rw.rwdRR Fre
from this path get ppo
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False
candidate_add_ppo W;fence_r_r;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_r(e1,e2) and ra.R(e2)

add_rels
add rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
add_rels_final
add rel final P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
add rel final P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 True True ['coe']
check rel --: None P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['rfe']
check rel --: None P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['rfe']
check rel P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 False False ['fence', 'po', 'fence_r_r']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	 True False ['po', 'fence_r_r']
check rel P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	 True False ['po', 'fence_r_r']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, is write event:True
P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	(W), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	(R), P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi')
(P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')
this path is True
(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'po_loc'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, 'rfi'), (P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'po')], [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
insert_path [(P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, 'fence_r_r')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, is write event:True
P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, is write event:False
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), ['po', 'po_loc', 'rfi']
ei,ej,relations, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	(W), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['po', 'fence_r_r']
ei,ej,relations, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	(R), P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	(R), ['fence', 'po', 'fence_r_r']
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi')
(P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'po_loc'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, 'rfi'), (P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'po')], [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]]
need_check_ppo [W];po;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po-loc;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.rw.rw);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];rfi;[R];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];po;[R] target_ppo [W];fencerel(Fence.r.r);[R]
need_check_ppo [W];fencerel(Fence.r.r);[R] target_ppo [W];fencerel(Fence.r.r);[R]
insert_path [(P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, 'fence_r_r')]
{}
filter_cycle [[P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	]]
ppo [W];fencerel(Fence.r.r);[R]
e1 P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
cycle str after change
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	
P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	
start_relation fre
end relation fre
path_single_ppo [W];fencerel(Fence.r.r);[R]
other_single_ppo fre;[W];po;[R];fre
path_single_ppo justify [W];fencerel(Fence.r.r);[R]
other_single_ppo justify fre;[W];po;[R];fre
diy_cycle Fence.r.rdWR Fre PodWR Fre
stengthen state, 0:x7=1; 0:x8=0; 1:x7=1; 1:x8=0;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdda582d50> [P0: <0x08>	lw x7_p0_1, 0(x6_p0_0)	, P0: <0x10>	lw x8_p0_1, 0(x9_p0_0)	, P1: <0x08>	lw x7_p1_1, 0(x6_p1_0)	, P1: <0x10>	lw x8_p1_1, 0(x9_p1_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P1: <0x04>	sw x5_p1_1, 0(x6_p1_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdd92c90a0>, <src.tracesynth.synth.constraint.Constraint object at 0x7acdd8c20170>, <src.tracesynth.synth.constraint.Constraint object at 0x7acdd6f23020>, <src.tracesynth.synth.constraint.Constraint object at 0x7acdd8176210>] False
{0:x6=x; 0:x9=y; 1:x6=y; 1:x9=x}
         P0          |         P1           ;
<0x00> ori x5, x0, 1 | <0x00> ori x5, x0, 1 ;
<0x04> sw x5, 0(x6)  | <0x04> sw x5, 0(x6)  ;
<0x08> lw x7, 0(x6)  | <0x08> lw x7, 0(x6)  ;
<0x0C> fence r, r    | <0x0C> fence r, r    ;
<0x10> lw x8, 0(x9)  | <0x10> lw x8, 0(x9)  ;

QType.Exists (0:x7==1/\0:x8==0/\1:x7==1/\1:x8==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
0:x7=1; 0:x8=0; 1:x7=1; 1:x8=0;  => 1
0:x7=1; 0:x8=0; 1:x7=1; 1:x8=1;  => 1
0:x7=1; 0:x8=1; 1:x7=1; 1:x8=0;  => 1
0:x7=1; 0:x8=1; 1:x7=1; 1:x8=1;  => 1
Time SB+rfi-fence.r.rs  0.0659s
#Executions: 72

complete exe list
get new mm
uninit_func_list
ppo_candidate_func38 W;fence_r_rw;W 
def ppo_candidate_func38(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func39 W;fence_rw_w;R 
def ppo_candidate_func39(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func40 W;fence_r_rw;R 
def ppo_candidate_func40(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func41 R;fence_w_w;W 
def ppo_candidate_func41(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_w(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func42 R;fence_rw_w;R 
def ppo_candidate_func42(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func43 R;fence_w_r;R 
def ppo_candidate_func43(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_r(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func44 W;fence_tso;R 
def ppo_candidate_func44(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_tso(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
new_mm start
init failed: 1
start synth
any_ppo size: 4
candidate_ppos size: 3
candidate_ppos size: 11
candidate_ppos size: 3
candidate_ppos size: 11
candidate_ppo: [W];rfi;[R], relax is False
candidate_ppo: [W];po-loc;[R], relax is False
candidate_ppo: [W];po;[R];po;[R], relax is False
candidate_ppo: [W];rfi;[R];po;[R], relax is False
candidate_ppo: [W];po-loc;[R];po;[R], relax is False
candidate_ppo: [W];fencerel(Fence.r.r);[R], relax is False
ID: 0 cur candidate_ppo: [W];rfi;[R],relax is False
[W];rfi;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [W];rfi;[R] contain_flag False can_relax_flag False
add ppo [W];rfi;[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];rfi;[R]']
ppo [W];rfi;[R] index 0
[W];rfi;[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];rfi;[R]
ppo [W];rfi;[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe': [0:x7=1; 0:x9=1; [x]=1; , 0:x7=2; 0:x9=0; [x]=1; , 0:x7=2; 0:x9=1; [x]=1; , 0:x7=2; 0:x9=1; [x]=2; ]}
now_herd_logs_ppo_remove {'W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe': [0:x7=1; 0:x9=1; [x]=1; , 0:x7=2; 0:x9=0; [x]=1; , 0:x7=2; 0:x9=0; [x]=2; , 0:x7=2; 0:x9=1; [x]=1; , 0:x7=2; 0:x9=1; [x]=2; ]}
W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe
[0:x7=1; 0:x9=1; [x]=1; , 0:x7=2; 0:x9=0; [x]=1; , 0:x7=2; 0:x9=0; [x]=2; , 0:x7=2; 0:x9=1; [x]=1; , 0:x7=2; 0:x9=1; [x]=2; ]
[0:x7=1; 0:x9=1; [x]=1; , 0:x7=2; 0:x9=0; [x]=1; , 0:x7=2; 0:x9=1; [x]=1; , 0:x7=2; 0:x9=1; [x]=2; ]
['W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe']
ID: 1 cur candidate_ppo: [W];po-loc;[R],relax is False
[W];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [W];po-loc;[R] contain_flag False can_relax_flag False
add ppo [W];po-loc;[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[W];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '([W];po-loc;[R])\\([AMO];po-loc;[R])']
W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus
ppo [W];po-loc;[R] index 0
[W];po-loc;[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
([W];po-loc;[R])\([AMO];po-loc;[R])
ppo [W];po-loc;[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_loc_R_PosWR_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_po_loc_R_PosWR_DpAddrdW_Coe_Fence_rw_rwdWW_Coe': [1:x9=1; 0:x12=1; , 1:x9=1; 0:x12=2; , 1:x9=2; 0:x12=1; ]}
now_herd_logs_ppo_remove {'W_po_loc_R_PosWR_DpAddrdW_Coe_Fence_rw_rwdWW_Coe': [1:x9=1; 0:x12=1; , 1:x9=1; 0:x12=2; , 1:x9=2; 0:x12=1; , 1:x9=2; 0:x12=2; ]}
W_po_loc_R_PosWR_DpAddrdW_Coe_Fence_rw_rwdWW_Coe
[1:x9=1; 0:x12=1; , 1:x9=1; 0:x12=2; , 1:x9=2; 0:x12=1; , 1:x9=2; 0:x12=2; ]
[1:x9=1; 0:x12=1; , 1:x9=1; 0:x12=2; , 1:x9=2; 0:x12=1; ]
['W_po_loc_R_PosWR_DpAddrdW_Coe_Fence_rw_rwdWW_Coe']
ID: 2 cur candidate_ppo: [W];po;[R];po;[R],relax is False
[W];po;[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [W];po;[R];po;[R] contain_flag False can_relax_flag False
add ppo [W];po;[R];po;[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];po;[R];po;[R]']
W_po_loc_R_PosWR_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus
W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus
ppo [W];po;[R];po;[R] index 0
[W];po;[R];po;[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];po;[R];po;[R]
ppo [W];po;[R];po;[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_R_po_R_PodWR_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_po_R_po_R_PodWR_PodRR_Fre_Fence_rw_rwdWW_Coe': [0:x9=0; 1:x9=1; , 0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; ]}
now_herd_logs_ppo_remove {'W_po_R_po_R_PodWR_PodRR_Fre_Fence_rw_rwdWW_Coe': [0:x9=0; 1:x9=1; , 0:x9=0; 1:x9=2; , 0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; ]}
W_po_R_po_R_PodWR_PodRR_Fre_Fence_rw_rwdWW_Coe
[0:x9=0; 1:x9=1; , 0:x9=0; 1:x9=2; , 0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; ]
[0:x9=0; 1:x9=1; , 0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; ]
['W_po_R_po_R_PodWR_PodRR_Fre_Fence_rw_rwdWW_Coe']
ID: 3 cur candidate_ppo: [W];rfi;[R];po;[R],relax is False
[W];rfi;[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [W];rfi;[R];po;[R] contain_flag False can_relax_flag False
add ppo [W];rfi;[R];po;[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];rfi;[R];po;[R]']
W_po_loc_R_PosWR_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus
W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus
W_po_R_po_R_PodWR_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus
ppo [W];rfi;[R];po;[R] index 0
[W];rfi;[R];po;[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];rfi;[R];po;[R]
ppo [W];rfi;[R];po;[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_rfi_R_po_R_Rfi_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_rfi_R_po_R_Rfi_PodRR_Fre_Fence_rw_rwdWW_Coe': [0:x7=1; 0:x8=0; 1:x9=1; , 0:x7=1; 0:x8=1; 1:x9=1; , 0:x7=2; 0:x8=0; 1:x9=1; , 0:x7=2; 0:x8=1; 1:x9=1; , 0:x7=2; 0:x8=1; 1:x9=2; ]}
now_herd_logs_ppo_remove {'W_rfi_R_po_R_Rfi_PodRR_Fre_Fence_rw_rwdWW_Coe': [0:x7=1; 0:x8=0; 1:x9=1; , 0:x7=1; 0:x8=1; 1:x9=1; , 0:x7=2; 0:x8=0; 1:x9=1; , 0:x7=2; 0:x8=0; 1:x9=2; , 0:x7=2; 0:x8=1; 1:x9=1; , 0:x7=2; 0:x8=1; 1:x9=2; ]}
W_rfi_R_po_R_Rfi_PodRR_Fre_Fence_rw_rwdWW_Coe
[0:x7=1; 0:x8=0; 1:x9=1; , 0:x7=1; 0:x8=1; 1:x9=1; , 0:x7=2; 0:x8=0; 1:x9=1; , 0:x7=2; 0:x8=0; 1:x9=2; , 0:x7=2; 0:x8=1; 1:x9=1; , 0:x7=2; 0:x8=1; 1:x9=2; ]
[0:x7=1; 0:x8=0; 1:x9=1; , 0:x7=1; 0:x8=1; 1:x9=1; , 0:x7=2; 0:x8=0; 1:x9=1; , 0:x7=2; 0:x8=1; 1:x9=1; , 0:x7=2; 0:x8=1; 1:x9=2; ]
['W_rfi_R_po_R_Rfi_PodRR_Fre_Fence_rw_rwdWW_Coe']
ID: 4 cur candidate_ppo: [W];po-loc;[R];po;[R],relax is False
[W];po-loc;[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [W];po-loc;[R];po;[R] contain_flag False can_relax_flag False
add ppo [W];po-loc;[R];po;[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];po-loc;[R];po;[R]']
W_po_loc_R_PosWR_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus
W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus
W_rfi_R_po_R_Rfi_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus
W_po_R_po_R_PodWR_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus
ppo [W];po-loc;[R];po;[R] index 0
[W];po-loc;[R];po;[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];po-loc;[R];po;[R]
ppo [W];po-loc;[R];po;[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_loc_R_po_R_PosWR_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_po_loc_R_po_R_PosWR_PodRR_Fre_Fence_rw_rwdWW_Coe': [0:x8=0; 1:x9=1; , 0:x8=1; 1:x9=1; , 0:x8=1; 1:x9=2; ]}
now_herd_logs_ppo_remove {'W_po_loc_R_po_R_PosWR_PodRR_Fre_Fence_rw_rwdWW_Coe': [0:x8=0; 1:x9=1; , 0:x8=0; 1:x9=2; , 0:x8=1; 1:x9=1; , 0:x8=1; 1:x9=2; ]}
W_po_loc_R_po_R_PosWR_PodRR_Fre_Fence_rw_rwdWW_Coe
[0:x8=0; 1:x9=1; , 0:x8=0; 1:x9=2; , 0:x8=1; 1:x9=1; , 0:x8=1; 1:x9=2; ]
[0:x8=0; 1:x9=1; , 0:x8=1; 1:x9=1; , 0:x8=1; 1:x9=2; ]
['W_po_loc_R_po_R_PosWR_PodRR_Fre_Fence_rw_rwdWW_Coe']
ID: 5 cur candidate_ppo: [W];fencerel(Fence.r.r);[R],relax is False
[W];fencerel(Fence.r.r);[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [W];fencerel(Fence.r.r);[R] contain_flag False can_relax_flag False
add ppo [W];fencerel(Fence.r.r);[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]']
W_po_loc_R_PosWR_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus
W_po_loc_R_po_R_PosWR_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus
W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus
W_rfi_R_po_R_Rfi_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus
W_po_R_po_R_PodWR_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus
ppo [W];fencerel(Fence.r.r);[R] index 0
[W];fencerel(Fence.r.r);[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
ppo [W];fencerel(Fence.r.r);[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.r.r_R_Fence_r_rdWR_Fre_Fence_rw_rwdWW_Coe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_fencerelFence.r.r_R_Fence_r_rdWR_Fre_Fence_rw_rwdWW_Coe': [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]}
now_herd_logs_ppo_remove {'W_fencerelFence.r.r_R_Fence_r_rdWR_Fre_Fence_rw_rwdWW_Coe': [0:x7=0; 1:x9=1; , 0:x7=0; 1:x9=2; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]}
W_fencerelFence.r.r_R_Fence_r_rdWR_Fre_Fence_rw_rwdWW_Coe
[0:x7=0; 1:x9=1; , 0:x7=0; 1:x9=2; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
[0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
['W_fencerelFence.r.r_R_Fence_r_rdWR_Fre_Fence_rw_rwdWW_Coe']
check ppo [W];rfi;[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe
herd: [0:x7=1; 0:x9=1; [x]=1; , 0:x7=2; 0:x9=0; [x]=1; , 0:x7=2; 0:x9=1; [x]=1; , 0:x7=2; 0:x9=1; [x]=2; ]
chip: [0:x7=1; 1:x9=1; 0:x12=1; , 0:x7=2; 1:x9=1; 0:x12=1; , 0:x7=2; 1:x9=1; 0:x12=2; , 0:x7=2; 1:x9=2; 0:x12=1; , 0:x7=2; 1:x9=2; 0:x12=2; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_rfi_R_Rfi_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus
check ppo [W];rfi;[R] False
check ppo [W];po-loc;[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_loc_R_PosWR_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[W];po-loc;[R]
validate: W_po_loc_R_PosWR_DpAddrdW_Coe_Fence_rw_rwdWW_Coe
herd: [1:x9=1; 0:x12=1; , 1:x9=1; 0:x12=2; , 1:x9=2; 0:x12=1; ]
chip: [1:x9=1; 0:x12=1; , 1:x9=1; 0:x12=2; , 1:x9=2; 0:x12=1; , 1:x9=2; 0:x12=2; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_loc_R_PosWR_DpAddrdW_Coe_Fence_rw_rwdWW_Coe.litmus
check ppo [W];po-loc;[R] False
check ppo [W];po;[R];po;[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_R_po_R_PodWR_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: W_po_R_po_R_PodWR_PodRR_Fre_Fence_rw_rwdWW_Coe
herd: [0:x9=0; 1:x9=1; , 0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; ]
chip: [0:x9=0; 1:x9=1; , 0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=0; 1:x9=2; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_R_po_R_PodWR_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus
check ppo [W];po;[R];po;[R] False
check ppo [W];rfi;[R];po;[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_rfi_R_po_R_Rfi_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: W_rfi_R_po_R_Rfi_PodRR_Fre_Fence_rw_rwdWW_Coe
herd: [0:x7=1; 0:x8=0; 1:x9=1; , 0:x7=1; 0:x8=1; 1:x9=1; , 0:x7=2; 0:x8=0; 1:x9=1; , 0:x7=2; 0:x8=1; 1:x9=1; , 0:x7=2; 0:x8=1; 1:x9=2; ]
chip: [0:x7=1; 0:x8=0; 1:x9=1; , 0:x7=1; 0:x8=1; 1:x9=1; , 0:x7=2; 0:x8=0; 1:x9=1; , 0:x7=2; 0:x8=1; 1:x9=1; , 0:x7=2; 0:x8=1; 1:x9=2; , 0:x7=2; 0:x8=0; 1:x9=2; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_rfi_R_po_R_Rfi_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus
check ppo [W];rfi;[R];po;[R] False
check ppo [W];po-loc;[R];po;[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_loc_R_po_R_PosWR_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: W_po_loc_R_po_R_PosWR_PodRR_Fre_Fence_rw_rwdWW_Coe
herd: [0:x8=0; 1:x9=1; , 0:x8=1; 1:x9=1; , 0:x8=1; 1:x9=2; ]
chip: [0:x8=0; 1:x9=1; , 0:x8=1; 1:x9=1; , 0:x8=1; 1:x9=2; , 0:x8=0; 1:x9=2; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_loc_R_po_R_PosWR_PodRR_Fre_Fence_rw_rwdWW_Coe.litmus
check ppo [W];po-loc;[R];po;[R] False
check ppo [W];fencerel(Fence.r.r);[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.r.r_R_Fence_r_rdWR_Fre_Fence_rw_rwdWW_Coe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: W_fencerelFence.r.r_R_Fence_r_rdWR_Fre_Fence_rw_rwdWW_Coe
herd: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
chip: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
check ppo [W];fencerel(Fence.r.r);[R] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [W];fencerel(Fence.r.r);[R]
start check
check counter ppo
ppo:[W];fencerel(Fence.r.r);[R] => counter_ppo:
-----------------
ID0:candidate_ppo [W];fencerel(Fence.r.r);[R]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/SB+rfi-fence.r.rs.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_fencerelFence.r.r_R_Fence_r_rdWR_Fre_Fence_rw_rwdWW_Coe.litmus
validate: SB+rfi-fence.r.rs
herd: [0:x7=1; 0:x8=0; 1:x7=1; 1:x8=1; , 0:x7=1; 0:x8=1; 1:x7=1; 1:x8=0; , 0:x7=1; 0:x8=1; 1:x7=1; 1:x8=1; ]
chip: [0:x7=1; 0:x8=0; 1:x7=1; 1:x8=1; , 0:x7=1; 0:x8=1; 1:x7=1; 1:x8=0; , 0:x7=1; 0:x8=1; 1:x7=1; 1:x8=1; ]
validate: W_fencerelFence.r.r_R_Fence_r_rdWR_Fre_Fence_rw_rwdWW_Coe
herd: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
chip: [0:x7=0; 1:x9=1; , 0:x7=1; 1:x9=1; , 0:x7=1; 1:x9=2; ]
candidate_ppo: [W];fencerel(Fence.r.r);[R], cur_failed_litmus_tests: [], passed? True

[W];fencerel(Fence.r.r);[R] pass test
==== candidate ppo ====
[W];fencerel(Fence.r.r);[R] [W];fencerel(Fence.r.r);[R] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/SB+rfi-fence.r.rs.litmus
synth ppo by litmus test 42
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
validate: ISA02
herd: [0:x10=1; 0:x11=0; 1:x12=1; 1:x13=1; , 0:x10=1; 0:x11=1; 1:x12=1; 1:x13=0; , 0:x10=1; 0:x11=1; 1:x12=1; 1:x13=1; ]
chip: [0:x10=1; 0:x11=0; 1:x12=1; 1:x13=1; , 0:x10=1; 0:x11=1; 1:x12=1; 1:x13=0; , 0:x10=1; 0:x11=1; 1:x12=1; 1:x13=1; ]
synth ppo by litmus test 43
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
validate: SB+fence.rw.rw+ctrlfence.r.r
herd: [0:x7=0; 1:x7=0; 1:x8=0; 1:x12=1; [y]=1; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x12=0; [y]=0; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x12=1; [y]=0; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x12=0; [y]=1; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x12=1; [y]=1; ]
chip: [0:x7=0; 1:x7=0; 1:x8=0; 1:x12=1; [y]=1; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x12=0; [y]=0; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x12=1; [y]=0; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x12=0; [y]=1; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x12=1; [y]=1; ]
synth ppo by litmus test 44
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
validate: LB+fence.rw.rw+poxp
herd: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=1; 1:x7=1; [y]=1; ]
chip: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/ATOMICS/RELAX/PodRWXP/LB+fence.rw.rw+poxp.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/ATOMICS/RELAX/PodRWXP/LB+fence.rw.rw+poxp.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x7=1; 1:x8=1; 0:x6=x; 0:x8=y; 1:x5=y; 1:x9=x}
         P0         |           P1             ;
<0x00> lw x5, 0(x6) | <0x00> lr.w x6, 0(x5)    ;
<0x04> fence rw, rw | <0x04> sc.w x7, x6, (x5) ;
<0x08> sw x7, 0(x8) | <0x08> sw x8, 0(x9)      ;

QType.Exists (y==1/\0:x5==1/\1:x7==0/\1:x6==1)

Progress [1/2]: |██████████████████████████████████████████████████| 100.0%Progress [2/2]: |██████████████████████████████████████████████████| 100.0%

States 8
0:x5=0; 1:x6=0; 1:x7=0; [y]=1;  => 1
0:x5=0; 1:x6=0; 1:x7=1; [y]=1;  => 1
0:x5=0; 1:x6=1; 1:x7=0; [y]=1;  => 1
0:x5=0; 1:x6=1; 1:x7=1; [y]=1;  => 1
0:x5=1; 1:x6=0; 1:x7=0; [y]=1;  => 1
0:x5=1; 1:x6=0; 1:x7=1; [y]=1;  => 1
0:x5=1; 1:x6=1; 1:x7=0; [y]=1;  => 1
0:x5=1; 1:x6=1; 1:x7=1; [y]=1;  => 1
Time LB+fence.rw.rw+poxp  0.1044s
#Executions: 150

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/ATOMICS/RELAX/PodRWXP/LB+fence.rw.rw+poxp.litmus
b_minus_a: {0:x5=1; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=1; 1:x7=1; [y]=1; }
1
strengthen,s,exe 0:x5=1; 1:x6=1; 1:x7=0; [y]=1;  [P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), ['rmw', 'data', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
now check the paths P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True
candidate_add_ppo XLr;po;XSc;po;W
all_rels
rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.XLr(e1) and ra.po(e1,e2) and ra.XSc(e2) and ra.po(e2,e3) and ra.W(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), ['rmw', 'data', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];rmw;[XSc];po;[W] target_ppo [XLr];po;[XSc];po;[W]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];po;[XSc];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];po;[XSc];po;[W]
add_rels_final
add rel final P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
check all rels
check rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
check rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), ['rmw', 'data', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];rmw;[XSc];po;[W] target_ppo [XLr];po;[XSc];po;[W]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];po;[XSc];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];po;[XSc];po;[W]
insert_path [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	]]
ppo [XLr];po;[XSc];po;[W]
e1 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
e2 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
cycle str
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation rfe
end relation rfe
path_single_ppo [XLr];po;[XSc];po;[W]
other_single_ppo rfe;[R];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [XLr];po;[XSc];po;[W]
other_single_ppo justify rfe;[R];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PodRW PodWW Rfe Fence.rw.rwdRW Rfe
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True
candidate_add_ppo XLr;po-loc;XSc;po;W
all_rels
rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.XLr(e1) and ra.po_loc(e1,e2) and ra.XSc(e2) and ra.po(e2,e3) and ra.W(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), ['rmw', 'data', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];rmw;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
need_check_ppo [XLr];po-loc;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
add_rels_final
add rel final P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
check all rels
check rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
check rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), ['rmw', 'data', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];rmw;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
need_check_ppo [XLr];po-loc;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
insert_path [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	]]
ppo [XLr];po-loc;[XSc];po;[W]
e1 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
e2 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
cycle str
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation rfe
end relation rfe
path_single_ppo [XLr];po-loc;[XSc];po;[W]
other_single_ppo rfe;[R];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [XLr];po-loc;[XSc];po;[W]
other_single_ppo justify rfe;[R];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PosRW PodWW Rfe Fence.rw.rwdRW Rfe
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True
candidate_add_ppo XLr;fri;XSc;po;W
all_rels
rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.XLr(e1) and ra.fri(e1,e2) and ra.XSc(e2) and ra.po(e2,e3) and ra.W(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), ['rmw', 'data', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];rmw;[XSc];po;[W] target_ppo [XLr];fri;[XSc];po;[W]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];fri;[XSc];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];fri;[XSc];po;[W]
need_check_ppo [XLr];po-loc;[XSc];po;[W] target_ppo [XLr];fri;[XSc];po;[W]
need_check_ppo [XLr];fri;[XSc];po;[W] target_ppo [XLr];fri;[XSc];po;[W]
add_rels_final
add rel final P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
check all rels
check rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
check rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), ['rmw', 'data', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];rmw;[XSc];po;[W] target_ppo [XLr];fri;[XSc];po;[W]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];fri;[XSc];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];fri;[XSc];po;[W]
need_check_ppo [XLr];po-loc;[XSc];po;[W] target_ppo [XLr];fri;[XSc];po;[W]
need_check_ppo [XLr];fri;[XSc];po;[W] target_ppo [XLr];fri;[XSc];po;[W]
insert_path [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	]]
ppo [XLr];fri;[XSc];po;[W]
e1 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
e2 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
cycle str
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation rfe
end relation rfe
path_single_ppo [XLr];fri;[XSc];po;[W]
other_single_ppo rfe;[R];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [XLr];fri;[XSc];po;[W]
other_single_ppo justify rfe;[R];fencerel(Fence.rw.rw);[W];rfe
diy_cycle Fri PodWW Rfe Fence.rw.rwdRW Rfe
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True
candidate_add_ppo XLr;po;W
all_rels
rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.XLr(e1) and ra.po(e1,e2) and ra.W(e2)

add_rels
add rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
add rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), ['rmw', 'data', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];rmw;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po-loc;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];fri;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po;[W] target_ppo [XLr];po;[W]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), ['rmw', 'data', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri')]]
need_check_ppo [XLr];rmw;[XSc] target_ppo [XLr];po;[W]
need_check_ppo [XLr];data;[XSc] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po;[XSc] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po-loc;[XSc] target_ppo [XLr];po;[W]
need_check_ppo [XLr];fri;[XSc] target_ppo [XLr];po;[W]
exit get_path_from_e1_to_e2_by_ppo
add_rels_final
add rel final P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
check all rels
check rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
check rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), ['rmw', 'data', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'rmw'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'fri'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];rmw;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po-loc;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];fri;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po;[W] target_ppo [XLr];po;[W]
insert_path [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	]]
ppo [XLr];po;[W]
e1 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
e2 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
cycle str
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation rfe
end relation rfe
path_single_ppo [XLr];po;[W]
other_single_ppo rfe;[R];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [XLr];po;[W]
other_single_ppo justify rfe;[R];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PodRW Rfe Fence.rw.rwdRW Rfe
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
events sequence
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
now check the paths P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
[(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
from this path get ppo
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True
candidate_add_ppo XSc;po;W
all_rels
rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.XSc(e1) and ra.po(e1,e2) and ra.W(e2)

add_rels
add rel P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XSc];po;[W] target_ppo [XSc];po;[W]
add_rels_final
add rel final P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['po']
check all rels
check rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 True True ['coe']
check rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False True ['rmw', 'data', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XSc];po;[W] target_ppo [XSc];po;[W]
insert_path [(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:True
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(W), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XSc];po;[W] target_ppo [XSc];po;[W]
insert_path [(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
{}
{}
filter_cycle [[P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	], [P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	]]
ppo [XSc];po;[W]
e1 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	
e2 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
cycle str
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
cycle str after change
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
start_relation rfe
end relation rmw
path_single_ppo [XSc];po;[W]
other_single_ppo rfe;[R];fencerel(Fence.rw.rw);[W];rfe;[XLr];rmw
path_single_ppo justify [XSc];po;[W]
other_single_ppo justify rfe;[R];fencerel(Fence.rw.rw);[W];rfe;[XLr];rmw
diy_cycle PosRW PodWW Rfe Fence.rw.rwdRW Rfe
stengthen state, 0:x5=1; 1:x6=1; 1:x7=0; [y]=1;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd79c14f0> [P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdd7faadb0>, <src.tracesynth.synth.constraint.Constraint object at 0x7acdd6f4d6a0>] False
strengthen,s,exe 0:x5=1; 1:x6=1; 1:x7=1; [y]=1;  [P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), ['data', 'po', 'po_loc']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
now check the paths P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')]
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')]
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')]
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False False
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False False
candidate_add_ppo XLr;po;XSc
all_rels
rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.XLr(e1) and ra.po(e1,e2) and ra.XSc(e2)

add_rels
add rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False False ['data', 'po', 'po_loc']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), ['data', 'po', 'po_loc']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')]]
need_check_ppo [XLr];data;[XSc] target_ppo [XLr];po;[XSc]
need_check_ppo [XLr];po;[XSc] target_ppo [XLr];po;[XSc]
add_rels_final
add rel final P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False False ['data', 'po', 'po_loc']
check all rels
check rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False False ['data', 'po', 'po_loc']
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False False
candidate_add_ppo XLr;po-loc;XSc
all_rels
rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.XLr(e1) and ra.po_loc(e1,e2) and ra.XSc(e2)

add_rels
add rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False False ['data', 'po', 'po_loc']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), ['data', 'po', 'po_loc']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')]]
need_check_ppo [XLr];data;[XSc] target_ppo [XLr];po-loc;[XSc]
need_check_ppo [XLr];po;[XSc] target_ppo [XLr];po-loc;[XSc]
need_check_ppo [XLr];po-loc;[XSc] target_ppo [XLr];po-loc;[XSc]
add_rels_final
add rel final P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False False ['data', 'po', 'po_loc']
check all rels
check rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False False ['data', 'po', 'po_loc']
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:False
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), ['data', 'po', 'po_loc']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
now check the paths P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False False
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True
candidate_add_ppo XLr;po;XSc;po;W
all_rels
rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.XLr(e1) and ra.po(e1,e2) and ra.XSc(e2) and ra.po(e2,e3) and ra.W(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:False
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), ['data', 'po', 'po_loc']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];po;[XSc];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];po;[XSc];po;[W]
add_rels_final
add rel final P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
check all rels
check rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:False
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), ['data', 'po', 'po_loc']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];po;[XSc];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];po;[XSc];po;[W]
insert_path [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	]]
ppo [XLr];po;[XSc];po;[W]
e1 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
e2 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
cycle str
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation rfe
end relation rfe
path_single_ppo [XLr];po;[XSc];po;[W]
other_single_ppo rfe;[R];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [XLr];po;[XSc];po;[W]
other_single_ppo justify rfe;[R];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PodRW PodWW Rfe Fence.rw.rwdRW Rfe
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 False False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True
candidate_add_ppo XLr;po-loc;XSc;po;W
all_rels
rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.XLr(e1) and ra.po_loc(e1,e2) and ra.XSc(e2) and ra.po(e2,e3) and ra.W(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:False
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), ['data', 'po', 'po_loc']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
need_check_ppo [XLr];po-loc;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
add_rels_final
add rel final P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
check all rels
check rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:False
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), ['data', 'po', 'po_loc']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
need_check_ppo [XLr];po-loc;[XSc];po;[W] target_ppo [XLr];po-loc;[XSc];po;[W]
insert_path [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	]]
ppo [XLr];po-loc;[XSc];po;[W]
e1 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
e2 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
cycle str
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation rfe
end relation rfe
path_single_ppo [XLr];po-loc;[XSc];po;[W]
other_single_ppo rfe;[R];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [XLr];po-loc;[XSc];po;[W]
other_single_ppo justify rfe;[R];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PosRW PodWW Rfe Fence.rw.rwdRW Rfe
from this path get ppo
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True
candidate_add_ppo XLr;po;W
all_rels
rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.XLr(e1) and ra.po(e1,e2) and ra.W(e2)

add_rels
add rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:False
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), ['data', 'po', 'po_loc']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po-loc;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po;[W] target_ppo [XLr];po;[W]
add_rels_final
add rel final P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
check all rels
check rel --: None P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 True False ['rfe']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, is write event:False
P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, is write event:False
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), ['data', 'po', 'po_loc']
ei,ej,relations, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	(R), P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc')
(P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
this path is True
(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'data'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, 'po_loc'), (P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')], [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]]
need_check_ppo [XLr];data;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po-loc;[XSc];po;[W] target_ppo [XLr];po;[W]
need_check_ppo [XLr];po;[W] target_ppo [XLr];po;[W]
insert_path [(P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	]]
ppo [XLr];po;[W]
e1 P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
e2 P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
cycle str
P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	
P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation rfe
end relation rfe
path_single_ppo [XLr];po;[W]
other_single_ppo rfe;[R];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [XLr];po;[W]
other_single_ppo justify rfe;[R];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PodRW Rfe Fence.rw.rwdRW Rfe
stengthen state, 0:x5=1; 1:x6=1; 1:x7=1; [y]=1;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd79aea50> [P1: <0x04>	sc.w x7_p1_1, x6_p1_1, (x5_p1_0)	, P1: <0x08>	sw x8_p1_0, 0(x9_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lr.w x6_p1_1, 0(x5_p1_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdd6dc58e0>, <src.tracesynth.synth.constraint.Constraint object at 0x7acdd7570fe0>] False
{0:x7=1; 1:x8=1; 0:x6=x; 0:x8=y; 1:x5=y; 1:x9=x}
         P0         |           P1             ;
<0x00> lw x5, 0(x6) | <0x00> lr.w x6, 0(x5)    ;
<0x04> fence rw, rw | <0x04> sc.w x7, x6, (x5) ;
<0x08> sw x7, 0(x8) | <0x08> sw x8, 0(x9)      ;

QType.Exists (y==1/\0:x5==1/\1:x7==0/\1:x6==1)

Progress [1/2]: |██████████████████████████████████████████████████| 100.0%Progress [2/2]: |██████████████████████████████████████████████████| 100.0%

States 8
0:x5=0; 1:x6=0; 1:x7=0; [y]=1;  => 1
0:x5=0; 1:x6=0; 1:x7=1; [y]=1;  => 1
0:x5=0; 1:x6=1; 1:x7=0; [y]=1;  => 1
0:x5=0; 1:x6=1; 1:x7=1; [y]=1;  => 1
0:x5=1; 1:x6=0; 1:x7=0; [y]=1;  => 1
0:x5=1; 1:x6=0; 1:x7=1; [y]=1;  => 1
0:x5=1; 1:x6=1; 1:x7=0; [y]=1;  => 1
0:x5=1; 1:x6=1; 1:x7=1; [y]=1;  => 1
Time LB+fence.rw.rw+poxp  0.0467s
#Executions: 49

complete exe list
get new mm
uninit_func_list
ppo_candidate_func38 W;fence_r_rw;W 
def ppo_candidate_func38(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func39 W;fence_rw_w;R 
def ppo_candidate_func39(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func40 W;fence_r_rw;R 
def ppo_candidate_func40(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func41 R;fence_w_w;W 
def ppo_candidate_func41(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_w(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func42 R;fence_rw_w;R 
def ppo_candidate_func42(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func43 R;fence_w_r;R 
def ppo_candidate_func43(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_r(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func44 W;fence_tso;R 
def ppo_candidate_func44(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_tso(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func45 W;fence_r_r;R 
def ppo_candidate_func45(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_r(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
new_mm start
init failed: 1
start synth
any_ppo size: 2
candidate_ppos size: 4
candidate_ppos size: 1
any_ppo size: 2
candidate_ppos size: 0
candidate_ppos size: 3
candidate_ppo: [XLr];po;[W], relax is False
candidate_ppo: [XSc];po;[W], relax is False
ID: 0 cur candidate_ppo: [XLr];po;[W],relax is False
[XLr];po;[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [XLr];po;[W] contain_flag False can_relax_flag False
add ppo [XLr];po;[W] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]', '[XLr];po;[W]']
ppo [XLr];po;[W] index 0
[XLr];po;[W]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
ppo [XLr];po;[W]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/XLr_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'XLr_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]}
now_herd_logs_ppo_remove {'XLr_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]}
XLr_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
['XLr_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe']
ID: 1 cur candidate_ppo: [XSc];po;[W],relax is False
[XSc];po;[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [XSc];po;[W] contain_flag False can_relax_flag False
add ppo [XSc];po;[W] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]', '[XSc];po;[W]']
XLr_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe.litmus
ppo [XSc];po;[W] index 0
[XSc];po;[W]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XSc];po;[W]
ppo [XSc];po;[W]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/XLr_rmw_XSc_po_W_PosRW_PodWW_Coe_Fence_rw_rwdWW_Rfe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'XLr_rmw_XSc_po_W_PosRW_PodWW_Coe_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x10=1; 0:x11=0; , 0:x5=0; 0:x10=1; 0:x11=1; , 0:x5=0; 0:x10=2; 0:x11=0; , 0:x5=0; 0:x10=2; 0:x11=1; , 0:x5=1; 0:x10=1; 0:x11=0; , 0:x5=1; 0:x10=1; 0:x11=1; , 0:x5=1; 0:x10=2; 0:x11=1; ]}
now_herd_logs_ppo_remove {'XLr_rmw_XSc_po_W_PosRW_PodWW_Coe_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x10=1; 0:x11=0; , 0:x5=0; 0:x10=1; 0:x11=1; , 0:x5=0; 0:x10=2; 0:x11=0; , 0:x5=0; 0:x10=2; 0:x11=1; , 0:x5=1; 0:x10=1; 0:x11=0; , 0:x5=1; 0:x10=1; 0:x11=1; , 0:x5=1; 0:x10=2; 0:x11=0; , 0:x5=1; 0:x10=2; 0:x11=1; ]}
XLr_rmw_XSc_po_W_PosRW_PodWW_Coe_Fence_rw_rwdWW_Rfe
[0:x5=0; 0:x10=1; 0:x11=0; , 0:x5=0; 0:x10=1; 0:x11=1; , 0:x5=0; 0:x10=2; 0:x11=0; , 0:x5=0; 0:x10=2; 0:x11=1; , 0:x5=1; 0:x10=1; 0:x11=0; , 0:x5=1; 0:x10=1; 0:x11=1; , 0:x5=1; 0:x10=2; 0:x11=0; , 0:x5=1; 0:x10=2; 0:x11=1; ]
[0:x5=0; 0:x10=1; 0:x11=0; , 0:x5=0; 0:x10=1; 0:x11=1; , 0:x5=0; 0:x10=2; 0:x11=0; , 0:x5=0; 0:x10=2; 0:x11=1; , 0:x5=1; 0:x10=1; 0:x11=0; , 0:x5=1; 0:x10=1; 0:x11=1; , 0:x5=1; 0:x10=2; 0:x11=1; ]
['XLr_rmw_XSc_po_W_PosRW_PodWW_Coe_Fence_rw_rwdWW_Rfe']
check ppo [XLr];po;[W]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/XLr_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: XLr_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
chip: [0:x5=0; 0:x9=1; , 0:x5=1; 0:x9=1; , 0:x5=0; 0:x9=2; ]
check ppo [XLr];po;[W] True
check ppo [XSc];po;[W]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/XLr_rmw_XSc_po_W_PosRW_PodWW_Coe_Fence_rw_rwdWW_Rfe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: XLr_rmw_XSc_po_W_PosRW_PodWW_Coe_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x10=1; 0:x11=0; , 0:x5=0; 0:x10=1; 0:x11=1; , 0:x5=0; 0:x10=2; 0:x11=0; , 0:x5=0; 0:x10=2; 0:x11=1; , 0:x5=1; 0:x10=1; 0:x11=0; , 0:x5=1; 0:x10=1; 0:x11=1; , 0:x5=1; 0:x10=2; 0:x11=1; ]
chip: [0:x5=0; 0:x10=1; 0:x11=0; , 0:x5=0; 0:x10=1; 0:x11=1; , 0:x5=1; 0:x10=1; 0:x11=0; , 0:x5=1; 0:x10=1; 0:x11=1; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/XLr_rmw_XSc_po_W_PosRW_PodWW_Coe_Fence_rw_rwdWW_Rfe.litmus
check ppo [XSc];po;[W] False
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [XLr];po;[W]
start check
check counter ppo
ppo:[XLr];po;[W] => counter_ppo:
-----------------
ID0:candidate_ppo [XLr];po;[W]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/ATOMICS/RELAX/PodRWXP/LB+fence.rw.rw+poxp.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/XLr_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe.litmus
validate: LB+fence.rw.rw+poxp
herd: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
chip: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
validate: XLr_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
chip: [0:x5=0; 0:x9=1; , 0:x5=1; 0:x9=1; , 0:x5=0; 0:x9=2; ]
candidate_ppo: [XLr];po;[W], cur_failed_litmus_tests: [], passed? True

[XLr];po;[W] pass test
==== candidate ppo ====
[XLr];po;[W] [XLr];po;[W] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/ATOMICS/RELAX/PodRWXP/LB+fence.rw.rw+poxp.litmus
synth ppo by litmus test 45
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
validate: LB+fence.rw.rw+popx
herd: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=1; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; ]
chip: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/ATOMICS/RELAX/PodRWPX/LB+fence.rw.rw+popx.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/ATOMICS/RELAX/PodRWPX/LB+fence.rw.rw+popx.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x7=1; 1:x8=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x7=x}
         P0         |            P1             ;
<0x00> lw x5, 0(x6) | <0x00> lw x5, 0(x6)       ;
<0x04> fence rw, rw | <0x04> lr.w x9, 0(x7)     ;
<0x08> sw x7, 0(x8) | <0x08> sc.w x10, x8, (x7) ;

QType.Exists (x==1/\0:x5==1/\1:x10==0/\1:x5==1/\1:x9==0)

Progress [1/2]: |██████████████████████████████████████████████████| 100.0%Progress [2/2]: |██████████████████████████████████████████████████| 100.0%

States 6
0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1;  => 1
0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0;  => 1
0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1;  => 1
0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0;  => 1
0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1;  => 1
0:x5=1; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1;  => 1
Time LB+fence.rw.rw+popx  0.0739s
#Executions: 70

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/ATOMICS/RELAX/PodRWPX/LB+fence.rw.rw+popx.litmus
b_minus_a: {0:x5=1; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; }
1
strengthen,s,exe 0:x5=1; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1;  [P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), ['po']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
now check the paths P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')]
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 False False
candidate_add_ppo R;po;XLr
all_rels
rel --: None P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 True False ['rfe']
rel P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.XLr(e2)

add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 False False ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), ['po']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')]]
need_check_ppo [R];po;[XLr] target_ppo [R];po;[XLr]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 False False ['po']
check all rels
check rel --: None P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 True False ['rfe']
check rel P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 False False ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), ['po']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')]]
need_check_ppo [R];po;[XLr] target_ppo [R];po;[XLr]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')]
{}
filter_cycle [[P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	]]
ppo [R];po;[XLr]
e1 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	
cycle str
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation rmw
end relation rfe
path_single_ppo [R];po;[XLr]
other_single_ppo rmw;[XSc];rfe;[R];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [R];po;[XLr]
other_single_ppo justify rmw;[XSc];rfe;[R];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PodRR PosRW Rfe Fence.rw.rwdRW Rfe
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
now check the paths P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')]
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')]
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')]
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')]
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')]
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 False False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 False False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True
candidate_add_ppo R;po;XLr;po;XSc
all_rels
rel --: None P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 True False ['rfe']
rel P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.R(e1) and ra.po(e1,e2) and ra.XLr(e2) and ra.po(e2,e3) and ra.XSc(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')]]
need_check_ppo [R];po;[XLr];rmw;[XSc] target_ppo [R];po;[XLr];po;[XSc]
need_check_ppo [R];po;[XLr];po;[XSc] target_ppo [R];po;[XLr];po;[XSc]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['po']
check all rels
check rel --: None P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 True False ['rfe']
check rel P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')]]
need_check_ppo [R];po;[XLr];rmw;[XSc] target_ppo [R];po;[XLr];po;[XSc]
need_check_ppo [R];po;[XLr];po;[XSc] target_ppo [R];po;[XLr];po;[XSc]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')]
{}
filter_cycle [[P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	]]
ppo [R];po;[XLr];po;[XSc]
e1 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
cycle str
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation rfe
end relation rfe
path_single_ppo [R];po;[XLr];po;[XSc]
other_single_ppo rfe;[R];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [R];po;[XLr];po;[XSc]
other_single_ppo justify rfe;[R];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PodRR PodRW Rfe Fence.rw.rwdRW Rfe
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 False False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True
candidate_add_ppo R;po;XLr;po-loc;XSc
all_rels
rel --: None P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 True False ['rfe']
rel P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.R(e1) and ra.po(e1,e2) and ra.XLr(e2) and ra.po_loc(e2,e3) and ra.XSc(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')]]
need_check_ppo [R];po;[XLr];rmw;[XSc] target_ppo [R];po;[XLr];po-loc;[XSc]
need_check_ppo [R];po;[XLr];po;[XSc] target_ppo [R];po;[XLr];po-loc;[XSc]
need_check_ppo [R];po;[XLr];po-loc;[XSc] target_ppo [R];po;[XLr];po-loc;[XSc]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['po']
check all rels
check rel --: None P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 True False ['rfe']
check rel P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')]]
need_check_ppo [R];po;[XLr];rmw;[XSc] target_ppo [R];po;[XLr];po-loc;[XSc]
need_check_ppo [R];po;[XLr];po;[XSc] target_ppo [R];po;[XLr];po-loc;[XSc]
need_check_ppo [R];po;[XLr];po-loc;[XSc] target_ppo [R];po;[XLr];po-loc;[XSc]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')]
{}
filter_cycle [[P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	]]
ppo [R];po;[XLr];po-loc;[XSc]
e1 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
cycle str
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation rfe
end relation rfe
path_single_ppo [R];po;[XLr];po-loc;[XSc]
other_single_ppo rfe;[R];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [R];po;[XLr];po-loc;[XSc]
other_single_ppo justify rfe;[R];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PodRR PosRW Rfe Fence.rw.rwdRW Rfe
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 False False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True
candidate_add_ppo R;po;XLr;fri;XSc
all_rels
rel --: None P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 True False ['rfe']
rel P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.R(e1) and ra.po(e1,e2) and ra.XLr(e2) and ra.fri(e2,e3) and ra.XSc(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')]]
need_check_ppo [R];po;[XLr];rmw;[XSc] target_ppo [R];po;[XLr];fri;[XSc]
need_check_ppo [R];po;[XLr];po;[XSc] target_ppo [R];po;[XLr];fri;[XSc]
need_check_ppo [R];po;[XLr];po-loc;[XSc] target_ppo [R];po;[XLr];fri;[XSc]
need_check_ppo [R];po;[XLr];fri;[XSc] target_ppo [R];po;[XLr];fri;[XSc]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['po']
check all rels
check rel --: None P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 True False ['rfe']
check rel P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')]]
need_check_ppo [R];po;[XLr];rmw;[XSc] target_ppo [R];po;[XLr];fri;[XSc]
need_check_ppo [R];po;[XLr];po;[XSc] target_ppo [R];po;[XLr];fri;[XSc]
need_check_ppo [R];po;[XLr];po-loc;[XSc] target_ppo [R];po;[XLr];fri;[XSc]
need_check_ppo [R];po;[XLr];fri;[XSc] target_ppo [R];po;[XLr];fri;[XSc]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')]
{}
filter_cycle [[P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	]]
ppo [R];po;[XLr];fri;[XSc]
e1 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
cycle str
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation rfe
end relation rfe
path_single_ppo [R];po;[XLr];fri;[XSc]
other_single_ppo rfe;[R];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [R];po;[XLr];fri;[XSc]
other_single_ppo justify rfe;[R];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PodRR Fri Rfe Fence.rw.rwdRW Rfe
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True
candidate_add_ppo R;po;XSc
all_rels
rel --: None P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 True True ['coe']
rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 True False ['rfe']
rel P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.XSc(e2)

add_rels
add rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
this path is True
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')], [(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')], [(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')], [(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')]]
need_check_ppo [XLr];rmw;[XSc] target_ppo [R];po;[XSc]
need_check_ppo [XLr];po;[XSc] target_ppo [R];po;[XSc]
need_check_ppo [XLr];po-loc;[XSc] target_ppo [R];po;[XSc]
need_check_ppo [XLr];fri;[XSc] target_ppo [R];po;[XSc]
exit get_path_from_e1_to_e2_by_ppo
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')]]
need_check_ppo [R];po;[XLr];rmw;[XSc] target_ppo [R];po;[XSc]
need_check_ppo [R];po;[XLr];po;[XSc] target_ppo [R];po;[XSc]
need_check_ppo [R];po;[XLr];po-loc;[XSc] target_ppo [R];po;[XSc]
need_check_ppo [R];po;[XLr];fri;[XSc] target_ppo [R];po;[XSc]
need_check_ppo [R];po;[XSc] target_ppo [R];po;[XSc]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['po']
check all rels
check rel --: None P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 True True ['coe']
check rel --: None P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 True False ['rfe']
check rel P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	 False True ['fence', 'po', 'fence_rw_rw']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, is write event:False
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['po']
ei,ej,relations, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	(R), P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po')
(P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'rmw')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po_loc')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, 'po'), (P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'fri')], [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')]]
need_check_ppo [R];po;[XLr];rmw;[XSc] target_ppo [R];po;[XSc]
need_check_ppo [R];po;[XLr];po;[XSc] target_ppo [R];po;[XSc]
need_check_ppo [R];po;[XLr];po-loc;[XSc] target_ppo [R];po;[XSc]
need_check_ppo [R];po;[XLr];fri;[XSc] target_ppo [R];po;[XSc]
need_check_ppo [R];po;[XSc] target_ppo [R];po;[XSc]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, 'po')]
{}
filter_cycle [[P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	]]
ppo [R];po;[XSc]
e1 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
e2 P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
cycle str
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	
start_relation rfe
end relation rfe
path_single_ppo [R];po;[XSc]
other_single_ppo rfe;[R];fencerel(Fence.rw.rw);[W];rfe
path_single_ppo justify [R];po;[XSc]
other_single_ppo justify rfe;[R];fencerel(Fence.rw.rw);[W];rfe
diy_cycle PodRW Rfe Fence.rw.rwdRW Rfe
stengthen state, 0:x5=1; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd69b6b40> [P1: <0x04>	lr.w x9_p1_1, 0(x7_p1_0)	, P1: <0x08>	sc.w x10_p1_1, x8_p1_0, (x7_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x08>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdd7465f10>, <src.tracesynth.synth.constraint.Constraint object at 0x7acdd74c0920>] False
{0:x7=1; 1:x8=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x7=x}
         P0         |            P1             ;
<0x00> lw x5, 0(x6) | <0x00> lw x5, 0(x6)       ;
<0x04> fence rw, rw | <0x04> lr.w x9, 0(x7)     ;
<0x08> sw x7, 0(x8) | <0x08> sc.w x10, x8, (x7) ;

QType.Exists (x==1/\0:x5==1/\1:x10==0/\1:x5==1/\1:x9==0)

Progress [1/2]: |██████████████████████████████████████████████████| 100.0%Progress [2/2]: |██████████████████████████████████████████████████| 100.0%

States 6
0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1;  => 1
0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0;  => 1
0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1;  => 1
0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0;  => 1
0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1;  => 1
0:x5=1; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1;  => 1
Time LB+fence.rw.rw+popx  0.0337s
#Executions: 20

complete exe list
get new mm
uninit_func_list
ppo_candidate_func38 W;fence_r_rw;W 
def ppo_candidate_func38(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func39 W;fence_rw_w;R 
def ppo_candidate_func39(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func40 W;fence_r_rw;R 
def ppo_candidate_func40(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func41 R;fence_w_w;W 
def ppo_candidate_func41(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_w(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func42 R;fence_rw_w;R 
def ppo_candidate_func42(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func43 R;fence_w_r;R 
def ppo_candidate_func43(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_r(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func44 W;fence_tso;R 
def ppo_candidate_func44(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_tso(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func45 W;fence_r_r;R 
def ppo_candidate_func45(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_r(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func46 XLr;po;W 
def ppo_candidate_func46(ra, e1: Event, e2: Event) -> bool:
    return ra.XLr(e1) and ra.po(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
new_mm start
init failed: 1
start synth
any_ppo size: 2
candidate_ppos size: 1
candidate_ppos size: 4
candidate_ppo: [R];po;[XLr], relax is False
ID: 0 cur candidate_ppo: [R];po;[XLr],relax is False
[R];po;[XLr]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [R];po;[XLr] contain_flag False can_relax_flag False
add ppo [R];po;[XLr] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]', '[XLr];po;[W]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]', '[XLr];po;[W]', '[R];po;[XLr]']
ppo [R];po;[XLr] index 0
[R];po;[XLr]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
ppo [R];po;[XLr]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_XLr_PodRR_Fre_Fence_rw_rwdWW_Rfe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'R_po_XLr_PodRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'R_po_XLr_PodRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]}
R_po_XLr_PodRR_Fre_Fence_rw_rwdWW_Rfe
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
['R_po_XLr_PodRR_Fre_Fence_rw_rwdWW_Rfe']
check ppo [R];po;[XLr]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_XLr_PodRR_Fre_Fence_rw_rwdWW_Rfe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: R_po_XLr_PodRR_Fre_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
chip: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
check ppo [R];po;[XLr] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [R];po;[XLr]
start check
check counter ppo
ppo:[R];po;[XLr] => counter_ppo:
-----------------
ID0:candidate_ppo [R];po;[XLr]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/ATOMICS/RELAX/PodRWPX/LB+fence.rw.rw+popx.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_XLr_PodRR_Fre_Fence_rw_rwdWW_Rfe.litmus
validate: LB+fence.rw.rw+popx
herd: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
chip: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
validate: R_po_XLr_PodRR_Fre_Fence_rw_rwdWW_Rfe
herd: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
chip: [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
candidate_ppo: [R];po;[XLr], cur_failed_litmus_tests: [], passed? True

[R];po;[XLr] pass test
==== candidate ppo ====
[R];po;[XLr] [R];po;[XLr] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/ATOMICS/RELAX/PodRWPX/LB+fence.rw.rw+popx.litmus
synth ppo by litmus test 46
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: S+fence.rw.rw+popx
herd: [1:x5=0; 1:x9=0; 1:x10=0; [x]=2; , 1:x5=0; 1:x9=0; 1:x10=1; [x]=2; , 1:x5=0; 1:x9=2; 1:x10=0; [x]=1; , 1:x5=0; 1:x9=2; 1:x10=1; [x]=2; , 1:x5=1; 1:x9=2; 1:x10=0; [x]=1; , 1:x5=1; 1:x9=2; 1:x10=1; [x]=2; ]
chip: [1:x5=0; 1:x9=0; 1:x10=0; [x]=2; , 1:x5=0; 1:x9=0; 1:x10=1; [x]=2; , 1:x5=0; 1:x9=2; 1:x10=0; [x]=1; , 1:x5=0; 1:x9=2; 1:x10=1; [x]=2; , 1:x5=1; 1:x9=2; 1:x10=0; [x]=1; , 1:x5=1; 1:x9=2; 1:x10=1; [x]=2; ]
synth ppo by litmus test 47
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: S+fence.rw.rw+poxp
herd: [1:x6=0; 1:x7=0; [x]=1; [y]=1; , 1:x6=0; 1:x7=0; [x]=2; [y]=1; , 1:x6=0; 1:x7=1; [x]=1; [y]=1; , 1:x6=0; 1:x7=1; [x]=2; [y]=1; , 1:x6=1; 1:x7=0; [x]=1; [y]=1; , 1:x6=1; 1:x7=1; [x]=1; [y]=1; ]
chip: [1:x6=0; 1:x7=0; [x]=1; [y]=1; , 1:x6=0; 1:x7=0; [x]=2; [y]=1; , 1:x6=0; 1:x7=1; [x]=1; [y]=1; , 1:x6=0; 1:x7=1; [x]=2; [y]=1; , 1:x6=1; 1:x7=0; [x]=1; [y]=1; , 1:x6=1; 1:x7=1; [x]=1; [y]=1; ]
synth ppo by litmus test 48
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: SB+fence.tso+fence.tsoxp
herd: [0:x7=0; 1:x7=0; 1:x8=0; 1:x9=1; [y]=1; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x9=0; [y]=0; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x9=1; [y]=0; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x9=0; [y]=1; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x9=1; [y]=1; ]
chip: [0:x7=0; 1:x7=0; 1:x8=0; 1:x9=1; [y]=1; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x9=0; [y]=0; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x9=1; [y]=0; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x9=0; [y]=1; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x9=1; [y]=1; ]
synth ppo by litmus test 49
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: R+fence.tsoxp+fence.tso
herd: [0:x7=0; 0:x8=0; 1:x7=0; [x]=1; [y]=1; , 0:x7=0; 0:x8=0; 1:x7=1; [x]=1; [y]=1; , 0:x7=0; 0:x8=0; 1:x7=1; [x]=1; [y]=2; , 0:x7=0; 0:x8=1; 1:x7=0; [x]=0; [y]=1; , 0:x7=0; 0:x8=1; 1:x7=0; [x]=0; [y]=2; ]
chip: [0:x7=0; 0:x8=0; 1:x7=0; [x]=1; [y]=1; , 0:x7=0; 0:x8=0; 1:x7=1; [x]=1; [y]=1; , 0:x7=0; 0:x8=0; 1:x7=1; [x]=1; [y]=2; , 0:x7=0; 0:x8=1; 1:x7=0; [x]=0; [y]=1; , 0:x7=0; 0:x8=1; 1:x7=0; [x]=0; [y]=2; ]
synth ppo by litmus test 50
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: LB+ctrl+popx
herd: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
chip: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
synth ppo by litmus test 51
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: SB+fence.tso+fence.tsopx
herd: [0:x7=0; 1:x8=1; 1:x9=0; [x]=1; , 0:x7=0; 1:x8=1; 1:x9=1; [x]=1; , 0:x7=1; 1:x8=0; 1:x9=0; [x]=1; , 0:x7=1; 1:x8=0; 1:x9=1; [x]=1; , 0:x7=1; 1:x8=1; 1:x9=0; [x]=1; , 0:x7=1; 1:x8=1; 1:x9=1; [x]=1; ]
chip: [0:x7=0; 1:x8=1; 1:x9=0; [x]=1; , 0:x7=0; 1:x8=1; 1:x9=1; [x]=1; , 0:x7=1; 1:x8=0; 1:x9=0; [x]=1; , 0:x7=1; 1:x8=0; 1:x9=1; [x]=1; , 0:x7=1; 1:x8=1; 1:x9=0; [x]=1; , 0:x7=1; 1:x8=1; 1:x9=1; [x]=1; ]
synth ppo by litmus test 52
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: 2+2W+fence.tso+fence.tsopx
herd: [1:x9=0; 1:x10=0; [x]=2; [y]=1; , 1:x9=0; 1:x10=1; [x]=2; [y]=1; , 1:x9=2; 1:x10=0; [x]=1; [y]=1; , 1:x9=2; 1:x10=0; [x]=1; [y]=2; , 1:x9=2; 1:x10=1; [x]=2; [y]=1; , 1:x9=2; 1:x10=1; [x]=2; [y]=2; ]
chip: [1:x9=0; 1:x10=0; [x]=2; [y]=1; , 1:x9=0; 1:x10=1; [x]=2; [y]=1; , 1:x9=2; 1:x10=0; [x]=1; [y]=1; , 1:x9=2; 1:x10=0; [x]=1; [y]=2; , 1:x9=2; 1:x10=1; [x]=2; [y]=1; , 1:x9=2; 1:x10=1; [x]=2; [y]=2; ]
synth ppo by litmus test 53
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: R+fence.tso+fence.tsopx
herd: [1:x8=0; 1:x9=0; [x]=1; [y]=1; , 1:x8=0; 1:x9=1; [x]=1; [y]=1; , 1:x8=1; 1:x9=0; [x]=1; [y]=1; , 1:x8=1; 1:x9=0; [x]=1; [y]=2; , 1:x8=1; 1:x9=1; [x]=1; [y]=1; , 1:x8=1; 1:x9=1; [x]=1; [y]=2; ]
chip: [1:x8=0; 1:x9=0; [x]=1; [y]=1; , 1:x8=0; 1:x9=1; [x]=1; [y]=1; , 1:x8=1; 1:x9=0; [x]=1; [y]=1; , 1:x8=1; 1:x9=0; [x]=1; [y]=2; , 1:x8=1; 1:x9=1; [x]=1; [y]=1; , 1:x8=1; 1:x9=1; [x]=1; [y]=2; ]
synth ppo by litmus test 54
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: R+fence.tsopx+fence.tso
herd: [0:x8=0; 0:x9=0; 1:x7=1; [y]=2; , 0:x8=0; 0:x9=1; 1:x7=1; [y]=2; , 0:x8=2; 0:x9=0; 1:x7=0; [y]=1; , 0:x8=2; 0:x9=0; 1:x7=1; [y]=1; , 0:x8=2; 0:x9=1; 1:x7=0; [y]=2; , 0:x8=2; 0:x9=1; 1:x7=1; [y]=2; ]
chip: [0:x8=0; 0:x9=0; 1:x7=1; [y]=2; , 0:x8=0; 0:x9=1; 1:x7=1; [y]=2; , 0:x8=2; 0:x9=0; 1:x7=0; [y]=1; , 0:x8=2; 0:x9=0; 1:x7=1; [y]=1; , 0:x8=2; 0:x9=1; 1:x7=0; [y]=2; , 0:x8=2; 0:x9=1; 1:x7=1; [y]=2; ]
synth ppo by litmus test 55
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: LB+addr+poxp
herd: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
chip: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
synth ppo by litmus test 56
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: LB+data+poxp
herd: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
chip: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
synth ppo by litmus test 57
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: LB+addr+popx
herd: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
chip: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
synth ppo by litmus test 58
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: LB+data+popx
herd: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
chip: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
synth ppo by litmus test 59
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: LB+ctrl+poxp
herd: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
chip: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
synth ppo by litmus test 60
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: ISA-MP-DEP-SUCCESS-SWAP-SIMPLE
herd: [1:x3=0; 1:x4=0; 1:x5=0; , 1:x3=0; 1:x4=0; 1:x5=2; , 1:x3=0; 1:x4=1; 1:x5=0; , 1:x3=0; 1:x4=1; 1:x5=2; , 1:x3=1; 1:x4=0; 1:x5=2; , 1:x3=1; 1:x4=1; 1:x5=2; ]
chip: [1:x3=0; 1:x4=0; 1:x5=0; , 1:x3=0; 1:x4=0; 1:x5=2; , 1:x3=0; 1:x4=1; 1:x5=0; , 1:x3=0; 1:x4=1; 1:x5=2; , 1:x3=1; 1:x4=0; 1:x5=2; , 1:x3=1; 1:x4=1; 1:x5=2; ]
synth ppo by litmus test 61
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: LB+data+datapx-dataxp
herd: [0:x5=0; 1:x5=0; 1:x10=0; [z]=1; , 0:x5=0; 1:x5=0; 1:x10=1; [z]=0; , 0:x5=0; 1:x5=1; 1:x10=0; [z]=1; , 0:x5=0; 1:x5=1; 1:x10=1; [z]=0; , 0:x5=1; 1:x5=0; 1:x10=0; [z]=1; , 0:x5=1; 1:x5=0; 1:x10=1; [z]=0; ]
chip: [0:x5=0; 1:x5=0; 1:x10=0; [z]=1; , 0:x5=0; 1:x5=0; 1:x10=1; [z]=0; , 0:x5=0; 1:x5=1; 1:x10=0; [z]=1; , 0:x5=0; 1:x5=1; 1:x10=1; [z]=0; , 0:x5=1; 1:x5=0; 1:x10=0; [z]=1; , 0:x5=1; 1:x5=0; 1:x10=1; [z]=0; ]
synth ppo by litmus test 62
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: ISA-MP-DEP-SUCCESS-SWAP
herd: [1:x2=0; 1:x4=0; 1:x5=0; , 1:x2=0; 1:x4=0; 1:x5=2; , 1:x2=0; 1:x4=1; 1:x5=0; , 1:x2=0; 1:x4=1; 1:x5=2; , 1:x2=1; 1:x4=0; 1:x5=2; , 1:x2=1; 1:x4=1; 1:x5=2; ]
chip: [1:x2=0; 1:x4=0; 1:x5=0; , 1:x2=0; 1:x4=0; 1:x5=2; , 1:x2=0; 1:x4=1; 1:x5=0; , 1:x2=0; 1:x4=1; 1:x5=2; , 1:x2=1; 1:x4=0; 1:x5=2; , 1:x2=1; 1:x4=1; 1:x5=2; ]
synth ppo by litmus test 63
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
validate: SB+popaqs+NEW
herd: [0:x7=0; 1:x7=0; , 0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/AMO_X0_2_THREAD/SB+popaqs+NEW.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/AMO_X0_2_THREAD/SB+popaqs+NEW.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x5=1; 1:x5=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
              P0               |              P1                ;
<0x00> sw x5, 0(x6)            | <0x00> sw x5, 0(x6)            ;
<0x04> amoor.w.aq x7, x0, (x8) | <0x04> amoor.w.aq x7, x0, (x8) ;

QType.Exists (0:x7==0/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
0:x7=0; 1:x7=0;  => 1
0:x7=0; 1:x7=1;  => 1
0:x7=1; 1:x7=0;  => 1
0:x7=1; 1:x7=1;  => 1
Time SB+popaqs+NEW  0.0225s
#Executions: 24

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/AMO_X0_2_THREAD/SB+popaqs+NEW.litmus
b_minus_a: {0:x7=0; 1:x7=0; }
1
strengthen,s,exe 0:x7=0; 1:x7=0;  [P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:True
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:False
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(W), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), []
this path is False
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
now check the paths P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')
now check the paths P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')]
[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')]
[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')]
[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')]
from this path get ppo
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True
candidate_add_ppo W;po;AQ;rmw;AQ
all_rels
rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True False ['rfe']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po(e1,e2) and ra.AQ(e2) and ra.rmw(e2,e3) and ra.AQ(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['po']
add rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:False
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];rmw;[AQ]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];rmw;[AQ]
add_rels_final
add rel final P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['po']
add rel final P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['po']
check all rels
check rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['po']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];rmw;[AQ]
insert_path [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:False
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];rmw;[AQ]
insert_path [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')]
{<0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	: True, <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	: True}
filter_cycle [[P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	]]
ppo [W];po;[AQ];rmw;[AQ]
e1 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
e2 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
cycle str
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
cycle str after change
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
start_relation coe
end relation coe
path_single_ppo [W];po;[AQ];rmw;[AQ]
other_single_ppo coe;[W];po;[AQ];rmw;[AQ];coe
path_single_ppo justify [W];po;[AQ]
other_single_ppo justify coe;[W];po;[AQ];coe
diy_cycle PodWRPAq Rmw Coe PodWRPAq Rmw Coe
from this path get ppo
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True
candidate_add_ppo W;po;AQ;po;AQ
all_rels
rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True False ['rfe']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po(e1,e2) and ra.AQ(e2) and ra.po(e2,e3) and ra.AQ(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['po']
add rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:False
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];po;[AQ]
need_check_ppo [W];po;[AQ];po;[AQ] target_ppo [W];po;[AQ];po;[AQ]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];po;[AQ]
need_check_ppo [W];po;[AQ];po;[AQ] target_ppo [W];po;[AQ];po;[AQ]
add_rels_final
add rel final P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['po']
add rel final P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['po']
check all rels
check rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['po']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];po;[AQ]
need_check_ppo [W];po;[AQ];po;[AQ] target_ppo [W];po;[AQ];po;[AQ]
insert_path [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:False
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];po;[AQ]
need_check_ppo [W];po;[AQ];po;[AQ] target_ppo [W];po;[AQ];po;[AQ]
insert_path [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')]
{<0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	: True, <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	: True}
filter_cycle [[P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	]]
ppo [W];po;[AQ];po;[AQ]
e1 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
e2 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
cycle str
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
cycle str after change
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
start_relation coe
end relation coe
path_single_ppo [W];po;[AQ];po;[AQ]
other_single_ppo coe;[W];po;[AQ];rmw;[AQ];coe
path_single_ppo justify [W];po;[AQ]
other_single_ppo justify coe;[W];po;[AQ];coe
diy_cycle PodWRPAq Rmw Coe PodWRPAq Rmw Coe
from this path get ppo
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True
candidate_add_ppo W;po;AQ;po-loc;AQ
all_rels
rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True False ['rfe']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po(e1,e2) and ra.AQ(e2) and ra.po_loc(e2,e3) and ra.AQ(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['po']
add rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:False
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];po-loc;[AQ]
need_check_ppo [W];po;[AQ];po;[AQ] target_ppo [W];po;[AQ];po-loc;[AQ]
need_check_ppo [W];po;[AQ];po-loc;[AQ] target_ppo [W];po;[AQ];po-loc;[AQ]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];po-loc;[AQ]
need_check_ppo [W];po;[AQ];po;[AQ] target_ppo [W];po;[AQ];po-loc;[AQ]
need_check_ppo [W];po;[AQ];po-loc;[AQ] target_ppo [W];po;[AQ];po-loc;[AQ]
add_rels_final
add rel final P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['po']
add rel final P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['po']
check all rels
check rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['po']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];po-loc;[AQ]
need_check_ppo [W];po;[AQ];po;[AQ] target_ppo [W];po;[AQ];po-loc;[AQ]
need_check_ppo [W];po;[AQ];po-loc;[AQ] target_ppo [W];po;[AQ];po-loc;[AQ]
insert_path [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:False
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];po-loc;[AQ]
need_check_ppo [W];po;[AQ];po;[AQ] target_ppo [W];po;[AQ];po-loc;[AQ]
need_check_ppo [W];po;[AQ];po-loc;[AQ] target_ppo [W];po;[AQ];po-loc;[AQ]
insert_path [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')]
{<0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	: True, <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	: True}
filter_cycle [[P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	]]
ppo [W];po;[AQ];po-loc;[AQ]
e1 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
e2 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
cycle str
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
cycle str after change
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
start_relation coe
end relation coe
path_single_ppo [W];po;[AQ];po-loc;[AQ]
other_single_ppo coe;[W];po;[AQ];rmw;[AQ];coe
path_single_ppo justify [W];po;[AQ]
other_single_ppo justify coe;[W];po;[AQ];coe
diy_cycle PodWRPAq Rmw Coe PodWRPAq Rmw Coe
from this path get ppo
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True
candidate_add_ppo W;po;AQ;fri;AQ
all_rels
rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True False ['rfe']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 False True ['fre']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.W(e1) and ra.po(e1,e2) and ra.AQ(e2) and ra.fri(e2,e3) and ra.AQ(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['po']
add rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:False
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
need_check_ppo [W];po;[AQ];po;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
need_check_ppo [W];po;[AQ];po-loc;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
need_check_ppo [W];po;[AQ];fri;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
need_check_ppo [W];po;[AQ];po;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
need_check_ppo [W];po;[AQ];po-loc;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
need_check_ppo [W];po;[AQ];fri;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
add_rels_final
add rel final P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['po']
add rel final P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['po']
check all rels
check rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 True True ['coe']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 False True ['fre']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
check rel P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	 P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	 True True ['po']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	 True True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:False
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(R), P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')
(P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'rmw')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po_loc')], [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
need_check_ppo [W];po;[AQ];po;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
need_check_ppo [W];po;[AQ];po-loc;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
need_check_ppo [W];po;[AQ];fri;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
insert_path [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'po'), (P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, 'fri')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, is write event:True
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:False
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	(W), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(R), P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')
(P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'rmw')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po_loc')], [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')]]
need_check_ppo [W];po;[AQ];rmw;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
need_check_ppo [W];po;[AQ];po;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
need_check_ppo [W];po;[AQ];po-loc;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
need_check_ppo [W];po;[AQ];fri;[AQ] target_ppo [W];po;[AQ];fri;[AQ]
insert_path [(P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'po'), (P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, 'fri')]
{<0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	: True, <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	: True}
filter_cycle [[P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	]]
ppo [W];po;[AQ];fri;[AQ]
e1 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
e2 P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
cycle str
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
cycle str after change
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	
P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	
start_relation coe
end relation coe
path_single_ppo [W];po;[AQ];fri;[AQ]
other_single_ppo coe;[W];po;[AQ];rmw;[AQ];coe
path_single_ppo justify [W];po;[AQ]
other_single_ppo justify coe;[W];po;[AQ];coe
diy_cycle PodWRPAq Rmw Coe PodWRPAq Rmw Coe
stengthen state, 0:x7=0; 1:x7=0;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd69ca840> [P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P0: <0x04>	amoor.w.aq x7_p0_1, x0_p0_0, (x8_p0_0)	, P1: <0x00>	sw x5_p1_0, 0(x6_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P1: <0x04>	amoor.w.aq x7_p1_1, x0_p1_0, (x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdd6e5f3b0>, <src.tracesynth.synth.constraint.Constraint object at 0x7acdd87e20c0>] False
{0:x5=1; 1:x5=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
              P0               |              P1                ;
<0x00> sw x5, 0(x6)            | <0x00> sw x5, 0(x6)            ;
<0x04> amoor.w.aq x7, x0, (x8) | <0x04> amoor.w.aq x7, x0, (x8) ;

QType.Exists (0:x7==0/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
0:x7=0; 1:x7=0;  => 1
0:x7=0; 1:x7=1;  => 1
0:x7=1; 1:x7=0;  => 1
0:x7=1; 1:x7=1;  => 1
Time SB+popaqs+NEW  0.0244s
#Executions: 24

complete exe list
get new mm
uninit_func_list
ppo_candidate_func38 W;fence_r_rw;W 
def ppo_candidate_func38(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func39 W;fence_rw_w;R 
def ppo_candidate_func39(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func40 W;fence_r_rw;R 
def ppo_candidate_func40(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func41 R;fence_w_w;W 
def ppo_candidate_func41(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_w(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func42 R;fence_rw_w;R 
def ppo_candidate_func42(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func43 R;fence_w_r;R 
def ppo_candidate_func43(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_r(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func44 W;fence_tso;R 
def ppo_candidate_func44(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_tso(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func45 W;fence_r_r;R 
def ppo_candidate_func45(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_r(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func46 XLr;po;W 
def ppo_candidate_func46(ra, e1: Event, e2: Event) -> bool:
    return ra.XLr(e1) and ra.po(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func47 R;po;XLr 
def ppo_candidate_func47(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.XLr(e2)
 PPOInitFlag.Verified
new_mm start
init failed: 1
start synth
any_ppo size: 2
candidate_ppos size: 0
candidate_ppos size: 4
candidate_ppo: [W];po;[AQ], relax is False
ID: 0 cur candidate_ppo: [W];po;[AQ],relax is False
[W];po;[AQ]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [W];po;[AQ] contain_flag False can_relax_flag False
add ppo [W];po;[AQ] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]', '[XLr];po;[W]', '[R];po;[XLr]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]', '[XLr];po;[W]', '[R];po;[XLr]', '[W];po;[AQ]']
ppo [W];po;[AQ] index 0
[W];po;[AQ]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
ppo [W];po;[AQ]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_AQ_PodWRPAq_Rmw_Coe_Fence_rw_rwdWW_Coe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_po_AQ_PodWRPAq_Rmw_Coe_Fence_rw_rwdWW_Coe': [1:x9=1; 0:x10=1; , 1:x9=1; 0:x10=2; , 1:x9=2; 0:x10=1; ]}
now_herd_logs_ppo_remove {'W_po_AQ_PodWRPAq_Rmw_Coe_Fence_rw_rwdWW_Coe': [1:x9=1; 0:x10=1; , 1:x9=1; 0:x10=2; , 1:x9=2; 0:x10=1; , 1:x9=2; 0:x10=2; ]}
W_po_AQ_PodWRPAq_Rmw_Coe_Fence_rw_rwdWW_Coe
[1:x9=1; 0:x10=1; , 1:x9=1; 0:x10=2; , 1:x9=2; 0:x10=1; , 1:x9=2; 0:x10=2; ]
[1:x9=1; 0:x10=1; , 1:x9=1; 0:x10=2; , 1:x9=2; 0:x10=1; ]
['W_po_AQ_PodWRPAq_Rmw_Coe_Fence_rw_rwdWW_Coe']
check ppo [W];po;[AQ]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_AQ_PodWRPAq_Rmw_Coe_Fence_rw_rwdWW_Coe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: W_po_AQ_PodWRPAq_Rmw_Coe_Fence_rw_rwdWW_Coe
herd: [1:x9=1; 0:x10=1; , 1:x9=1; 0:x10=2; , 1:x9=2; 0:x10=1; ]
chip: [1:x9=1; 0:x10=1; , 1:x9=1; 0:x10=2; , 1:x9=2; 0:x10=1; ]
check ppo [W];po;[AQ] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [W];po;[AQ]
start check
check counter ppo
ppo:[W];po;[AQ] => counter_ppo:
-----------------
ID0:candidate_ppo [W];po;[AQ]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/AMO_X0_2_THREAD/SB+popaqs+NEW.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_AQ_PodWRPAq_Rmw_Coe_Fence_rw_rwdWW_Coe.litmus
validate: SB+popaqs+NEW
herd: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
validate: W_po_AQ_PodWRPAq_Rmw_Coe_Fence_rw_rwdWW_Coe
herd: [1:x9=1; 0:x10=1; , 1:x9=1; 0:x10=2; , 1:x9=2; 0:x10=1; ]
chip: [1:x9=1; 0:x10=1; , 1:x9=1; 0:x10=2; , 1:x9=2; 0:x10=1; ]
candidate_ppo: [W];po;[AQ], cur_failed_litmus_tests: [], passed? True

[W];po;[AQ] pass test
==== candidate ppo ====
[W];po;[AQ] [W];po;[AQ] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/AMO_X0_2_THREAD/SB+popaqs+NEW.litmus
synth ppo by litmus test 64
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
validate: 2+2W+porlps+NEW
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; , [x]=2; [y]=2; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/AMO_X0_2_THREAD/2+2W+porlps+NEW.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/AMO_X0_2_THREAD/2+2W+porlps+NEW.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x5=2; 0:x7=1; 1:x5=2; 1:x7=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
               P0                |               P1                 ;
<0x00> amoswap.w.rl x0, x5, (x6) | <0x00> amoswap.w.rl x0, x5, (x6) ;
<0x04> sw x7, 0(x8)              | <0x04> sw x7, 0(x8)              ;

QType.Exists (x==2/\y==2)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
[x]=1; [y]=1;  => 1
[x]=1; [y]=2;  => 1
[x]=2; [y]=1;  => 1
[x]=2; [y]=2;  => 1
Time 2+2W+porlps+NEW  0.0191s
#Executions: 24

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/AMO_X0_2_THREAD/2+2W+porlps+NEW.litmus
b_minus_a: {[x]=2; [y]=2; }
1
strengthen,s,exe [x]=2; [y]=2;  [P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
events sequence
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:False
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:True
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(R), P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
now check the paths P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
[(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]
[(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]
[(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]
[(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]
from this path get ppo
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True
candidate_add_ppo RL;rmw;RL;po;W
all_rels
rel --: None P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
rel --: None P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True False ['rfe']
rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True False ['rfe']
rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.RL(e1) and ra.rmw(e1,e2) and ra.RL(e2) and ra.po(e2,e3) and ra.W(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
add rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:False
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:True
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(R), P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];rmw;[RL];po;[W]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:False
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:True
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(R), P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];rmw;[RL];po;[W]
add_rels_final
add rel final P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
add rel final P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
check rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
check rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
check rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True False ['rfe']
check rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
check rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:False
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:True
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(R), P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];rmw;[RL];po;[W]
insert_path [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:False
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:True
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(R), P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];rmw;[RL];po;[W]
insert_path [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]
{<0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	: True, <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	: True}
filter_cycle [[P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	]]
ppo [RL];rmw;[RL];po;[W]
e1 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
e2 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
cycle str
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
cycle str after change
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [RL];rmw;[RL];po;[W]
other_single_ppo rfe;[RL];rmw;[RL];po;[W];rfe
path_single_ppo justify [RL];po;[W]
other_single_ppo justify rfe;[RL];po;[W];rfe
diy_cycle Rmw PodWWRlP Rfe Rmw PodWWRlP Rfe
from this path get ppo
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True
candidate_add_ppo RL;po;RL;po;W
all_rels
rel --: None P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
rel --: None P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True False ['rfe']
rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True False ['rfe']
rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.RL(e1) and ra.po(e1,e2) and ra.RL(e2) and ra.po(e2,e3) and ra.W(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
add rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:False
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:True
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(R), P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];po;[RL];po;[W]
need_check_ppo [RL];po;[RL];po;[W] target_ppo [RL];po;[RL];po;[W]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:False
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:True
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(R), P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];po;[RL];po;[W]
need_check_ppo [RL];po;[RL];po;[W] target_ppo [RL];po;[RL];po;[W]
add_rels_final
add rel final P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
add rel final P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
check rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
check rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
check rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True False ['rfe']
check rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
check rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:False
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:True
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(R), P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];po;[RL];po;[W]
need_check_ppo [RL];po;[RL];po;[W] target_ppo [RL];po;[RL];po;[W]
insert_path [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:False
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:True
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(R), P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];po;[RL];po;[W]
need_check_ppo [RL];po;[RL];po;[W] target_ppo [RL];po;[RL];po;[W]
insert_path [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]
{<0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	: True, <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	: True}
filter_cycle [[P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	]]
ppo [RL];po;[RL];po;[W]
e1 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
e2 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
cycle str
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
cycle str after change
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [RL];po;[RL];po;[W]
other_single_ppo rfe;[RL];rmw;[RL];po;[W];rfe
path_single_ppo justify [RL];po;[W]
other_single_ppo justify rfe;[RL];po;[W];rfe
diy_cycle Rmw PodWWRlP Rfe Rmw PodWWRlP Rfe
from this path get ppo
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True
candidate_add_ppo RL;po-loc;RL;po;W
all_rels
rel --: None P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
rel --: None P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True False ['rfe']
rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True False ['rfe']
rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.RL(e1) and ra.po_loc(e1,e2) and ra.RL(e2) and ra.po(e2,e3) and ra.W(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
add rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:False
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:True
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(R), P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];po-loc;[RL];po;[W]
need_check_ppo [RL];po;[RL];po;[W] target_ppo [RL];po-loc;[RL];po;[W]
need_check_ppo [RL];po-loc;[RL];po;[W] target_ppo [RL];po-loc;[RL];po;[W]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:False
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:True
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(R), P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];po-loc;[RL];po;[W]
need_check_ppo [RL];po;[RL];po;[W] target_ppo [RL];po-loc;[RL];po;[W]
need_check_ppo [RL];po-loc;[RL];po;[W] target_ppo [RL];po-loc;[RL];po;[W]
add_rels_final
add rel final P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
add rel final P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
check rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
check rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
check rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True False ['rfe']
check rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
check rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:False
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:True
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(R), P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];po-loc;[RL];po;[W]
need_check_ppo [RL];po;[RL];po;[W] target_ppo [RL];po-loc;[RL];po;[W]
need_check_ppo [RL];po-loc;[RL];po;[W] target_ppo [RL];po-loc;[RL];po;[W]
insert_path [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:False
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:True
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(R), P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];po-loc;[RL];po;[W]
need_check_ppo [RL];po;[RL];po;[W] target_ppo [RL];po-loc;[RL];po;[W]
need_check_ppo [RL];po-loc;[RL];po;[W] target_ppo [RL];po-loc;[RL];po;[W]
insert_path [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]
{<0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	: True, <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	: True}
filter_cycle [[P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	]]
ppo [RL];po-loc;[RL];po;[W]
e1 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
e2 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
cycle str
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
cycle str after change
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [RL];po-loc;[RL];po;[W]
other_single_ppo rfe;[RL];rmw;[RL];po;[W];rfe
path_single_ppo justify [RL];po;[W]
other_single_ppo justify rfe;[RL];po;[W];rfe
diy_cycle Rmw PodWWRlP Rfe Rmw PodWWRlP Rfe
from this path get ppo
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True
candidate_add_ppo RL;fri;RL;po;W
all_rels
rel --: None P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
rel --: None P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel --: None P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True False ['rfe']
rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True False ['rfe']
rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e3) -> bool:
    return any([ra.RL(e1) and ra.fri(e1,e2) and ra.RL(e2) and ra.po(e2,e3) and ra.W(e3)  for e2 in ra.execution ])
# 
add_rels
add rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
add rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:False
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:True
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(R), P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
need_check_ppo [RL];po;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
need_check_ppo [RL];po-loc;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
need_check_ppo [RL];fri;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:False
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:True
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(R), P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
need_check_ppo [RL];po;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
need_check_ppo [RL];po-loc;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
need_check_ppo [RL];fri;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
add_rels_final
add rel final P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
add rel final P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
check rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True True ['coe']
check rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
check rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 True False ['rfe']
check rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
check rel P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:False
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:True
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(R), P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
this path is True
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri')
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'rmw'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'po_loc'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')], [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
need_check_ppo [RL];po;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
need_check_ppo [RL];po-loc;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
need_check_ppo [RL];fri;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
insert_path [(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, 'fri'), (P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:False
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, is write event:True
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(R), P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	(W), P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
this path is True
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri')
(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'rmw'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'po_loc'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')], [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]]
need_check_ppo [RL];rmw;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
need_check_ppo [RL];po;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
need_check_ppo [RL];po-loc;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
need_check_ppo [RL];fri;[RL];po;[W] target_ppo [RL];fri;[RL];po;[W]
insert_path [(P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, 'fri'), (P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]
{<0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	: True, <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	: True}
filter_cycle [[P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	]]
ppo [RL];fri;[RL];po;[W]
e1 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
e2 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
cycle str
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
cycle str after change
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [RL];fri;[RL];po;[W]
other_single_ppo rfe;[RL];rmw;[RL];po;[W];rfe
path_single_ppo justify [RL];po;[W]
other_single_ppo justify rfe;[RL];po;[W];rfe
diy_cycle Rmw PodWWRlP Rfe Rmw PodWWRlP Rfe
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
events sequence
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:True
P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, is write event:False
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(R), []
ei,ej,relations, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	(W), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is False
(P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
now check the paths P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
stengthen state, [x]=2; [y]=2;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd6816600> [P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x00>	amoswap.w.rl x0_p1_0, x5_p1_0, (x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w.rl x0_p0_0, x5_p0_0, (x6_p0_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdd69c8770>, <src.tracesynth.synth.constraint.Constraint object at 0x7acdd87026c0>] False
{0:x5=2; 0:x7=1; 1:x5=2; 1:x7=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
               P0                |               P1                 ;
<0x00> amoswap.w.rl x0, x5, (x6) | <0x00> amoswap.w.rl x0, x5, (x6) ;
<0x04> sw x7, 0(x8)              | <0x04> sw x7, 0(x8)              ;

QType.Exists (x==2/\y==2)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
[x]=1; [y]=1;  => 1
[x]=1; [y]=2;  => 1
[x]=2; [y]=1;  => 1
[x]=2; [y]=2;  => 1
Time 2+2W+porlps+NEW  0.0213s
#Executions: 24

complete exe list
get new mm
uninit_func_list
ppo_candidate_func38 W;fence_r_rw;W 
def ppo_candidate_func38(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func39 W;fence_rw_w;R 
def ppo_candidate_func39(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func40 W;fence_r_rw;R 
def ppo_candidate_func40(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func41 R;fence_w_w;W 
def ppo_candidate_func41(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_w(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func42 R;fence_rw_w;R 
def ppo_candidate_func42(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func43 R;fence_w_r;R 
def ppo_candidate_func43(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_r(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func44 W;fence_tso;R 
def ppo_candidate_func44(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_tso(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func45 W;fence_r_r;R 
def ppo_candidate_func45(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_r(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func46 XLr;po;W 
def ppo_candidate_func46(ra, e1: Event, e2: Event) -> bool:
    return ra.XLr(e1) and ra.po(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func47 R;po;XLr 
def ppo_candidate_func47(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.XLr(e2)
 PPOInitFlag.Verified
ppo_candidate_func48 W;po;AQ 
def ppo_candidate_func48(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po(e1,e2) and ra.AQ(e2)
 PPOInitFlag.Verified
new_mm start
init failed: 1
start synth
any_ppo size: 2
candidate_ppos size: 4
candidate_ppos size: 0
candidate_ppo: [RL];po;[W], relax is False
ID: 0 cur candidate_ppo: [RL];po;[W],relax is False
[RL];po;[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [RL];po;[W] contain_flag False can_relax_flag False
add ppo [RL];po;[W] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]', '[XLr];po;[W]', '[R];po;[XLr]', '[W];po;[AQ]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]', '[XLr];po;[W]', '[R];po;[XLr]', '[W];po;[AQ]', '[RL];po;[W]']
ppo [RL];po;[W] index 0
[RL];po;[W]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
[RL];po;[W]
ppo [RL];po;[W]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/RL_po_W_Rmw_PodWWRlP_Coe_Fence_rw_rwdWW_Rfe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'RL_po_W_Rmw_PodWWRlP_Coe_Fence_rw_rwdWW_Rfe': [0:x6=0; 0:x10=1; , 0:x6=0; 0:x10=2; , 0:x6=1; 0:x10=1; ]}
now_herd_logs_ppo_remove {'RL_po_W_Rmw_PodWWRlP_Coe_Fence_rw_rwdWW_Rfe': [0:x6=0; 0:x10=1; , 0:x6=0; 0:x10=2; , 0:x6=1; 0:x10=1; , 0:x6=1; 0:x10=2; ]}
RL_po_W_Rmw_PodWWRlP_Coe_Fence_rw_rwdWW_Rfe
[0:x6=0; 0:x10=1; , 0:x6=0; 0:x10=2; , 0:x6=1; 0:x10=1; , 0:x6=1; 0:x10=2; ]
[0:x6=0; 0:x10=1; , 0:x6=0; 0:x10=2; , 0:x6=1; 0:x10=1; ]
['RL_po_W_Rmw_PodWWRlP_Coe_Fence_rw_rwdWW_Rfe']
check ppo [RL];po;[W]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/RL_po_W_Rmw_PodWWRlP_Coe_Fence_rw_rwdWW_Rfe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: RL_po_W_Rmw_PodWWRlP_Coe_Fence_rw_rwdWW_Rfe
herd: [0:x6=0; 0:x10=1; , 0:x6=0; 0:x10=2; , 0:x6=1; 0:x10=1; ]
chip: [0:x6=0; 0:x10=1; , 0:x6=1; 0:x10=1; , 0:x6=0; 0:x10=2; ]
check ppo [RL];po;[W] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [RL];po;[W]
start check
check counter ppo
ppo:[RL];po;[W] => counter_ppo:
-----------------
ID0:candidate_ppo [RL];po;[W]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
[RL];po;[W]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/AMO_X0_2_THREAD/2+2W+porlps+NEW.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/RL_po_W_Rmw_PodWWRlP_Coe_Fence_rw_rwdWW_Rfe.litmus
validate: 2+2W+porlps+NEW
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
validate: RL_po_W_Rmw_PodWWRlP_Coe_Fence_rw_rwdWW_Rfe
herd: [0:x6=0; 0:x10=1; , 0:x6=0; 0:x10=2; , 0:x6=1; 0:x10=1; ]
chip: [0:x6=0; 0:x10=1; , 0:x6=1; 0:x10=1; , 0:x6=0; 0:x10=2; ]
candidate_ppo: [RL];po;[W], cur_failed_litmus_tests: [], passed? True

[RL];po;[W] pass test
==== candidate ppo ====
[RL];po;[W] [RL];po;[W] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/AMO_X0_2_THREAD/2+2W+porlps+NEW.litmus
synth ppo by litmus test 65
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
[RL];po;[W]
validate: S+porlp+poprl+NEW
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
synth ppo by litmus test 66
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
[RL];po;[W]
validate: 2+2W+poprl+porlp+NEW
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
synth ppo by litmus test 67
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
[RL];po;[W]
validate: 2+2W+porlp+porlrl+NEW
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
synth ppo by litmus test 68
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
[RL];po;[W]
validate: 2+2Swap
herd: [0:x10=0; 0:x11=0; 1:x10=1; 1:x11=2; [x]=1; [y]=2; , 0:x10=0; 0:x11=2; 1:x10=0; 1:x11=2; [x]=1; [y]=1; , 0:x10=1; 0:x11=0; 1:x10=1; 1:x11=0; [x]=2; [y]=2; , 0:x10=1; 0:x11=2; 1:x10=0; 1:x11=0; [x]=2; [y]=1; ]
chip: [0:x10=0; 0:x11=0; 1:x10=1; 1:x11=2; [x]=1; [y]=2; , 0:x10=0; 0:x11=2; 1:x10=0; 1:x11=2; [x]=1; [y]=1; , 0:x10=1; 0:x11=2; 1:x10=0; 1:x11=0; [x]=2; [y]=1; ]
failed: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/2+2Swap.litmus
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/2+2Swap.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
run
{0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
              P0               |              P1                ;
<0x00> ori x5, x0, 2           | <0x00> ori x5, x0, 2           ;
<0x04> amoswap.w x10, x5, (x6) | <0x04> amoswap.w x10, x5, (x6) ;
<0x08> ori x7, x0, 1           | <0x08> ori x7, x0, 1           ;
<0x0C> amoswap.w x11, x7, (x8) | <0x0C> amoswap.w x11, x7, (x8) ;

QType.Exists (x==2/\y==2/\0:x10==1/\0:x11==0/\1:x10==1/\1:x11==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
0:x10=0; 0:x11=0; 1:x10=1; 1:x11=2; [x]=1; [y]=2;  => 1
0:x10=0; 0:x11=2; 1:x10=0; 1:x11=2; [x]=1; [y]=1;  => 1
0:x10=1; 0:x11=0; 1:x10=1; 1:x11=0; [x]=2; [y]=2;  => 1
0:x10=1; 0:x11=2; 1:x10=0; 1:x11=0; [x]=2; [y]=1;  => 1
Time 2+2Swap  0.0431s
#Executions: 24

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/2+2Swap.litmus
b_minus_a: {0:x10=1; 0:x11=0; 1:x10=1; 1:x11=0; [x]=2; [y]=2; }
1
strengthen,s,exe 0:x10=1; 0:x11=0; 1:x10=1; 1:x11=0; [x]=2; [y]=2;  [P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), []
this path is False
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is False
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is False
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is False
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
now check the paths P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
now check the paths P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')]
[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;rmw;AMO;po;AMO;rmw;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.rmw(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.rmw(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;rmw;AMO;po;AMO;po;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.rmw(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.po(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;rmw;AMO;po;AMO;po-loc;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.rmw(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.po_loc(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;rmw;AMO;po;AMO;fri;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.rmw(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.fri(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;po;AMO;po;AMO;rmw;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.po(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.rmw(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;po;AMO;po;AMO;po;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.po(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.po(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];po;[AMO];po;[AMO];po;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;po;AMO;po;AMO;po-loc;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.po(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.po_loc(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;po;AMO;po;AMO;fri;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.po(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.fri(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;po-loc;AMO;po;AMO;rmw;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.po_loc(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.rmw(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;po-loc;AMO;po;AMO;po;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.po_loc(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.po(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;po-loc;AMO;po;AMO;po-loc;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.po_loc(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.po_loc(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;po-loc;AMO;po;AMO;fri;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.po_loc(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.fri(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;fri;AMO;po;AMO;rmw;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.fri(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.rmw(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;fri;AMO;po;AMO;po;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.fri(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.po(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;fri;AMO;po;AMO;po-loc;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.fri(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.po_loc(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
from this path get ppo
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True
candidate_add_ppo AMO;fri;AMO;po;AMO;fri;AMO
all_rels
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e4) -> bool:
    return any([ra.AMO(e1) and ra.fri(e1,e2) and ra.AMO(e2) and ra.po(e2,e3) and ra.AMO(e3) and ra.fri(e3,e4) and ra.AMO(e4)  for e2 in ra.execution  for e3 in ra.execution ])
# 
add_rels
add rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
add_rels_final
add rel final P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
add rel final P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True True ['coe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 True False ['rfe']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['fre']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['fre']
check rel P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	 P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	 False True ['po']
check rel P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is True
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri')
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'rmw'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'po_loc'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')], [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
insert_path [(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, 'fri'), (P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po'), (P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:False
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, is write event:True
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:False
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(R), P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
ei,ej,relations, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	(W), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), ['po']
ei,ej,relations, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(R), P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')
this path is True
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri')
(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')
(P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')
get_all_paths_from_e1_to_e2 [[(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'rmw'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'po_loc'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'rmw')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po_loc')], [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];rmw;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];po-loc;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];rmw;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];po-loc;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
need_check_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO] target_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
insert_path [(P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, 'fri'), (P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'po'), (P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, 'fri')]
{<0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	: True, <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	: True, <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	: True, <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	: True}
filter_cycle [[P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	]]
ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
e1 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
e2 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
cycle str
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
cycle str after change
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [AMO];fri;[AMO];po;[AMO];fri;[AMO]
other_single_ppo rfe;[AMO];rmw;[AMO];po;[AMO];rmw;[AMO];rfe
path_single_ppo justify [AMO];po;[AMO]
other_single_ppo justify rfe;[AMO];po;[AMO];rfe
diy_cycle Rmw PodWR Rmw Rfe Rmw PodWR Rmw Rfe
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), []
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), []
this path is False
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
now check the paths P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
events sequence
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:True
P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:False
P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(R), []
ei,ej,relations, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	(W), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), ['po']
ei,ej,relations, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(R), P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	(W), ['rmw', 'po', 'po_loc', 'fri']
this path is False
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'rmw')
this path is False
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
this path is False
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po_loc')
this path is False
(P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'po')
(P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, 'fri')
now check the paths P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	 P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	
stengthen state, 0:x10=1; 0:x11=0; 1:x10=1; 1:x11=0; [x]=2; [y]=2;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7acdd69916a0> [P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P0: <0x0C>	amoswap.w x11_p0_1, x7_p0_1, (x8_p0_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x04>	amoswap.w x10_p1_1, x5_p1_1, (x6_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P1: <0x0C>	amoswap.w x11_p1_1, x7_p1_1, (x8_p1_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	, P0: <0x04>	amoswap.w x10_p0_1, x5_p0_1, (x6_p0_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7acdd69c88c0>, <src.tracesynth.synth.constraint.Constraint object at 0x7acdd744ae10>, <src.tracesynth.synth.constraint.Constraint object at 0x7acdd75c30b0>, <src.tracesynth.synth.constraint.Constraint object at 0x7acdd75f0050>] False
{0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
              P0               |              P1                ;
<0x00> ori x5, x0, 2           | <0x00> ori x5, x0, 2           ;
<0x04> amoswap.w x10, x5, (x6) | <0x04> amoswap.w x10, x5, (x6) ;
<0x08> ori x7, x0, 1           | <0x08> ori x7, x0, 1           ;
<0x0C> amoswap.w x11, x7, (x8) | <0x0C> amoswap.w x11, x7, (x8) ;

QType.Exists (x==2/\y==2/\0:x10==1/\0:x11==0/\1:x10==1/\1:x11==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
0:x10=0; 0:x11=0; 1:x10=1; 1:x11=2; [x]=1; [y]=2;  => 1
0:x10=0; 0:x11=2; 1:x10=0; 1:x11=2; [x]=1; [y]=1;  => 1
0:x10=1; 0:x11=0; 1:x10=1; 1:x11=0; [x]=2; [y]=2;  => 1
0:x10=1; 0:x11=2; 1:x10=0; 1:x11=0; [x]=2; [y]=1;  => 1
Time 2+2Swap  0.0520s
#Executions: 24

complete exe list
get new mm
uninit_func_list
ppo_candidate_func38 W;fence_r_rw;W 
def ppo_candidate_func38(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func39 W;fence_rw_w;R 
def ppo_candidate_func39(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func40 W;fence_r_rw;R 
def ppo_candidate_func40(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func41 R;fence_w_w;W 
def ppo_candidate_func41(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_w(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func42 R;fence_rw_w;R 
def ppo_candidate_func42(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func43 R;fence_w_r;R 
def ppo_candidate_func43(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.fence_w_r(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func44 W;fence_tso;R 
def ppo_candidate_func44(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_tso(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func45 W;fence_r_r;R 
def ppo_candidate_func45(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.fence_r_r(e1,e2) and ra.R(e2)
 PPOInitFlag.Verified
ppo_candidate_func46 XLr;po;W 
def ppo_candidate_func46(ra, e1: Event, e2: Event) -> bool:
    return ra.XLr(e1) and ra.po(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func47 R;po;XLr 
def ppo_candidate_func47(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.XLr(e2)
 PPOInitFlag.Verified
ppo_candidate_func48 W;po;AQ 
def ppo_candidate_func48(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po(e1,e2) and ra.AQ(e2)
 PPOInitFlag.Verified
ppo_candidate_func49 RL;po;W 
def ppo_candidate_func49(ra, e1: Event, e2: Event) -> bool:
    return ra.RL(e1) and ra.po(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
new_mm start
init failed: 1
start synth
any_ppo size: 4
candidate_ppos size: 0
candidate_ppos size: 16
candidate_ppos size: 0
candidate_ppos size: 0
candidate_ppo: [AMO];po;[AMO], relax is False
ID: 0 cur candidate_ppo: [AMO];po;[AMO],relax is False
[AMO];po;[AMO]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [AMO];po;[AMO] contain_flag False can_relax_flag False
add ppo [AMO];po;[AMO] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]', '[XLr];po;[W]', '[R];po;[XLr]', '[W];po;[AQ]', '[RL];po;[W]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.r.r);[R]', '[R];fencerel(Fence.r.w);[W]', '[R];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.w.w);[W]', '[W];fencerel(Fence.w.rw);[W]', '[W];fencerel(Fence.w.rw);[R]', '[R];fencerel(Fence.rw.r);[R]', '[W];fencerel(Fence.rw.r);[R]', '[R];fencerel(Fence.rw.w);[W]', '[W];fencerel(Fence.rw.w);[W]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[W]', '[R];fencerel(Fence.tso);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[W];fencerel(Fence.r.rw);[W]', '[W];fencerel(Fence.rw.w);[R]', '[W];fencerel(Fence.r.rw);[R]', '[R];fencerel(Fence.w.w);[W]', '[R];fencerel(Fence.rw.w);[R]', '[R];fencerel(Fence.w.r);[R]', '[W];fencerel(Fence.tso);[R]', '[W];fencerel(Fence.r.r);[R]', '[XLr];po;[W]', '[R];po;[XLr]', '[W];po;[AQ]', '[RL];po;[W]', '[AMO];po;[AMO]']
ppo [AMO];po;[AMO] index 0
[AMO];po;[AMO]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
[RL];po;[W]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
[RL];po;[W]
[AMO];po;[AMO]
ppo [AMO];po;[AMO]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/AMO_po_AMO_Rmw_PodWR_Rmw_Coe_Fence_rw_rwdWW_Rfe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'AMO_po_AMO_Rmw_PodWR_Rmw_Coe_Fence_rw_rwdWW_Rfe': [0:x6=0; 0:x11=1; , 0:x6=0; 0:x11=2; , 0:x6=1; 0:x11=1; ]}
now_herd_logs_ppo_remove {'AMO_po_AMO_Rmw_PodWR_Rmw_Coe_Fence_rw_rwdWW_Rfe': [0:x6=0; 0:x11=1; , 0:x6=0; 0:x11=2; , 0:x6=1; 0:x11=1; , 0:x6=1; 0:x11=2; ]}
AMO_po_AMO_Rmw_PodWR_Rmw_Coe_Fence_rw_rwdWW_Rfe
[0:x6=0; 0:x11=1; , 0:x6=0; 0:x11=2; , 0:x6=1; 0:x11=1; , 0:x6=1; 0:x11=2; ]
[0:x6=0; 0:x11=1; , 0:x6=0; 0:x11=2; , 0:x6=1; 0:x11=1; ]
['AMO_po_AMO_Rmw_PodWR_Rmw_Coe_Fence_rw_rwdWW_Rfe']
check ppo [AMO];po;[AMO]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/AMO_po_AMO_Rmw_PodWR_Rmw_Coe_Fence_rw_rwdWW_Rfe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate: AMO_po_AMO_Rmw_PodWR_Rmw_Coe_Fence_rw_rwdWW_Rfe
herd: [0:x6=0; 0:x11=1; , 0:x6=0; 0:x11=2; , 0:x6=1; 0:x11=1; ]
chip: [0:x6=0; 0:x11=1; , 0:x6=0; 0:x11=2; , 0:x6=1; 0:x11=1; ]
check ppo [AMO];po;[AMO] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [AMO];po;[AMO]
start check
check counter ppo
ppo:[AMO];po;[AMO] => counter_ppo:
-----------------
ID0:candidate_ppo [AMO];po;[AMO]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
[RL];po;[W]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
[RL];po;[W]
[AMO];po;[AMO]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/2+2Swap.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/AMO_po_AMO_Rmw_PodWR_Rmw_Coe_Fence_rw_rwdWW_Rfe.litmus
validate: 2+2Swap
herd: [0:x10=0; 0:x11=0; 1:x10=1; 1:x11=2; [x]=1; [y]=2; , 0:x10=0; 0:x11=2; 1:x10=0; 1:x11=2; [x]=1; [y]=1; , 0:x10=1; 0:x11=2; 1:x10=0; 1:x11=0; [x]=2; [y]=1; ]
chip: [0:x10=0; 0:x11=0; 1:x10=1; 1:x11=2; [x]=1; [y]=2; , 0:x10=0; 0:x11=2; 1:x10=0; 1:x11=2; [x]=1; [y]=1; , 0:x10=1; 0:x11=2; 1:x10=0; 1:x11=0; [x]=2; [y]=1; ]
validate: AMO_po_AMO_Rmw_PodWR_Rmw_Coe_Fence_rw_rwdWW_Rfe
herd: [0:x6=0; 0:x11=1; , 0:x6=0; 0:x11=2; , 0:x6=1; 0:x11=1; ]
chip: [0:x6=0; 0:x11=1; , 0:x6=0; 0:x11=2; , 0:x6=1; 0:x11=1; ]
candidate_ppo: [AMO];po;[AMO], cur_failed_litmus_tests: [], passed? True

[AMO];po;[AMO] pass test
==== candidate ppo ====
[AMO];po;[AMO] [AMO];po;[AMO] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/litmus/non-mixed-size/HAND/2+2Swap.litmus
iterate 1 final validate:
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array final start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.r.r);[R]
[R];fencerel(Fence.r.w);[W]
[R];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.w.w);[W]
[W];fencerel(Fence.w.rw);[W]
[W];fencerel(Fence.w.rw);[R]
[R];fencerel(Fence.rw.r);[R]
[W];fencerel(Fence.rw.r);[R]
[R];fencerel(Fence.rw.w);[W]
[W];fencerel(Fence.rw.w);[W]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[W]
[R];fencerel(Fence.tso);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];fencerel(Fence.rw.w);[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[R];po;[XLr]
[W];po;[AQ]
[RL];po;[W]
[AMO];po;[AMO]
check cat arrat final end
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
validate: 2+2W+fence.r.rw+fence.rw.rw
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
validate: R+fence.r.rw+fence.rw.rw
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
validate: R+fence.rw.rw+fence.rw.w
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
validate: R+fence.w.w+fence.rw.w
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
validate: R+fence.w.w+fence.r.rw
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
validate: R+fence.rw.rw+fence.r.rw
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
validate: S+fence.rw.rw+fence.w.w
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
validate: MP+fence.r.rw+fence.rw.rw
herd: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
chip: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
validate: MP+fence.rw.rw+fence.rw.w
herd: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
chip: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
validate: SB+fence.rw.w+fence.rw.rw
herd: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
validate: 2+2W+fence.r.rw+fence.rw.w
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
validate: MP+fence.rw.ws
herd: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
chip: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
validate: S+fence.r.rw+fence.rw.rw
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
validate: SB+fence.r.rws
herd: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
validate: LB+fence.r.rw+fence.w.w
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
validate: R+fence.rw.ws
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
validate: S+fence.r.rws
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
validate: S+fence.w.ws
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
validate: LB+fence.w.ws
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
validate: LB+fence.w.w+fence.rw.w
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
validate: R+fence.rw.w+fence.r.rw
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
validate: LB+fence.w.w+fence.rw.rw
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
validate: MP+fence.w.w+fence.rw.w
herd: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
chip: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
validate: SB+fence.r.rw+fence.rw.rw
herd: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
validate: S+fence.r.rw+fence.rw.w
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
validate: MP+fence.rw.rw+ctrlfence.w.r
herd: [1:x5=0; 1:x9=0; , 1:x5=0; 1:x9=1; , 1:x5=1; 1:x9=1; ]
chip: [1:x5=0; 1:x9=0; , 1:x5=0; 1:x9=1; , 1:x5=1; 1:x9=1; ]
validate: 2+2W+fence.r.rw+fence.w.w
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
validate: S+fence.rw.w+fence.w.w
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
validate: 2+2W+fence.r.rws
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
validate: SB+fence.rw.ws
herd: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
validate: MP+fence.r.rws
herd: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
chip: [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
validate: LB+fence.w.w+ctrl
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
validate: S+fence.r.rw+addr
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
validate: MP+fence.r.rw+addr
herd: [1:x5=0; 1:x8=0; , 1:x5=0; 1:x8=1; , 1:x5=1; 1:x8=1; ]
chip: [1:x5=0; 1:x8=0; , 1:x5=0; 1:x8=1; , 1:x5=1; 1:x8=1; ]
validate: LB+fence.w.w+addr
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
validate: S+fence.r.rw+data
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
validate: R+fence.w.w+fence.tso
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
validate: S+fence.r.rw+ctrl
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
validate: LB+fence.w.w+data
herd: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
chip: [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
validate: R+fence.tsos
herd: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
chip: [1:x7=0; [y]=1; , 1:x7=1; [y]=1; , 1:x7=1; [y]=2; ]
validate: SB+fence.tsos
herd: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
validate: SB+rfi-fence.r.rs
herd: [0:x7=1; 0:x8=0; 1:x7=1; 1:x8=1; , 0:x7=1; 0:x8=1; 1:x7=1; 1:x8=0; , 0:x7=1; 0:x8=1; 1:x7=1; 1:x8=1; ]
chip: [0:x7=1; 0:x8=0; 1:x7=1; 1:x8=1; , 0:x7=1; 0:x8=1; 1:x7=1; 1:x8=0; , 0:x7=1; 0:x8=1; 1:x7=1; 1:x8=1; ]
validate: ISA02
herd: [0:x10=1; 0:x11=0; 1:x12=1; 1:x13=1; , 0:x10=1; 0:x11=1; 1:x12=1; 1:x13=0; , 0:x10=1; 0:x11=1; 1:x12=1; 1:x13=1; ]
chip: [0:x10=1; 0:x11=0; 1:x12=1; 1:x13=1; , 0:x10=1; 0:x11=1; 1:x12=1; 1:x13=0; , 0:x10=1; 0:x11=1; 1:x12=1; 1:x13=1; ]
validate: SB+fence.rw.rw+ctrlfence.r.r
herd: [0:x7=0; 1:x7=0; 1:x8=0; 1:x12=1; [y]=1; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x12=0; [y]=0; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x12=1; [y]=0; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x12=0; [y]=1; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x12=1; [y]=1; ]
chip: [0:x7=0; 1:x7=0; 1:x8=0; 1:x12=1; [y]=1; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x12=0; [y]=0; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x12=1; [y]=0; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x12=0; [y]=1; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x12=1; [y]=1; ]
validate: LB+fence.rw.rw+poxp
herd: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
chip: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
validate: LB+fence.rw.rw+popx
herd: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
chip: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
validate: S+fence.rw.rw+popx
herd: [1:x5=0; 1:x9=0; 1:x10=0; [x]=2; , 1:x5=0; 1:x9=0; 1:x10=1; [x]=2; , 1:x5=0; 1:x9=2; 1:x10=0; [x]=1; , 1:x5=0; 1:x9=2; 1:x10=1; [x]=2; , 1:x5=1; 1:x9=2; 1:x10=0; [x]=1; , 1:x5=1; 1:x9=2; 1:x10=1; [x]=2; ]
chip: [1:x5=0; 1:x9=0; 1:x10=0; [x]=2; , 1:x5=0; 1:x9=0; 1:x10=1; [x]=2; , 1:x5=0; 1:x9=2; 1:x10=0; [x]=1; , 1:x5=0; 1:x9=2; 1:x10=1; [x]=2; , 1:x5=1; 1:x9=2; 1:x10=0; [x]=1; , 1:x5=1; 1:x9=2; 1:x10=1; [x]=2; ]
validate: S+fence.rw.rw+poxp
herd: [1:x6=0; 1:x7=0; [x]=1; [y]=1; , 1:x6=0; 1:x7=0; [x]=2; [y]=1; , 1:x6=0; 1:x7=1; [x]=1; [y]=1; , 1:x6=0; 1:x7=1; [x]=2; [y]=1; , 1:x6=1; 1:x7=0; [x]=1; [y]=1; , 1:x6=1; 1:x7=1; [x]=1; [y]=1; ]
chip: [1:x6=0; 1:x7=0; [x]=1; [y]=1; , 1:x6=0; 1:x7=0; [x]=2; [y]=1; , 1:x6=0; 1:x7=1; [x]=1; [y]=1; , 1:x6=0; 1:x7=1; [x]=2; [y]=1; , 1:x6=1; 1:x7=0; [x]=1; [y]=1; , 1:x6=1; 1:x7=1; [x]=1; [y]=1; ]
validate: SB+fence.tso+fence.tsoxp
herd: [0:x7=0; 1:x7=0; 1:x8=0; 1:x9=1; [y]=1; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x9=0; [y]=0; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x9=1; [y]=0; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x9=0; [y]=1; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x9=1; [y]=1; ]
chip: [0:x7=0; 1:x7=0; 1:x8=0; 1:x9=1; [y]=1; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x9=0; [y]=0; , 0:x7=0; 1:x7=0; 1:x8=1; 1:x9=1; [y]=0; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x9=0; [y]=1; , 0:x7=1; 1:x7=0; 1:x8=0; 1:x9=1; [y]=1; ]
validate: R+fence.tsoxp+fence.tso
herd: [0:x7=0; 0:x8=0; 1:x7=0; [x]=1; [y]=1; , 0:x7=0; 0:x8=0; 1:x7=1; [x]=1; [y]=1; , 0:x7=0; 0:x8=0; 1:x7=1; [x]=1; [y]=2; , 0:x7=0; 0:x8=1; 1:x7=0; [x]=0; [y]=1; , 0:x7=0; 0:x8=1; 1:x7=0; [x]=0; [y]=2; ]
chip: [0:x7=0; 0:x8=0; 1:x7=0; [x]=1; [y]=1; , 0:x7=0; 0:x8=0; 1:x7=1; [x]=1; [y]=1; , 0:x7=0; 0:x8=0; 1:x7=1; [x]=1; [y]=2; , 0:x7=0; 0:x8=1; 1:x7=0; [x]=0; [y]=1; , 0:x7=0; 0:x8=1; 1:x7=0; [x]=0; [y]=2; ]
validate: LB+ctrl+popx
herd: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
chip: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
validate: SB+fence.tso+fence.tsopx
herd: [0:x7=0; 1:x8=1; 1:x9=0; [x]=1; , 0:x7=0; 1:x8=1; 1:x9=1; [x]=1; , 0:x7=1; 1:x8=0; 1:x9=0; [x]=1; , 0:x7=1; 1:x8=0; 1:x9=1; [x]=1; , 0:x7=1; 1:x8=1; 1:x9=0; [x]=1; , 0:x7=1; 1:x8=1; 1:x9=1; [x]=1; ]
chip: [0:x7=0; 1:x8=1; 1:x9=0; [x]=1; , 0:x7=0; 1:x8=1; 1:x9=1; [x]=1; , 0:x7=1; 1:x8=0; 1:x9=0; [x]=1; , 0:x7=1; 1:x8=0; 1:x9=1; [x]=1; , 0:x7=1; 1:x8=1; 1:x9=0; [x]=1; , 0:x7=1; 1:x8=1; 1:x9=1; [x]=1; ]
validate: 2+2W+fence.tso+fence.tsopx
herd: [1:x9=0; 1:x10=0; [x]=2; [y]=1; , 1:x9=0; 1:x10=1; [x]=2; [y]=1; , 1:x9=2; 1:x10=0; [x]=1; [y]=1; , 1:x9=2; 1:x10=0; [x]=1; [y]=2; , 1:x9=2; 1:x10=1; [x]=2; [y]=1; , 1:x9=2; 1:x10=1; [x]=2; [y]=2; ]
chip: [1:x9=0; 1:x10=0; [x]=2; [y]=1; , 1:x9=0; 1:x10=1; [x]=2; [y]=1; , 1:x9=2; 1:x10=0; [x]=1; [y]=1; , 1:x9=2; 1:x10=0; [x]=1; [y]=2; , 1:x9=2; 1:x10=1; [x]=2; [y]=1; , 1:x9=2; 1:x10=1; [x]=2; [y]=2; ]
validate: R+fence.tso+fence.tsopx
herd: [1:x8=0; 1:x9=0; [x]=1; [y]=1; , 1:x8=0; 1:x9=1; [x]=1; [y]=1; , 1:x8=1; 1:x9=0; [x]=1; [y]=1; , 1:x8=1; 1:x9=0; [x]=1; [y]=2; , 1:x8=1; 1:x9=1; [x]=1; [y]=1; , 1:x8=1; 1:x9=1; [x]=1; [y]=2; ]
chip: [1:x8=0; 1:x9=0; [x]=1; [y]=1; , 1:x8=0; 1:x9=1; [x]=1; [y]=1; , 1:x8=1; 1:x9=0; [x]=1; [y]=1; , 1:x8=1; 1:x9=0; [x]=1; [y]=2; , 1:x8=1; 1:x9=1; [x]=1; [y]=1; , 1:x8=1; 1:x9=1; [x]=1; [y]=2; ]
validate: R+fence.tsopx+fence.tso
herd: [0:x8=0; 0:x9=0; 1:x7=1; [y]=2; , 0:x8=0; 0:x9=1; 1:x7=1; [y]=2; , 0:x8=2; 0:x9=0; 1:x7=0; [y]=1; , 0:x8=2; 0:x9=0; 1:x7=1; [y]=1; , 0:x8=2; 0:x9=1; 1:x7=0; [y]=2; , 0:x8=2; 0:x9=1; 1:x7=1; [y]=2; ]
chip: [0:x8=0; 0:x9=0; 1:x7=1; [y]=2; , 0:x8=0; 0:x9=1; 1:x7=1; [y]=2; , 0:x8=2; 0:x9=0; 1:x7=0; [y]=1; , 0:x8=2; 0:x9=0; 1:x7=1; [y]=1; , 0:x8=2; 0:x9=1; 1:x7=0; [y]=2; , 0:x8=2; 0:x9=1; 1:x7=1; [y]=2; ]
validate: LB+addr+poxp
herd: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
chip: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
validate: LB+data+poxp
herd: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
chip: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
validate: LB+addr+popx
herd: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
chip: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
validate: LB+data+popx
herd: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
chip: [0:x5=0; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=0; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=0; [x]=1; , 0:x5=0; 1:x5=1; 1:x9=0; 1:x10=1; [x]=0; , 0:x5=1; 1:x5=0; 1:x9=0; 1:x10=0; [x]=1; ]
validate: LB+ctrl+poxp
herd: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
chip: [0:x5=0; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=0; 1:x7=1; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=0; [y]=1; , 0:x5=0; 1:x6=1; 1:x7=1; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=0; [y]=1; , 0:x5=1; 1:x6=0; 1:x7=1; [y]=1; ]
validate: ISA-MP-DEP-SUCCESS-SWAP-SIMPLE
herd: [1:x3=0; 1:x4=0; 1:x5=0; , 1:x3=0; 1:x4=0; 1:x5=2; , 1:x3=0; 1:x4=1; 1:x5=0; , 1:x3=0; 1:x4=1; 1:x5=2; , 1:x3=1; 1:x4=0; 1:x5=2; , 1:x3=1; 1:x4=1; 1:x5=2; ]
chip: [1:x3=0; 1:x4=0; 1:x5=0; , 1:x3=0; 1:x4=0; 1:x5=2; , 1:x3=0; 1:x4=1; 1:x5=0; , 1:x3=0; 1:x4=1; 1:x5=2; , 1:x3=1; 1:x4=0; 1:x5=2; , 1:x3=1; 1:x4=1; 1:x5=2; ]
validate: LB+data+datapx-dataxp
herd: [0:x5=0; 1:x5=0; 1:x10=0; [z]=1; , 0:x5=0; 1:x5=0; 1:x10=1; [z]=0; , 0:x5=0; 1:x5=1; 1:x10=0; [z]=1; , 0:x5=0; 1:x5=1; 1:x10=1; [z]=0; , 0:x5=1; 1:x5=0; 1:x10=0; [z]=1; , 0:x5=1; 1:x5=0; 1:x10=1; [z]=0; ]
chip: [0:x5=0; 1:x5=0; 1:x10=0; [z]=1; , 0:x5=0; 1:x5=0; 1:x10=1; [z]=0; , 0:x5=0; 1:x5=1; 1:x10=0; [z]=1; , 0:x5=0; 1:x5=1; 1:x10=1; [z]=0; , 0:x5=1; 1:x5=0; 1:x10=0; [z]=1; , 0:x5=1; 1:x5=0; 1:x10=1; [z]=0; ]
validate: ISA-MP-DEP-SUCCESS-SWAP
herd: [1:x2=0; 1:x4=0; 1:x5=0; , 1:x2=0; 1:x4=0; 1:x5=2; , 1:x2=0; 1:x4=1; 1:x5=0; , 1:x2=0; 1:x4=1; 1:x5=2; , 1:x2=1; 1:x4=0; 1:x5=2; , 1:x2=1; 1:x4=1; 1:x5=2; ]
chip: [1:x2=0; 1:x4=0; 1:x5=0; , 1:x2=0; 1:x4=0; 1:x5=2; , 1:x2=0; 1:x4=1; 1:x5=0; , 1:x2=0; 1:x4=1; 1:x5=2; , 1:x2=1; 1:x4=0; 1:x5=2; , 1:x2=1; 1:x4=1; 1:x5=2; ]
validate: SB+popaqs+NEW
herd: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
chip: [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]
validate: 2+2W+porlps+NEW
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
validate: S+porlp+poprl+NEW
herd: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
chip: [1:x5=0; [x]=1; , 1:x5=0; [x]=2; , 1:x5=1; [x]=1; ]
validate: 2+2W+poprl+porlp+NEW
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
validate: 2+2W+porlp+porlrl+NEW
herd: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
chip: [[x]=1; [y]=1; , [x]=1; [y]=2; , [x]=2; [y]=1; ]
validate: 2+2Swap
herd: [0:x10=0; 0:x11=0; 1:x10=1; 1:x11=2; [x]=1; [y]=2; , 0:x10=0; 0:x11=2; 1:x10=0; 1:x11=2; [x]=1; [y]=1; , 0:x10=1; 0:x11=2; 1:x10=0; 1:x11=0; [x]=2; [y]=1; ]
chip: [0:x10=0; 0:x11=0; 1:x10=1; 1:x11=2; [x]=1; [y]=2; , 0:x10=0; 0:x11=2; 1:x10=0; 1:x11=2; [x]=1; [y]=1; , 0:x10=1; 0:x11=2; 1:x10=0; 1:x11=0; [x]=2; [y]=1; ]
final validate True
failed_litmus_tests []
[('ppo_candidate_func0', 'W;fence_r_rw;W', '\ndef ppo_candidate_func0(ra, e1: Event, e2: Event) -> bool:\n    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.W(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func1', 'W;fence_rw_w;R', '\ndef ppo_candidate_func1(ra, e1: Event, e2: Event) -> bool:\n    return ra.W(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func2', 'W;fence_r_rw;R', '\ndef ppo_candidate_func2(ra, e1: Event, e2: Event) -> bool:\n    return ra.W(e1) and ra.fence_r_rw(e1,e2) and ra.R(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func3', 'R;fence_w_w;W', '\ndef ppo_candidate_func3(ra, e1: Event, e2: Event) -> bool:\n    return ra.R(e1) and ra.fence_w_w(e1,e2) and ra.W(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func4', 'R;fence_rw_w;R', '\ndef ppo_candidate_func4(ra, e1: Event, e2: Event) -> bool:\n    return ra.R(e1) and ra.fence_rw_w(e1,e2) and ra.R(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func5', 'R;fence_w_r;R', '\ndef ppo_candidate_func5(ra, e1: Event, e2: Event) -> bool:\n    return ra.R(e1) and ra.fence_w_r(e1,e2) and ra.R(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func6', 'W;fence_tso;R', '\ndef ppo_candidate_func6(ra, e1: Event, e2: Event) -> bool:\n    return ra.W(e1) and ra.fence_tso(e1,e2) and ra.R(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func7', 'W;fence_r_r;R', '\ndef ppo_candidate_func7(ra, e1: Event, e2: Event) -> bool:\n    return ra.W(e1) and ra.fence_r_r(e1,e2) and ra.R(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func8', 'XLr;po;W', '\ndef ppo_candidate_func8(ra, e1: Event, e2: Event) -> bool:\n    return ra.XLr(e1) and ra.po(e1,e2) and ra.W(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func9', 'R;po;XLr', '\ndef ppo_candidate_func9(ra, e1: Event, e2: Event) -> bool:\n    return ra.R(e1) and ra.po(e1,e2) and ra.XLr(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func10', 'W;po;AQ', '\ndef ppo_candidate_func10(ra, e1: Event, e2: Event) -> bool:\n    return ra.W(e1) and ra.po(e1,e2) and ra.AQ(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func11', 'RL;po;W', '\ndef ppo_candidate_func11(ra, e1: Event, e2: Event) -> bool:\n    return ra.RL(e1) and ra.po(e1,e2) and ra.W(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func12', 'AMO;po;AMO', '\ndef ppo_candidate_func12(ra, e1: Event, e2: Event) -> bool:\n    return ra.AMO(e1) and ra.po(e1,e2) and ra.AMO(e2)\n', <PPOInitFlag.Verified: 3>)]
ppo_list
[W];fencerel(Fence.r.rw);[W]
[W];fencerel(Fence.rw.w);[R]
[W];fencerel(Fence.r.rw);[R]
[R];fencerel(Fence.w.w);[W]
[R];po;[R]
[R];fencerel(Fence.rw.w);[R]
[R];ctrl;[R]
[R];fencerel(Fence.w.r);[R]
[W];fencerel(Fence.tso);[R]
[W];rfi;[R]
[W];po-loc;[R]
[W];po;[R];po;[R]
[W];rfi;[R];po;[R]
[W];po-loc;[R];po;[R]
[W];fencerel(Fence.r.r);[R]
[XLr];po;[W]
[XSc];po;[W]
[R];po;[XLr]
[W];po;[AQ]
[RL];po;[W]
[AMO];po;[AMO]
