now is the 1 iteration
synth ppo by litmus test 0
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-1': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=0; , 1:x5=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-1': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
x86-1
[1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
[1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=0; , 1:x5=1; 1:x7=1; ]
['x86-1']
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-1.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate litmus by tgt_mm
{0:x5=1; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> sw x5, 0(x7) | <0x04> lw x7, 0(x8) ;

QType.Exists (1:x5==1/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 3
1:x5=0; 1:x7=0;  => 1
1:x5=0; 1:x7=1;  => 1
1:x5=1; 1:x7=1;  => 1
Time x86-1  0.0208s
#Executions: 18

validate litmus by cur_mm
{0:x5=1; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> sw x5, 0(x7) | <0x04> lw x7, 0(x8) ;

QType.Exists (1:x5==1/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x5=0; 1:x7=0;  => 1
1:x5=0; 1:x7=1;  => 1
1:x5=1; 1:x7=0;  => 1
1:x5=1; 1:x7=1;  => 1
Time x86-1  0.0162s
#Executions: 18

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-1.litmus
strengthen,s,exe 1:x5=1; 1:x7=0;  [P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
now check the paths P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, 'po')]
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 False False
candidate_add_ppo R;po;R
all_rels
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, 'po')]]
need_check_ppo [R];po;[R] target_ppo [R];po;[R]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po']
check all rels
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po']
stengthen state, 1:x5=1; 1:x7=0;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7f0dc0537fe0> [P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7f0dc079c860>] False
{0:x5=1; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> sw x5, 0(x7) | <0x04> lw x7, 0(x8) ;

QType.Exists (1:x5==1/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x5=0; 1:x7=0;  => 1
1:x5=0; 1:x7=1;  => 1
1:x5=1; 1:x7=0;  => 1
1:x5=1; 1:x7=1;  => 1
Time x86-1  0.0172s
#Executions: 18

complete exe list
get new mm
uninit_func_list
init failed: 1
start synth
any_ppo size: 1
candidate_ppos size: 0
===== run all new tests on the validated candidate ppos =====
check these ppo
start check
check counter ppo
==== candidate ppo ====
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-1.litmus
synth ppo by litmus test 1
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-2': [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; , 0:x5=1; 1:x5=1; ]}
now_herd_logs_ppo_remove {'x86-2': [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]}
x86-2
[0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]
[0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; , 0:x5=1; 1:x5=1; ]
['x86-2']
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-2.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate litmus by tgt_mm
{0:x7=1; 1:x7=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> lw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> sw x7, 0(x8) | <0x04> sw x7, 0(x8) ;

QType.Exists (0:x5==1/\1:x5==1)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 3
0:x5=0; 1:x5=0;  => 1
0:x5=0; 1:x5=1;  => 1
0:x5=1; 1:x5=0;  => 1
Time x86-2  0.0161s
#Executions: 18

validate litmus by cur_mm
{0:x7=1; 1:x7=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> lw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> sw x7, 0(x8) | <0x04> sw x7, 0(x8) ;

QType.Exists (0:x5==1/\1:x5==1)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
0:x5=0; 1:x5=0;  => 1
0:x5=0; 1:x5=1;  => 1
0:x5=1; 1:x5=0;  => 1
0:x5=1; 1:x5=1;  => 1
Time x86-2  0.0166s
#Executions: 18

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-2.litmus
strengthen,s,exe 0:x5=1; 1:x5=1;  [P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
events sequence
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	(R), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
now check the paths P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
[(P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]
from this path get ppo
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True
candidate_add_ppo R;po;W
all_rels
rel --: None P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
rel --: None P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.W(e2)

add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
add rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]]
need_check_ppo [R];po;[W] target_ppo [R];po;[W]
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	(R), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]]
need_check_ppo [R];po;[W] target_ppo [R];po;[W]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
add rel final P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
check all rels
check rel --: None P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 True True ['coe']
check rel --: None P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 True True ['coe']
check rel P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 True False ['rfe']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	 False True ['po']
check rel P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	 False True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, is write event:True
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	(W), ['po']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]]
need_check_ppo [R];po;[W] target_ppo [R];po;[W]
insert_path [(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, 'po')]
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, is write event:False
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	(R), P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]]
need_check_ppo [R];po;[W] target_ppo [R];po;[W]
insert_path [(P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	, P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, 'po')]
{}
filter_cycle [[P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	]]
ppo [R];po;[W]
e1 P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
e2 P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
cycle str
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
cycle str after change
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	
P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	
start_relation rfe
end relation rfe
path_single_ppo [R];po;[W]
other_single_ppo rfe;[R];po;[W];rfe
path_single_ppo justify [R];po;[W]
other_single_ppo justify rfe;[R];po;[W];rfe
diy_cycle PodRW Rfe PodRW Rfe
stengthen state, 0:x5=1; 1:x5=1;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7f0dc0594c80> [P0: <0x04>	sw x7_p0_0, 0(x8_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	sw x7_p1_0, 0(x8_p1_0)	, P0: <0x00>	lw x5_p0_1, 0(x6_p0_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7f0dc0596060>] False
{0:x7=1; 1:x7=1; 0:x6=x; 0:x8=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> lw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> sw x7, 0(x8) | <0x04> sw x7, 0(x8) ;

QType.Exists (0:x5==1/\1:x5==1)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
0:x5=0; 1:x5=0;  => 1
0:x5=0; 1:x5=1;  => 1
0:x5=1; 1:x5=0;  => 1
0:x5=1; 1:x5=1;  => 1
Time x86-2  0.0189s
#Executions: 18

complete exe list
get new mm
uninit_func_list
init failed: 1
start synth
any_ppo size: 1
candidate_ppos size: 1
candidate_ppo: [R];po;[W], relax is False
ID: 0 cur candidate_ppo: [R];po;[W],relax is False
[R];po;[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [R];po;[W] contain_flag False can_relax_flag False
add ppo [R];po;[W] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[R];po;[W]']
ppo [R];po;[W] index 0
diyone7 cmd: eval $(opam env); diyone7 -arch RISC-V -obs local -name /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_W_PodRW_Rfe_PodRW_Rfe.litmus PodRW Rfe PodRW Rfe
[R];po;[W]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
ppo [R];po;[W]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'R_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]}
now_herd_logs_ppo_remove {'R_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]}
R_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; , 0:x5=1; 0:x9=2; ]
[0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]
['R_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe']
check ppo [R];po;[W]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'R_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]}
now_herd_logs_ppo_remove {'R_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]}
[]
check ppo [R];po;[W] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [R];po;[W]
start check
check counter ppo
ppo:[R];po;[W] => counter_ppo:
-----------------
ID0:candidate_ppo [R];po;[W]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-2.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-2': [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]}
now_herd_logs_ppo_remove {'x86-2': [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'R_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]}
now_herd_logs_ppo_remove {'R_po_W_PodRW_Coe_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x9=1; , 0:x5=0; 0:x9=2; , 0:x5=1; 0:x9=1; ]}
[]
candidate_ppo: [R];po;[W], cur_failed_litmus_tests: [], passed? True

[R];po;[W] pass test
==== candidate ppo ====
[R];po;[W] [R];po;[W] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-2.litmus
synth ppo by litmus test 2
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-10': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=0; , 1:x5=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-10': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
x86-10
[1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
[1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=0; , 1:x5=1; 1:x7=1; ]
['x86-10']
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-10.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate litmus by tgt_mm
{0:x5=1; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
              P0              |         P1          ;
<0x00> amoswap.w x0, x5, (x6) | <0x00> lw x5, 0(x6) ;
<0x04> sw x5, 0(x7)           | <0x04> lw x7, 0(x8) ;

QType.Exists (1:x5==1/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 3
1:x5=0; 1:x7=0;  => 1
1:x5=0; 1:x7=1;  => 1
1:x5=1; 1:x7=1;  => 1
Time x86-10  0.0228s
#Executions: 18

validate litmus by cur_mm
{0:x5=1; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
              P0              |         P1          ;
<0x00> amoswap.w x0, x5, (x6) | <0x00> lw x5, 0(x6) ;
<0x04> sw x5, 0(x7)           | <0x04> lw x7, 0(x8) ;

QType.Exists (1:x5==1/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x5=0; 1:x7=0;  => 1
1:x5=0; 1:x7=1;  => 1
1:x5=1; 1:x7=0;  => 1
1:x5=1; 1:x7=1;  => 1
Time x86-10  0.0227s
#Executions: 18

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-10.litmus
strengthen,s,exe 1:x5=1; 1:x7=0;  [P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
now check the paths P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	
[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, 'po')]
from this path get ppo
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 False False
candidate_add_ppo R;po;R
all_rels
rel --: None P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
rel --: None P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel --: None P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 True False ['rfe']
rel P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['fre']
rel P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
rel P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 False True ['po']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.R(e2)

add_rels
add rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, is write event:False
P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, is write event:False
ei,ej,relations, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	(R), P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	(R), ['po']
this path is True
(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, 'po')]]
need_check_ppo [R];po;[R] target_ppo [R];po;[R]
add_rels_final
add rel final P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po']
check all rels
check rel --: None P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel --: None P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 True False ['rfe']
check rel P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['fre']
check rel P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 False True ['rmw', 'po', 'po_loc', 'fri']
check rel P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	 P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 False True ['po']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po']
stengthen state, 1:x5=1; 1:x7=0;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7f0dc05e1430> [P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x00>	amoswap.w x0_p0_0, x5_p0_0, (x6_p0_0)	, P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7f0dc056a1e0>] False
{0:x5=1; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
              P0              |         P1          ;
<0x00> amoswap.w x0, x5, (x6) | <0x00> lw x5, 0(x6) ;
<0x04> sw x5, 0(x7)           | <0x04> lw x7, 0(x8) ;

QType.Exists (1:x5==1/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x5=0; 1:x7=0;  => 1
1:x5=0; 1:x7=1;  => 1
1:x5=1; 1:x7=0;  => 1
1:x5=1; 1:x7=1;  => 1
Time x86-10  0.0258s
#Executions: 18

complete exe list
get new mm
uninit_func_list
ppo_candidate_func23 R;po;W 
def ppo_candidate_func23(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
init failed: 1
start synth
any_ppo size: 1
candidate_ppos size: 0
===== run all new tests on the validated candidate ppos =====
check these ppo
start check
check counter ppo
==== candidate ppo ====
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-10.litmus
synth ppo by litmus test 3
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-6': [1:x5=0; 2:x5=0; 2:x7=0; , 1:x5=0; 2:x5=0; 2:x7=1; , 1:x5=0; 2:x5=1; 2:x7=0; , 1:x5=0; 2:x5=1; 2:x7=1; , 1:x5=1; 2:x5=0; 2:x7=0; , 1:x5=1; 2:x5=0; 2:x7=1; , 1:x5=1; 2:x5=1; 2:x7=0; , 1:x5=1; 2:x5=1; 2:x7=1; ]}
now_herd_logs_ppo_remove {'x86-6': [1:x5=0; 2:x5=0; 2:x7=0; , 1:x5=0; 2:x5=0; 2:x7=1; , 1:x5=0; 2:x5=1; 2:x7=0; , 1:x5=0; 2:x5=1; 2:x7=1; , 1:x5=1; 2:x5=0; 2:x7=0; , 1:x5=1; 2:x5=0; 2:x7=1; , 1:x5=1; 2:x5=1; 2:x7=1; ]}
x86-6
[1:x5=0; 2:x5=0; 2:x7=0; , 1:x5=0; 2:x5=0; 2:x7=1; , 1:x5=0; 2:x5=1; 2:x7=0; , 1:x5=0; 2:x5=1; 2:x7=1; , 1:x5=1; 2:x5=0; 2:x7=0; , 1:x5=1; 2:x5=0; 2:x7=1; , 1:x5=1; 2:x5=1; 2:x7=1; ]
[1:x5=0; 2:x5=0; 2:x7=0; , 1:x5=0; 2:x5=0; 2:x7=1; , 1:x5=0; 2:x5=1; 2:x7=0; , 1:x5=0; 2:x5=1; 2:x7=1; , 1:x5=1; 2:x5=0; 2:x7=0; , 1:x5=1; 2:x5=0; 2:x7=1; , 1:x5=1; 2:x5=1; 2:x7=0; , 1:x5=1; 2:x5=1; 2:x7=1; ]
['x86-6']
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-6.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
validate litmus by tgt_mm
{0:x6=x; 1:x6=x; 1:x8=y; 2:x6=y; 2:x8=x}
         P0          |         P1          |         P2          ;
<0x00> ori x5, x0, 1 | <0x00> lw x5, 0(x6)  | <0x00> lw x5, 0(x6) ;
<0x04> sw x5, 0(x6)  | <0x04> ori x7, x0, 1 | <0x04> lw x7, 0(x8) ;
                     | <0x08> sw x7, 0(x8)  |                     ;

QType.Exists (1:x5==1/\2:x5==1/\2:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 7
1:x5=0; 2:x5=0; 2:x7=0;  => 1
1:x5=0; 2:x5=0; 2:x7=1;  => 1
1:x5=0; 2:x5=1; 2:x7=0;  => 1
1:x5=0; 2:x5=1; 2:x7=1;  => 1
1:x5=1; 2:x5=0; 2:x7=0;  => 1
1:x5=1; 2:x5=0; 2:x7=1;  => 1
1:x5=1; 2:x5=1; 2:x7=1;  => 1
Time x86-6  0.0587s
#Executions: 54

validate litmus by cur_mm
{0:x6=x; 1:x6=x; 1:x8=y; 2:x6=y; 2:x8=x}
         P0          |         P1          |         P2          ;
<0x00> ori x5, x0, 1 | <0x00> lw x5, 0(x6)  | <0x00> lw x5, 0(x6) ;
<0x04> sw x5, 0(x6)  | <0x04> ori x7, x0, 1 | <0x04> lw x7, 0(x8) ;
                     | <0x08> sw x7, 0(x8)  |                     ;

QType.Exists (1:x5==1/\2:x5==1/\2:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 8
1:x5=0; 2:x5=0; 2:x7=0;  => 1
1:x5=0; 2:x5=0; 2:x7=1;  => 1
1:x5=0; 2:x5=1; 2:x7=0;  => 1
1:x5=0; 2:x5=1; 2:x7=1;  => 1
1:x5=1; 2:x5=0; 2:x7=0;  => 1
1:x5=1; 2:x5=0; 2:x7=1;  => 1
1:x5=1; 2:x5=1; 2:x7=0;  => 1
1:x5=1; 2:x5=1; 2:x7=1;  => 1
Time x86-6  0.0602s
#Executions: 54

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-6.litmus
strengthen,s,exe 1:x5=1; 2:x5=1; 2:x7=0;  [P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_1, 0(x8_p1_0)	, P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	 P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	
events sequence
P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	, is write event:False
P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, is write event:False
ei,ej,relations, P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	(R), P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	(R), ['po']
this path is True
(P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	, P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, 'po')
now check the paths P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	 P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	
[(P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	, P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, 'po')]
from this path get ppo
P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	 P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	 False False
candidate_add_ppo R;po;R
all_rels
rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
rel --: None P1: <0x08>	sw x7_p1_1, 0(x8_p1_0)	 True True ['coe']
rel --: None P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	 True False ['rfe']
rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x08>	sw x7_p1_1, 0(x8_p1_0)	 P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	 True False ['rfe']
rel P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_1, 0(x8_p1_0)	 False True ['po']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.R(e2)

add_rels
add rel P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	 P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	 False False ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	, is write event:False
P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, is write event:False
ei,ej,relations, P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	(R), P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	(R), ['po']
this path is True
(P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	, P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	, P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, 'po')]]
need_check_ppo [R];po;[R] target_ppo [R];po;[R]
add_rels_final
add rel final P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	 P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	 False False ['po']
check all rels
check rel --: None P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 True True ['coe']
check rel --: None P1: <0x08>	sw x7_p1_1, 0(x8_p1_0)	 True True ['coe']
check rel --: None P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	 True False ['rfe']
check rel P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x08>	sw x7_p1_1, 0(x8_p1_0)	 P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	 True False ['rfe']
check rel P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	 P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	 False True ['fre']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x08>	sw x7_p1_1, 0(x8_p1_0)	 False True ['po']
check rel P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	 P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	 False False ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	, is write event:False
P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, is write event:False
ei,ej,relations, P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	(R), P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	(R), ['po']
this path is True
(P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	, P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	, P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, 'po')]]
need_check_ppo [R];po;[R] target_ppo [R];po;[R]
insert_path [(P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	, P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, 'po')]
{}
filter_cycle [[P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_1, 0(x8_p1_0)	, P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	, P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	]]
ppo [R];po;[R]
e1 P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	
e2 P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	
cycle str
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	sw x7_p1_1, 0(x8_p1_0)	
P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	
P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
cycle str after change
P1: <0x08>	sw x7_p1_1, 0(x8_p1_0)	
P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	
P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	
P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	
P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x08>	sw x7_p1_1, 0(x8_p1_0)	
start_relation fre
end relation rfe
path_single_ppo [R];po;[R]
other_single_ppo fre;[W];rfe;[R];po;[W];rfe
path_single_ppo justify [R];po;[R]
other_single_ppo justify fre;[W];rfe;[R];po;[W];rfe
diy_cycle PodRR Fre Rfe PodRW Rfe
stengthen state, 1:x5=1; 2:x5=1; 2:x7=0;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7f0dc05e1340> [P2: <0x04>	lw x7_p2_1, 0(x8_p2_0)	, P0: <0x04>	sw x5_p0_1, 0(x6_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x08>	sw x7_p1_1, 0(x8_p1_0)	, P2: <0x00>	lw x5_p2_1, 0(x6_p2_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7f0dc0597f50>] False
{0:x6=x; 1:x6=x; 1:x8=y; 2:x6=y; 2:x8=x}
         P0          |         P1          |         P2          ;
<0x00> ori x5, x0, 1 | <0x00> lw x5, 0(x6)  | <0x00> lw x5, 0(x6) ;
<0x04> sw x5, 0(x6)  | <0x04> ori x7, x0, 1 | <0x04> lw x7, 0(x8) ;
                     | <0x08> sw x7, 0(x8)  |                     ;

QType.Exists (1:x5==1/\2:x5==1/\2:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 8
1:x5=0; 2:x5=0; 2:x7=0;  => 1
1:x5=0; 2:x5=0; 2:x7=1;  => 1
1:x5=0; 2:x5=1; 2:x7=0;  => 1
1:x5=0; 2:x5=1; 2:x7=1;  => 1
1:x5=1; 2:x5=0; 2:x7=0;  => 1
1:x5=1; 2:x5=0; 2:x7=1;  => 1
1:x5=1; 2:x5=1; 2:x7=0;  => 1
1:x5=1; 2:x5=1; 2:x7=1;  => 1
Time x86-6  0.0648s
#Executions: 54

complete exe list
get new mm
uninit_func_list
ppo_candidate_func23 R;po;W 
def ppo_candidate_func23(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
init failed: 1
start synth
any_ppo size: 1
candidate_ppos size: 1
candidate_ppo: [R];po;[R], relax is False
ID: 0 cur candidate_ppo: [R];po;[R],relax is False
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[]
ppo [R];po;[R] contain_flag False can_relax_flag False
add ppo [R];po;[R] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[R];po;[W]']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[R];po;[W]', '([R];po\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])']
ppo [R];po;[R] index 0
diyone7 cmd: eval $(opam env); diyone7 -arch RISC-V -obs local -name /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_R_PodRR_Fre_Rfe_PodRW_Rfe.litmus PodRR Fre Rfe PodRW Rfe
[R];po;[R]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
ppo [R];po;[R]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]}
R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=0; , 0:x5=1; 0:x7=1; ]
[0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]
['R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe']
check ppo [R];po;[R]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
[]
check ppo [R];po;[R] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [R];po;[R]
start check
check counter ppo
ppo:[R];po;[R] => counter_ppo:
-----------------
ID0:candidate_ppo [R];po;[R]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-6.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-6': [1:x5=0; 2:x5=0; 2:x7=0; , 1:x5=0; 2:x5=0; 2:x7=1; , 1:x5=0; 2:x5=1; 2:x7=0; , 1:x5=0; 2:x5=1; 2:x7=1; , 1:x5=1; 2:x5=0; 2:x7=0; , 1:x5=1; 2:x5=0; 2:x7=1; , 1:x5=1; 2:x5=1; 2:x7=1; ]}
now_herd_logs_ppo_remove {'x86-6': [1:x5=0; 2:x5=0; 2:x7=0; , 1:x5=0; 2:x5=0; 2:x7=1; , 1:x5=0; 2:x5=1; 2:x7=0; , 1:x5=0; 2:x5=1; 2:x7=1; , 1:x5=1; 2:x5=0; 2:x7=0; , 1:x5=1; 2:x5=0; 2:x7=1; , 1:x5=1; 2:x5=1; 2:x7=1; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
now_herd_logs_ppo_remove {'R_po_R_PodRR_Fre_Fence_rw_rwdWW_Rfe': [0:x5=0; 0:x7=0; , 0:x5=0; 0:x7=1; , 0:x5=1; 0:x7=1; ]}
[]
candidate_ppo: [R];po;[R], cur_failed_litmus_tests: [], passed? True

[R];po;[R] pass test
==== candidate ppo ====
[R];po;[R] [R];po;[R] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-6.litmus
synth ppo by litmus test 4
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-9': [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-9': [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]}
[]
synth ppo by litmus test 5
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-7': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
now_herd_logs_ppo_remove {'x86-7': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
[]
synth ppo by litmus test 6
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-8': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
now_herd_logs_ppo_remove {'x86-8': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
[]
iterate 1 final validate:
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
check cat array final start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
check cat arrat final end
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-1': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=0; , 1:x5=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-1': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
x86-1
[1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
[1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=0; , 1:x5=1; 1:x7=1; ]
['x86-1']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-2': [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]}
now_herd_logs_ppo_remove {'x86-2': [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-10': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-10': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-6': [1:x5=0; 2:x5=0; 2:x7=0; , 1:x5=0; 2:x5=0; 2:x7=1; , 1:x5=0; 2:x5=1; 2:x7=0; , 1:x5=0; 2:x5=1; 2:x7=1; , 1:x5=1; 2:x5=0; 2:x7=0; , 1:x5=1; 2:x5=0; 2:x7=1; , 1:x5=1; 2:x5=1; 2:x7=1; ]}
now_herd_logs_ppo_remove {'x86-6': [1:x5=0; 2:x5=0; 2:x7=0; , 1:x5=0; 2:x5=0; 2:x7=1; , 1:x5=0; 2:x5=1; 2:x7=0; , 1:x5=0; 2:x5=1; 2:x7=1; , 1:x5=1; 2:x5=0; 2:x7=0; , 1:x5=1; 2:x5=0; 2:x7=1; , 1:x5=1; 2:x5=1; 2:x7=1; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-9': [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-9': [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-7': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
now_herd_logs_ppo_remove {'x86-7': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-8': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
now_herd_logs_ppo_remove {'x86-8': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
[]
final validate False
failed_litmus_tests ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-1.litmus']
now is the 2 iteration
synth ppo by litmus test 0
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-1': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=0; , 1:x5=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-1': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
x86-1
[1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]
[1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=0; , 1:x5=1; 1:x7=1; ]
['x86-1']
synth ppo by litmus test ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-1.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
validate litmus by tgt_mm
{0:x5=1; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> sw x5, 0(x7) | <0x04> lw x7, 0(x8) ;

QType.Exists (1:x5==1/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 3
1:x5=0; 1:x7=0;  => 1
1:x5=0; 1:x7=1;  => 1
1:x5=1; 1:x7=1;  => 1
Time x86-1  0.0152s
#Executions: 18

validate litmus by cur_mm
{0:x5=1; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> sw x5, 0(x7) | <0x04> lw x7, 0(x8) ;

QType.Exists (1:x5==1/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x5=0; 1:x7=0;  => 1
1:x5=0; 1:x7=1;  => 1
1:x5=1; 1:x7=0;  => 1
1:x5=1; 1:x7=1;  => 1
Time x86-1  0.0168s
#Executions: 18

failed file: /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-1.litmus
strengthen,s,exe 1:x5=1; 1:x7=0;  [P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	]
--------------create constraint-------------------------
use constraint extract ppo from e1,e2 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, 'po')
now check the paths P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	
[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, 'po')]
from this path get ppo
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 True True
candidate_add_ppo W;po;W
all_rels
rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
rel --: None P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
rel --: None P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
rel P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
rel P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po']
python_func_string 
def ppo_candidate_func__1(ra, e1: Event, e2: Event) -> bool:
    return ra.W(e1) and ra.po(e1,e2) and ra.W(e2)

add_rels
add rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 True True ['po']
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, 'po')]]
need_check_ppo [W];po;[W] target_ppo [W];po;[W]
add_rels_final
add rel final P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 True True ['po']
check all rels
check rel --: None P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 True True ['coe']
check rel --: None P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 True True ['coe']
check rel --: None P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 True False ['rfe']
check rel P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 True False ['rfe']
check rel P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 False True ['fre']
check rel P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	 P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	 False False ['po']
check rel P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	 P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	 True True ['po']
need insert
enter get_path_from_e1_to_e2_by_ppo
events sequence
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, is write event:True
P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, is write event:True
ei,ej,relations, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	(W), P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	(W), ['po']
this path is True
(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, 'po')
get_all_paths_from_e1_to_e2 [[(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, 'po')]]
need_check_ppo [W];po;[W] target_ppo [W];po;[W]
insert_path [(P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, 'po')]
{}
filter_cycle [[P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	, P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	]]
ppo [W];po;[W]
e1 P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
e2 P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	
cycle str
P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
cycle str after change
P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	
P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	
P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	
P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	
start_relation rfe
end relation fre
path_single_ppo [W];po;[W]
other_single_ppo rfe;[R];po;[R];fre
path_single_ppo justify [W];po;[W]
other_single_ppo justify rfe;[R];po;[R];fre
diy_cycle PodWW Rfe PodRR Fre
stengthen state, 1:x5=1; 1:x7=0;  <src.tracesynth.analysis.rel.GlobalRelationAnalyzer object at 0x7f0dbfb360f0> [P0: <0x04>	sw x5_p0_0, 0(x7_p0_0)	, P1: <0x00>	lw x5_p1_1, 0(x6_p1_0)	, P1: <0x04>	lw x7_p1_1, 0(x8_p1_0)	, P0: <0x00>	sw x5_p0_0, 0(x6_p0_0)	] [<src.tracesynth.synth.constraint.Constraint object at 0x7f0dc05bc2c0>] False
{0:x5=1; 0:x6=x; 0:x7=y; 1:x6=y; 1:x8=x}
         P0         |         P1          ;
<0x00> sw x5, 0(x6) | <0x00> lw x5, 0(x6) ;
<0x04> sw x5, 0(x7) | <0x04> lw x7, 0(x8) ;

QType.Exists (1:x5==1/\1:x7==0)

Progress [1/1]: |██████████████████████████████████████████████████| 100.0%

States 4
1:x5=0; 1:x7=0;  => 1
1:x5=0; 1:x7=1;  => 1
1:x5=1; 1:x7=0;  => 1
1:x5=1; 1:x7=1;  => 1
Time x86-1  0.0175s
#Executions: 18

complete exe list
get new mm
uninit_func_list
ppo_candidate_func23 R;po;W 
def ppo_candidate_func23(ra, e1: Event, e2: Event) -> bool:
    return ra.R(e1) and ra.po(e1,e2) and ra.W(e2)
 PPOInitFlag.Verified
ppo_candidate_func24 (R;po\(po-loc;W;po-loc)\(rsw);R)\(AMO;po-loc;R) 
def ppo_candidate_func24(ra, e1: Event, e2) -> bool:
    return all([ra.R(e1) and ra.po(e1,e2) and not (ra.po_loc(e1,e3) and ra.W(e3) and ra.po_loc(e3,e2)) and not (ra.rsw(e1,e2)) and ra.R(e2) and not (ra.AMO(e1) and ra.po_loc(e1,e4) and ra.R(e4))  for e3 in ra.execution  for e4 in ra.execution ])
#  PPOInitFlag.Verified
init failed: 1
start synth
any_ppo size: 1
candidate_ppos size: 1
candidate_ppo: [W];po;[W], relax is False
ID: 0 cur candidate_ppo: [W];po;[W],relax is False
[W];po;[W]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
[]
ppo [W];po;[W] contain_flag False can_relax_flag False
add ppo [W];po;[W] PPOValidFlag.Valid
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
before_cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[R];po;[W]', '([R];po\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])']
after cat_str_array ['[R];po-loc;[W]', '[W];po-loc;[W]', '([R];po-loc\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[XSc];rfi;[R]', '[AMO];rfi;[R]', '[R];fencerel(Fence.rw.rw);[W]', '[W];fencerel(Fence.rw.rw);[R]', '[W];fencerel(Fence.rw.rw);[W]', '[R];fencerel(Fence.rw.rw);[R]', '[AQ];po;[W]', '[AQ];po;[R]', '[W];po;[RL]', '[R];po;[RL]', '[RL];po;[AQ]', '[XLr];rmw;[XSc]', '[R];addr;[W]', '[R];addr;[R]', '[R];data;[W]', '[R];ctrl;[W]', '[R];addr;[W];rfi;[R]', '[R];data;[W];rfi;[R]', '[R];addr;[W];po;[W]', '[R];addr;[R];po;[W]', '[R];po;[W]', '([R];po\\(po-loc;[W];po-loc)\\(rsw);[R])\\([AMO];po-loc;[R])', '[W];po;[W]']
ppo [W];po;[W] index 0
diyone7 cmd: eval $(opam env); diyone7 -arch RISC-V -obs local -name /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_W_PodWW_Rfe_PodRR_Fre.litmus PodWW Rfe PodRR Fre
[W];po;[W]
test use herd
old_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
new_cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[W];po;[W]
ppo [W];po;[W]
new_test_path_list ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_W_PodWW_Coe_Fence_rw_rwdWW_Coe.litmus']
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-0.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_po_W_PodWW_Coe_Fence_rw_rwdWW_Coe': [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]}
now_herd_logs_ppo_remove {'W_po_W_PodWW_Coe_Fence_rw_rwdWW_Coe': [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; , 0:x9=2; 1:x9=2; ]}
W_po_W_PodWW_Coe_Fence_rw_rwdWW_Coe
[0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; , 0:x9=2; 1:x9=2; ]
[0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]
['W_po_W_PodWW_Coe_Fence_rw_rwdWW_Coe']
check ppo [W];po;[W]
new_test_paths ['/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_W_PodWW_Coe_Fence_rw_rwdWW_Coe.litmus']
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_po_W_PodWW_Coe_Fence_rw_rwdWW_Coe': [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]}
now_herd_logs_ppo_remove {'W_po_W_PodWW_Coe_Fence_rw_rwdWW_Coe': [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]}
[]
check ppo [W];po;[W] True
===== run all new tests on the validated candidate ppos =====
check these ppo
ID0:candidate_ppo [W];po;[W]
start check
check counter ppo
ppo:[W];po;[W] => counter_ppo:
-----------------
ID0:candidate_ppo [W];po;[W]
before add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
end add cat array
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
check cat array start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[W];po;[W]
check cat array end
check litmus test suite
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-1.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../output/new_tests/W_po_W_PodWW_Coe_Fence_rw_rwdWW_Coe.litmus
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-1': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-1': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'W_po_W_PodWW_Coe_Fence_rw_rwdWW_Coe': [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]}
now_herd_logs_ppo_remove {'W_po_W_PodWW_Coe_Fence_rw_rwdWW_Coe': [0:x9=1; 1:x9=1; , 0:x9=1; 1:x9=2; , 0:x9=2; 1:x9=1; ]}
[]
candidate_ppo: [W];po;[W], cur_failed_litmus_tests: [], passed? True

[W];po;[W] pass test
==== candidate ppo ====
[W];po;[W] [W];po;[W] False
finished /home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/experiment/exp2_align_memsynth/x86-1.litmus
synth ppo by litmus test 1
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[W];po;[W]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-2': [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]}
now_herd_logs_ppo_remove {'x86-2': [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]}
[]
synth ppo by litmus test 2
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[W];po;[W]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-10': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-10': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
[]
synth ppo by litmus test 3
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[W];po;[W]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-6': [1:x5=0; 2:x5=0; 2:x7=0; , 1:x5=0; 2:x5=0; 2:x7=1; , 1:x5=0; 2:x5=1; 2:x7=0; , 1:x5=0; 2:x5=1; 2:x7=1; , 1:x5=1; 2:x5=0; 2:x7=0; , 1:x5=1; 2:x5=0; 2:x7=1; , 1:x5=1; 2:x5=1; 2:x7=1; ]}
now_herd_logs_ppo_remove {'x86-6': [1:x5=0; 2:x5=0; 2:x7=0; , 1:x5=0; 2:x5=0; 2:x7=1; , 1:x5=0; 2:x5=1; 2:x7=0; , 1:x5=0; 2:x5=1; 2:x7=1; , 1:x5=1; 2:x5=0; 2:x7=0; , 1:x5=1; 2:x5=0; 2:x7=1; , 1:x5=1; 2:x5=1; 2:x7=1; ]}
[]
synth ppo by litmus test 4
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[W];po;[W]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-9': [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-9': [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]}
[]
synth ppo by litmus test 5
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[W];po;[W]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-7': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
now_herd_logs_ppo_remove {'x86-7': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
[]
synth ppo by litmus test 6
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
now herd cat
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[W];po;[W]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-8': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
now_herd_logs_ppo_remove {'x86-8': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
[]
iterate 2 final validate:
[R];po-loc;[W];po-loc;[R]
[R];po-loc;[R]
[R];rsw;[R]
[R];po-loc;[R]
[AMO];po-loc;[R]
[R];po-loc;[R]
[R];po-loc;[W];po-loc;[R]
[R];po;[R]
[R];rsw;[R]
[R];po;[R]
[AMO];po-loc;[R]
[R];po;[R]
check cat array final start
[R];po-loc;[W]
[W];po-loc;[W]
([R];po-loc\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[XSc];rfi;[R]
[AMO];rfi;[R]
[R];fencerel(Fence.rw.rw);[W]
[W];fencerel(Fence.rw.rw);[R]
[W];fencerel(Fence.rw.rw);[W]
[R];fencerel(Fence.rw.rw);[R]
[AQ];po;[W]
[AQ];po;[R]
[W];po;[RL]
[R];po;[RL]
[RL];po;[AQ]
[XLr];rmw;[XSc]
[R];addr;[W]
[R];addr;[R]
[R];data;[W]
[R];ctrl;[W]
[R];addr;[W];rfi;[R]
[R];data;[W];rfi;[R]
[R];addr;[W];po;[W]
[R];addr;[R];po;[W]
[R];po;[W]
([R];po\(po-loc;[W];po-loc)\(rsw);[R])\([AMO];po-loc;[R])
[W];po;[W]
check cat arrat final end
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-1': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-1': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-2': [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]}
now_herd_logs_ppo_remove {'x86-2': [0:x5=0; 1:x5=0; , 0:x5=0; 1:x5=1; , 0:x5=1; 1:x5=0; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-10': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-10': [1:x5=0; 1:x7=0; , 1:x5=0; 1:x7=1; , 1:x5=1; 1:x7=1; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-6': [1:x5=0; 2:x5=0; 2:x7=0; , 1:x5=0; 2:x5=0; 2:x7=1; , 1:x5=0; 2:x5=1; 2:x7=0; , 1:x5=0; 2:x5=1; 2:x7=1; , 1:x5=1; 2:x5=0; 2:x7=0; , 1:x5=1; 2:x5=0; 2:x7=1; , 1:x5=1; 2:x5=1; 2:x7=1; ]}
now_herd_logs_ppo_remove {'x86-6': [1:x5=0; 2:x5=0; 2:x7=0; , 1:x5=0; 2:x5=0; 2:x7=1; , 1:x5=0; 2:x5=1; 2:x7=0; , 1:x5=0; 2:x5=1; 2:x7=1; , 1:x5=1; 2:x5=0; 2:x7=0; , 1:x5=1; 2:x5=0; 2:x7=1; , 1:x5=1; 2:x5=1; 2:x7=1; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-9': [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]}
now_herd_logs_ppo_remove {'x86-9': [0:x7=0; 1:x7=1; , 0:x7=1; 1:x7=0; , 0:x7=1; 1:x7=1; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-7': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
now_herd_logs_ppo_remove {'x86-7': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
[]
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/rvtso.cat
/home/whq/Desktop/code_list/tracesynth/src/tracesynth/../../tests/input/CAT/change/riscv-1.cat
now_herd_logs_ppo_add {'x86-8': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
now_herd_logs_ppo_remove {'x86-8': [1:x5=0; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=0; 1:x7=1; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=0; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=0; 3:x5=1; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=0; 3:x7=1; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=0; , 1:x5=1; 1:x7=1; 3:x5=1; 3:x7=1; ]}
[]
final validate True
failed_litmus_tests []
[('ppo_candidate_func0', 'R;po;W', '\ndef ppo_candidate_func0(ra, e1: Event, e2: Event) -> bool:\n    return ra.R(e1) and ra.po(e1,e2) and ra.W(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func1', 'R;po;R', '\ndef ppo_candidate_func1(ra, e1: Event, e2: Event) -> bool:\n    return ra.R(e1) and ra.po(e1,e2) and ra.R(e2)\n', <PPOInitFlag.Verified: 3>), ('ppo_candidate_func2', 'W;po;W', '\ndef ppo_candidate_func2(ra, e1: Event, e2: Event) -> bool:\n    return ra.W(e1) and ra.po(e1,e2) and ra.W(e2)\n', <PPOInitFlag.Verified: 3>)]
ppo_list
[R];po;[W]
[R];po;[R]
[W];po;[W]
